# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-23 14:47+0200\n"
"PO-Revision-Date: 2021-07-23 15:01+0200\n"
"Last-Translator: José Manuel Delicado <jmdaweb@hotmail.com>\n"
"Language-Team: \n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ..\python_docs\deprecations.py:3
msgid ""
"The NVDA API must maintain compatibility with add-ons throughout yearly "
"development cycles."
msgstr ""
"La API de NVDA debe mantener la compatibilidad con los complementos a lo "
"largo de los ciclos de desarrollo anuales."

#: ..\python_docs\deprecations.py:4
msgid ""
"The first release of a year, i.e. `20XX.1`, is when the NVDA API can "
"introduce breaking changes."
msgstr ""
"La primera versión de cada año, la `20XX.1`, es cuando la API de NVDA puede "
"introducir cambios disruptivos."

#: ..\python_docs\deprecations.py:5
msgid ""
"In order to improve the NVDA API, changes that will break future "
"compatibility can be implemented, as long they retain backwards "
"compatibility until the `20XX.1` release."
msgstr ""
"Para mejorar la API de NVDA, se pueden implementar cambios que romperán la "
"compatibilidad futura, mientras retengan la compatibilidad hacia atrás "
"hasta la versión `20XX.1`."

#: ..\python_docs\deprecations.py:6
msgid ""
"This can be done by using a version check to automate deprecation. For "
"example, if you wish to replace usages of `foo` with `bar`. When we begin "
"work on `NEXT_YEAR`, `foo` will no longer be part of the NVDA API and all "
"internal usages must be removed prior. "
msgstr ""
"Esto se puede hacer empleando una comprobación de versión para automatizar "
"la obsolescencia. Por ejemplo, si quisieras reemplazar los usos de `foo` "
"por `var`. Cuando empezamos a trabajar en `NEXT_YEAR`, `foo` ya no formará "
"parte de la API de NVDA y se deben eliminar todos los usos internos antes. "

#: ..\python_docs\deprecations.py:7 ..\python_docs\deprecations.py:13
msgid "```python"
msgstr "```python"

#: ..\python_docs\deprecations.py:8
msgid "from buildVersion import version_year"
msgstr "from buildVersion import version_year"

#: ..\python_docs\deprecations.py:9
msgid "if version_year < NEXT_YEAR:"
msgstr "if version_year < NEXT_YEAR:"

#: ..\python_docs\deprecations.py:10
msgid "\tfoo = bar"
msgstr "\tfoo = bar"

#: ..\python_docs\deprecations.py:11 ..\python_docs\deprecations.py:16
msgid "```"
msgstr "```"

#: ..\python_docs\deprecations.py:12
msgid ""
"To ensure a module retains the same symbol names being importable, check "
"across versions what is imported using the NVDA python console."
msgstr ""
"Para asegurar que un módulo mantiene importables los mismos nombres de "
"símbolos, comprueba a través de las versiones qué se importa usando la "
"consola Python de NVDA."

#: ..\python_docs\deprecations.py:14
msgid "import controlTypes"
msgstr "import controlTypes"

#: ..\python_docs\deprecations.py:15
msgid "dir(controlTypes)"
msgstr "dir(controlTypes)"

#: ..\python_docs\deprecations.py:17
msgid ""
"Changes different to moving or renaming symbols need to be considered "
"carefully with a different approach. "
msgstr ""
"Los cambios que vayan más allá de renombrar o eliminar símbolos deben "
"tratarse con cuidado mediante un enfoque diferente. "

#: ..\python_docs\deprecations.py:18
msgid ""
"Any API breaking changes such as deprecations marked for removal should be "
"commented with the year of intended removal, and notes on how to implement "
"the API change as an add-on developer and NVDA developer."
msgstr ""
"Cualquier cambio que rompa la API, como obsolescencias marcadas para su "
"eliminación, debería comentarse junto con el año en que se pretende "
"eliminar, y notas sobre cómo implementar el cambio de API como "
"desarrollador de complementos y desarrollador de NVDA."

#~ msgid ""
#~ "Occasionally changes have to be made to NVDA that will break "
#~ "compatibility with prior versions of the public API. In order to make "
#~ "this predictable for add-on authors, NV Access has adopted a schedule. "
#~ "The first release of each year (starting with 2021.1) will be the "
#~ "opportunity to remove deprecated code, or make other compatibility "
#~ "breaking design changes. Other releases will aim to maintain "
#~ "compatibility, sometimes keeping code but marking it as deprecated. When "
#~ "marking code as deprecated, the definition should have a comment to "
#~ "explain such and the PR that introduces the change will be tagged with "
#~ "the `deprecated/20YY.1`. Where `YY` is the release year."
#~ msgstr ""
#~ "En ocasiones se han tenido que hacer cambios a NVDA que rompen la "
#~ "compatibilidad con versiones anteriores de la API pública. Para hacer "
#~ "esto predecible para los autores de complementos, NV Access ha adoptado "
#~ "una programación. La primera publicación de cada año (comenzando con la "
#~ "2021.1) supondrá una oportunidad para eliminar código obsoleto, o hacer "
#~ "otros cambios de diseño que rompan la compatibilidad. Las otras "
#~ "publicaciones intentarán mantener la compatibilidad, conservando en "
#~ "ocasiones código pero marcándolo como obsoleto. Al marcar código como "
#~ "obsoleto, la definición debería incluir un comentario explicándolo y la "
#~ "solicitud de cambios donde se introduce el cambio debería etiquetarse "
#~ "como `deprecated/20YY.1`, donde `YY` es el año de publicación."
