# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-04 17:28+0200\n"
"PO-Revision-Date: 2021-09-08 09:22+0200\n"
"Last-Translator: José Manuel Delicado <jmdaweb@hotmail.com>\n"
"Language-Team: \n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"X-Generator: Poedit 3.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ..\python_docs\developer_guide.py:3
msgid "# NVDA 2021.1 Developer Guide"
msgstr "# Guía del desarrollador de NVDA 2021.1"

#: ..\python_docs\developer_guide.py:4
msgid "## Table of Contents"
msgstr "## Índice"

#: ..\python_docs\developer_guide.py:5
msgid "  * 1\\. Introduction"
msgstr "  * 1\\. Introducción"

#: ..\python_docs\developer_guide.py:6
msgid "    * 1.1. A Note About Python"
msgstr "    * 1.1. Una nota sobre Python"

#: ..\python_docs\developer_guide.py:7
msgid "  * 2\\. Translation"
msgstr "  * 2\\. Traducción"

#: ..\python_docs\developer_guide.py:8
msgid "    * 2.1. Character Descriptions"
msgstr "    * 2.1. Descripción de caracteres"

#: ..\python_docs\developer_guide.py:9
msgid "    * 2.2. Symbol Pronunciation"
msgstr "    * 2.2. Pronunciación de símbolos"

#: ..\python_docs\developer_guide.py:10
msgid "      * 2.2.1. Defining Complex Symbols"
msgstr "      * 2.2.1. Definición de símbolos complejos"

#: ..\python_docs\developer_guide.py:11
msgid "      * 2.2.2. Defining Symbol Information"
msgstr "      * 2.2.2. Definición de información de símbolos"

#: ..\python_docs\developer_guide.py:12
msgid "  * 3\\. Plugins"
msgstr "  * 3\\. Extensiones"

#: ..\python_docs\developer_guide.py:13
msgid "    * 3.1. Overview"
msgstr "    * 3.1. Descripción"

#: ..\python_docs\developer_guide.py:14
msgid "    * 3.2. Types of Plugins"
msgstr "    * 3.2. Tipos de extensiones"

#: ..\python_docs\developer_guide.py:15
msgid "    * 3.3. Basics of an App Module"
msgstr "    * 3.3. Lo básico de un módulo de aplicación"

#: ..\python_docs\developer_guide.py:16
msgid "    * 3.4. Example 1: An App Module that Beeps on Focus Change Events"
msgstr ""
"    * 3.4. Ejemplo 1: un módulo de aplicación que pita en los eventos de "
"cambio del foco"

#: ..\python_docs\developer_guide.py:17
msgid "    * 3.5. App modules for hosted apps"
msgstr "    * 3.5. Módulos de aplicación para aplicaciones hospedadas"

#: ..\python_docs\developer_guide.py:18
msgid "    * 3.6. Example 2: an app module for an app hosted by wwahost.exe"
msgstr ""
"    * 3.6. Ejemplo 2: un módulo de aplicación para una aplicación hospedada "
"en wwahost.exe"

#: ..\python_docs\developer_guide.py:19
msgid "    * 3.7. Basics of a Global Plugin"
msgstr "    * 3.7. Lo básico de una extensión global"

#: ..\python_docs\developer_guide.py:20
msgid ""
"    * 3.8. Example 3: a Global Plugin Providing a Script to Announce the "
"NVDA Version"
msgstr ""
"    * 3.8. Ejemplo 3: una extensión global que proporciona un script para "
"verbalizar la versión de NVDA"

#: ..\python_docs\developer_guide.py:21
msgid "    * 3.9. NVDA Objects"
msgstr "    * 3.9. Objetos de NVDA"

#: ..\python_docs\developer_guide.py:22
msgid "    * 3.10. Scripts and Gesture Bindings"
msgstr "    * 3.10. Scripts y asociación de gestos"

#: ..\python_docs\developer_guide.py:23
msgid "      * 3.10.1. Defining script properties"
msgstr "      * 3.10.1. Definición de propiedades de los scripts"

#: ..\python_docs\developer_guide.py:24
msgid ""
"    * 3.11. Example 4: A Global Plugin to Find out Window Class and Control "
"ID"
msgstr ""
"    * 3.11. Ejemplo 4: una extensión global para encontrar la clase de la "
"ventana y el identificador del control"

#: ..\python_docs\developer_guide.py:25
msgid "    * 3.12. Events"
msgstr "    * 3.12. Eventos"

#: ..\python_docs\developer_guide.py:26
msgid "    * 3.13. the App Module SleepMode variable"
msgstr "    * 3.13. La variable SleepMode en módulos de aplicación"

#: ..\python_docs\developer_guide.py:27
msgid "    * 3.14. Example 5: A Sleep Mode App Module"
msgstr "    * 3.14. Ejemplo 5: un módulo de aplicación en modo latente"

#: ..\python_docs\developer_guide.py:28
msgid "    * 3.15. Providing Custom NVDA Object Classes"
msgstr "    * 3.15. Proporcionar clases de objetos personalizados de NVDA"

#: ..\python_docs\developer_guide.py:29
msgid ""
"    * 3.16. Example 6: Command to Retrieve the Length of Text in an Edit "
"Field Using a Custom NVDA Object"
msgstr ""
"    * 3.16. Ejemplo 6: orden para recuperar la longitud del texto en un "
"cuadro de edición usando un objeto de NVDA personalizado"

#: ..\python_docs\developer_guide.py:30
msgid "    * 3.17. Making Small Changes to an NVDA Object in App Modules"
msgstr ""
"    * 3.17. Hacer pequeños cambios a un objeto de NVDA en módulos de "
"aplicación"

#: ..\python_docs\developer_guide.py:31
msgid ""
"    * 3.18. Example 7: Labelling the Notepad Edit Field Using event"
"\\_NVDAObject\\_init"
msgstr ""
"    * 3.18. Ejemplo 7: etiquetando el cuadro de edición del bloc de notas "
"usando event\\_NVDAObject\\_init"

#: ..\python_docs\developer_guide.py:32
msgid "  * 4\\. Packaging Code as NVDA Add-ons"
msgstr "  * 4\\. Empaquetado de código como complementos de NVDA"

#: ..\python_docs\developer_guide.py:33
msgid "    * 4.1. Non-ASCII File Names in Zip Archives"
msgstr "    * 4.1. Nombres de fichero no ASCII en archivos Zip"

#: ..\python_docs\developer_guide.py:34
msgid "    * 4.2. Manifest Files"
msgstr "    * 4.2. Archivos de manifiesto"

#: ..\python_docs\developer_guide.py:35
msgid "      * 4.2.1. Available Fields"
msgstr "      * 4.2.1. Campos disponibles"

#: ..\python_docs\developer_guide.py:36
msgid "      * 4.2.2. An Example Manifest File"
msgstr "      * 4.2.2. Ejemplo de archivo de manifiesto"

#: ..\python_docs\developer_guide.py:37
msgid "    * 4.3. Plugins and Drivers"
msgstr "    * 4.3. Extensiones y controladores"

#: ..\python_docs\developer_guide.py:38
msgid "    * 4.4. Optional install / Uninstall code"
msgstr "    * 4.4. Código opcional de instalación y desinstalación"

#: ..\python_docs\developer_guide.py:39
msgid "      * 4.4.1. the onInstall function"
msgstr "      * 4.4.1. La función onInstall"

#: ..\python_docs\developer_guide.py:40
msgid "      * 4.4.2. The onUninstall Function"
msgstr "      * 4.4.2. La función onUninstall"

#: ..\python_docs\developer_guide.py:41
msgid "    * 4.5. Localizing Add-ons"
msgstr "    * 4.5. Traducción de complementos"

#: ..\python_docs\developer_guide.py:42
msgid "      * 4.5.1. Locale-specific Manifest Files"
msgstr "      * 4.5.1. Archivos de manifiesto específicos del idioma"

#: ..\python_docs\developer_guide.py:43
msgid "      * 4.5.2. Locale-specific Messages"
msgstr "      * 4.5.2. Mensajes específicos del idioma"

#: ..\python_docs\developer_guide.py:44
msgid "    * 4.6. Add-on Documentation"
msgstr "    * 4.6. Documentación del complemento"

#: ..\python_docs\developer_guide.py:45
msgid "  * 5\\. NVDA Python Console"
msgstr "  * 5\\. La consola Python de NVDA"

#: ..\python_docs\developer_guide.py:46
msgid "    * 5.1. Usage"
msgstr "    * 5.1. Modo de uso"

#: ..\python_docs\developer_guide.py:47
msgid "    * 5.2. Namespace"
msgstr "    * 5.2. Espacio de nombres"

#: ..\python_docs\developer_guide.py:48
msgid "      * 5.2.1. Automatic Imports"
msgstr "      * 5.2.1. Importaciones automáticas"

#: ..\python_docs\developer_guide.py:49
msgid "      * 5.2.2. Snapshot Variables"
msgstr "      * 5.2.2. Variables instantáneas"

#: ..\python_docs\developer_guide.py:50
msgid "    * 5.3. Tab completion"
msgstr "    * 5.3. Autocompletado con el tabulador"

#: ..\python_docs\developer_guide.py:51
msgid "  * 6\\. Remote Python Console"
msgstr "  * 6\\. La consola Python remota"

#: ..\python_docs\developer_guide.py:52
msgid "    * 6.1. Usage "
msgstr "    * 6.1. Modo de uso "

#: ..\python_docs\developer_guide.py:53
msgid "## 1\\. Introduction"
msgstr "## 1\\. Introducción"

#: ..\python_docs\developer_guide.py:54
msgid ""
"This guide provides information concerning NVDA development, including "
"translation and the development of components for NVDA. "
msgstr ""
"Esta guía proporciona información relacionada con el desarrollo de NVDA, "
"incluyendo traducción y desarrollo de componentes para este lector. "

#: ..\python_docs\developer_guide.py:55
msgid "### 1.1. A Note About Python"
msgstr "### 1.1. Una nota sobre Python"

#: ..\python_docs\developer_guide.py:56
msgid ""
"NVDA and its components are primarily written in the Python programming "
"language. It is not the goal of this guide to teach you Python, though "
"examples are provided through out this guide which will help to familiarise "
"you with the Python syntax. Documentation and other resources related to the "
"Python language can be found at [www.python.org/](http://www.python.org/)"
msgstr ""
"NVDA y sus componentes están escritos principalmente en el lenguaje de "
"programación Python. El propósito de esta guía no es enseñarte Python, "
"aunque se proporcionan ejemplos a lo largo de la guía que te ayudarán a "
"familiarizarte con la sintaxis Python. Se pueden encontrar documentación y "
"otros recursos relacionados con el lenguaje de programación Python en [www."
"python.org/](http://www.python.org/)"

#: ..\python_docs\developer_guide.py:57
msgid "## 2\\. Translation"
msgstr "##2\\. Traducción"

#: ..\python_docs\developer_guide.py:58
msgid ""
"In order to support multiple languages/locales, NVDA must be translated and "
"data specific to the locale must be provided. This section only includes "
"information on custom NVDA file formats required for translation. Other "
"items need to be translated, such as the NVDA user interface and "
"documentation, but these use standard file formats. For complete "
"documentation about translating NVDA, please see <https://github.com/"
"nvaccess/nvda/wiki/Translating>"
msgstr ""
"Para dar soporte a múltiples idiomas / regiones, NVDA debe traducirse y "
"deben proporcionarse datos específicos de la región. Esta sección sólo "
"incluye información sobre formatos de archivo personalizados de NVDA "
"necesarios para la traducción. Es necesario traducir otros elementos, como "
"la interfaz de usuario de NVDA y la documentación, pero aquí se usan "
"formatos de archivo estándar. Para acceder a la documentación completa sobre "
"la traducción de NVDA, visita la sección correspondiente en el área de "
"desarrollo de nuestra web."

#: ..\python_docs\developer_guide.py:59
msgid "### 2.1. Character Descriptions"
msgstr "### 2.1. Descripción de caracteres"

#: ..\python_docs\developer_guide.py:60
msgid ""
"Sometimes, it can be very difficult or even impossible to distinguish one "
"character from another. For example, two characters might be pronounced the "
"same way, even though they are actually different characters. To help users "
"when this occurs, character descriptions can be provided which describe the "
"character in a unique way. "
msgstr ""
"En ocasiones, puede ser muy difícil o incluso imposible distinguir un "
"carácter de otro. Por ejemplo, se podrían pronunciar dos caracteres de la "
"misma manera, incluso aunque sean caracteres realmente diferentes. Para "
"ayudar a los usuarios cuando esto ocurre, pueden proporcionarse "
"descripciones de caracteres que describen el carácter de una forma única. "

#: ..\python_docs\developer_guide.py:61
msgid ""
"Character descriptions can be provided for a locale in a file named "
"characterDescriptions.dic in the directory for the locale. This is a UTF-8 "
"encoded text file. Blank lines and lines beginning with a \"\\#\" character "
"are ignored. All other lines should contain a character, followed by a tab, "
"then one or more descriptions separated by tabs. "
msgstr ""
"Se pueden ofrecer descripciones de caracteres para un idioma en un archivo "
"llamado characterDescriptions.dic en el directorio del idioma. Se trata de "
"un archivo de texto codificado en UTF-8. Las líneas en blanco o las líneas "
"que comienzan con el carácter \"\\#\" se ignoran. Todas las demás líneas "
"deberían contener un carácter, seguido de un tabulador, y una o más "
"descripciones separadas por tabuladores. "

#: ..\python_docs\developer_guide.py:62
msgid "For example: "
msgstr "Por ejemplo: "

#: ..\python_docs\developer_guide.py:63 ..\python_docs\developer_guide.py:64
#: ..\python_docs\developer_guide.py:68 ..\python_docs\developer_guide.py:78
#: ..\python_docs\developer_guide.py:79 ..\python_docs\developer_guide.py:81
#: ..\python_docs\developer_guide.py:83 ..\python_docs\developer_guide.py:84
#: ..\python_docs\developer_guide.py:87 ..\python_docs\developer_guide.py:91
#: ..\python_docs\developer_guide.py:92 ..\python_docs\developer_guide.py:94
#: ..\python_docs\developer_guide.py:112 ..\python_docs\developer_guide.py:113
#: ..\python_docs\developer_guide.py:115 ..\python_docs\developer_guide.py:117
#: ..\python_docs\developer_guide.py:118 ..\python_docs\developer_guide.py:120
#: ..\python_docs\developer_guide.py:122 ..\python_docs\developer_guide.py:123
#: ..\python_docs\developer_guide.py:125 ..\python_docs\developer_guide.py:127
#: ..\python_docs\developer_guide.py:128 ..\python_docs\developer_guide.py:130
#: ..\python_docs\developer_guide.py:160 ..\python_docs\developer_guide.py:161
#: ..\python_docs\developer_guide.py:165 ..\python_docs\developer_guide.py:167
#: ..\python_docs\developer_guide.py:169 ..\python_docs\developer_guide.py:174
#: ..\python_docs\developer_guide.py:176 ..\python_docs\developer_guide.py:187
#: ..\python_docs\developer_guide.py:188 ..\python_docs\developer_guide.py:192
#: ..\python_docs\developer_guide.py:194 ..\python_docs\developer_guide.py:196
#: ..\python_docs\developer_guide.py:201 ..\python_docs\developer_guide.py:203
#: ..\python_docs\developer_guide.py:216 ..\python_docs\developer_guide.py:217
#: ..\python_docs\developer_guide.py:221 ..\python_docs\developer_guide.py:226
#: ..\python_docs\developer_guide.py:228 ..\python_docs\developer_guide.py:232
#: ..\python_docs\developer_guide.py:234 ..\python_docs\developer_guide.py:295
#: ..\python_docs\developer_guide.py:296 ..\python_docs\developer_guide.py:298
#: ..\python_docs\developer_guide.py:300 ..\python_docs\developer_guide.py:301
#: ..\python_docs\developer_guide.py:309 ..\python_docs\developer_guide.py:311
#: ..\python_docs\developer_guide.py:327 ..\python_docs\developer_guide.py:328
#: ..\python_docs\developer_guide.py:332 ..\python_docs\developer_guide.py:337
#: ..\python_docs\developer_guide.py:339 ..\python_docs\developer_guide.py:349
#: ..\python_docs\developer_guide.py:359 ..\python_docs\developer_guide.py:361
#: ..\python_docs\developer_guide.py:394 ..\python_docs\developer_guide.py:395
#: ..\python_docs\developer_guide.py:398 ..\python_docs\developer_guide.py:400
#: ..\python_docs\developer_guide.py:402 ..\python_docs\developer_guide.py:404
#: ..\python_docs\developer_guide.py:419 ..\python_docs\developer_guide.py:420
#: ..\python_docs\developer_guide.py:427 ..\python_docs\developer_guide.py:429
#: ..\python_docs\developer_guide.py:433 ..\python_docs\developer_guide.py:435
#: ..\python_docs\developer_guide.py:439 ..\python_docs\developer_guide.py:441
#: ..\python_docs\developer_guide.py:451 ..\python_docs\developer_guide.py:452
#: ..\python_docs\developer_guide.py:456 ..\python_docs\developer_guide.py:458
#: ..\python_docs\developer_guide.py:463 ..\python_docs\developer_guide.py:492
#: ..\python_docs\developer_guide.py:493 ..\python_docs\developer_guide.py:505
msgid "    "
msgstr "    "

#: ..\python_docs\developer_guide.py:65
msgid "    # This is a comment."
msgstr "    # Esto es un comentario."

#: ..\python_docs\developer_guide.py:66
msgid "    a\talpha"
msgstr "    a\talpha"

#: ..\python_docs\developer_guide.py:67
msgid "    b\tbravo"
msgstr "    b\tbravo"

#: ..\python_docs\developer_guide.py:69
msgid "See the file locale\\en\\characterDescriptions.dic for a full example. "
msgstr ""
"Mira el archivo locale\\en\\characterDescriptions.dic para ver un ejemplo "
"completo. "

#: ..\python_docs\developer_guide.py:70
msgid ""
"In most cases, the characters in this file should be a single lower case "
"character. It is assumed that characters will have the same description "
"regardless of their case, so upper case characters are converted to lower "
"case before looking up their character descriptions. "
msgstr ""
"En la mayoría de casos, los caracteres en este archivo deberían de constar "
"de una única letra minúscula. Se asume que los caracteres tendrán la misma "
"descripción independientemente de su estado, por lo que los que están en "
"mayúscula se convierten a minúscula antes de mirar sus descripciones. "

#: ..\python_docs\developer_guide.py:71
msgid "### 2.2. Symbol Pronunciation"
msgstr "### 2.2. Pronunciación de símbolos"

#: ..\python_docs\developer_guide.py:72
msgid ""
"It is often useful to hear punctuation and other symbols pronounced as words "
"when reading text, particularly when moving by character. Unfortunately, the "
"pronunciation of symbols is inconsistent between speech synthesisers and "
"many synthesisers do not speak many symbols and/or do not allow control over "
"what symbols are spoken. Therefore, NVDA allows information about symbol "
"pronunciation to be provided. "
msgstr ""
"Con frecuencia es útil oír la puntuación y otros símbolos pronunciados como "
"palabras al leer texto, particularmente al moverse por caracteres. "
"Desafortunadamente, la pronunciación de símbolos es inconsistente entre "
"sintetizadores de voz, y muchos de ellos no pronuncian muchos símbolos y / o "
"no permiten controlar qué símbolos se pronuncian. En consecuencia, NVDA "
"permite ofrecer información sobre la pronunciación de símbolos. "

#: ..\python_docs\developer_guide.py:73
msgid ""
"This is done for a locale by providing a file named symbols.dic in the "
"directory for the locale. This is a UTF-8 encoded text file. Blank lines and "
"lines beginning with a \"\\#\" character are ignored. All locales implicitly "
"inherit the symbol information for English, though any of this information "
"can be overridden. "
msgstr ""
"Esto se hace para un idioma proporcionando un archivo llamado symbols.dic en "
"el directorio del idioma. Se trata de un archivo de texto plano codificado "
"en UTF-8. Las líneas en blanco y aquellas que empiecen con un carácter \"\\#"
"\" se ignoran. Todos los idiomas heredan de forma implícita la información "
"de símbolos del inglés, aunque toda esta información puede sobreescribirse. "

#: ..\python_docs\developer_guide.py:74
msgid "The file contains two sections. "
msgstr "El archivo contiene dos secciones. "

#: ..\python_docs\developer_guide.py:75
msgid "#### 2.2.1. Defining Complex Symbols"
msgstr "#### 2.2.1. Definición de símbolos complejos"

#: ..\python_docs\developer_guide.py:76
msgid ""
"The first section is optional and defines regular expression patterns for "
"complex symbols. Complex symbols are symbols which aren't simply a character "
"or sequence of characters, but instead require a more complicated match. An "
"example is the full stop \\(.\\) sentence ending in English. The \".\" is "
"used for multiple purposes, so a more complicated check is required to "
"determine whether this refers to the end of a sentence. "
msgstr ""
"La primera sección es opcional y define patrones de expresiones regulares "
"para símbolos complejos. Los símbolos complejos son símbolos que no constan "
"simplemente de un carácter o secuencia de caracteres, sino que en su lugar "
"necesitan una expresión más complicada. Un ejemplo es el punto \\(.\\) de "
"fin de frase en inglés. El \".\" se usa con múltiples propósitos, por lo que "
"se necesita una comprobación más complicada para determinar si se trata del "
"punto final de una frase. "

#: ..\python_docs\developer_guide.py:77
msgid "The complex symbols section begins with the line: "
msgstr "La sección de símbolos complejos comienza con la línea: "

#: ..\python_docs\developer_guide.py:80
msgid "    complexSymbols:"
msgstr "    complexSymbols:"

#: ..\python_docs\developer_guide.py:82
msgid ""
"Subsequent lines contain a textual identifier used to identify the symbol, a "
"tab and the regular expression pattern for that symbol. For example: "
msgstr ""
"Las siguientes líneas contienen un identificador textual usado para "
"identificar el símbolo, un tabulador y un patrón de expresión regular para "
"ese símbolo. Por ejemplo: "

#: ..\python_docs\developer_guide.py:85
msgid "    . sentence ending\t(?<=[^\\s.])\\.(?=[\\\"')\\s]|$)"
msgstr "    . final de frase\t(?<=[^\\s.])\\.(?=[\\\"')\\s]|$)"

#: ..\python_docs\developer_guide.py:86
#, python-brace-format
msgid "    dates with .\t\\b(\\d\\d)\\.(\\d\\d)\\.(\\d{2}|\\d{4})\\b"
msgstr "    fechas con .\t\\b(\\d\\d)\\.(\\d\\d)\\.(\\d{2}|\\d{4})\\b"

#: ..\python_docs\developer_guide.py:88
msgid ""
"Again, the English symbols are inherited by all other locales, so you need "
"not include any complex symbols already defined for English. "
msgstr ""
"Una vez más, todos los idiomas heredan los símbolos del inglés, por lo que "
"no es necesario que incluyas símbolos complejos ya definidos en inglés. "

#: ..\python_docs\developer_guide.py:89
msgid "#### 2.2.2. Defining Symbol Information"
msgstr "#### 2.2.2. Definición de la información de símbolos"

#: ..\python_docs\developer_guide.py:90
msgid ""
"The second section provides information about when and how to pronounce all "
"symbols. It begins with the line: "
msgstr ""
"La segunda sección proporciona información sobre cuándo y cómo pronunciar "
"todos los símbolos. Comienza con la línea: "

#: ..\python_docs\developer_guide.py:93
msgid "    symbols:"
msgstr "    symbols:"

#: ..\python_docs\developer_guide.py:95
msgid ""
"Subsequent lines should contain several fields separated by tabs. The only "
"mandatory fields are the identifier and replacement. The default will be "
"used for omitted fields. The fields are as follows: "
msgstr ""
"Las siguientes líneas deberían contener varios campos separados por "
"tabuladores. Los únicos campos obligatorios son el identificador y el "
"reemplazo. El valor por defecto se aplicará en los campos omitidos. Los "
"campos son los siguientes: "

#: ..\python_docs\developer_guide.py:96
msgid ""
"  * identifier: The identifier of the symbol. In most cases, this is just "
"the character or characters of the symbol. However, it can also be the "
"identifier of a complex symbol. Certain characters cannot be typed into the "
"file, so the following special sequences can be used: "
msgstr ""
"  * Identificador: el identificador del símbolo. En la mayoría de casos, se "
"trata del carácter o caracteres del símbolo. Sin embargo, también puede ser "
"el identificador de un símbolo complejo. Ciertos caracteres no pueden "
"escribirse en el archivo, por lo que deben usarse las siguientes secuencias "
"especiales en estos casos: "

#: ..\python_docs\developer_guide.py:97
msgid "    * \\0: null "
msgstr "    * \\0: nulo "

#: ..\python_docs\developer_guide.py:98
msgid "    * \\t: tab "
msgstr "    * \\t: tabulador "

#: ..\python_docs\developer_guide.py:99
msgid "    * \\n: line feed "
msgstr "    * \\n: salto de línea "

#: ..\python_docs\developer_guide.py:100
msgid "    * \\r: carriage return "
msgstr "    * \\r: retorno de carro "

#: ..\python_docs\developer_guide.py:101
msgid "    * \\f: form feed "
msgstr "    * \\f: salto de página "

#: ..\python_docs\developer_guide.py:102
msgid ""
"    * \\\\\\#: \\# character \\(needed because \\# at the start of a line "
"denotes a comment\\) "
msgstr ""
"    * \\\\\\#: el carácter \\# \\(necesario porque \\# al comienzo de una "
"línea la convierte en comentario\\) "

#: ..\python_docs\developer_guide.py:103
msgid ""
"  * replacement: The text which should be spoken for the symbol. If the "
"symbol is a complex symbol, \\1, \\2, etc. can be used to refer to the "
"groups matches, which will be inlined in the replacement, allowing for "
"simpler rules. This also means that to get a \\ character in the "
"replacement, one has to type \\\\\\\\. "
msgstr ""
"  * reemplazo: el texto que se debería verbalizar para el símbolo. Si se "
"trata de un símbolo complejo, se pueden usar \\1, \\2, etc. para hacer "
"referencia a los grupos de coincidencias, que se incluirán en el reemplazo "
"para permitir reglas más simples. Esto también significa que para conseguir "
"un carácter \\ en el reemplazo, hay que escribir \\\\\\\\. "

#: ..\python_docs\developer_guide.py:104
msgid ""
"  * level: The symbol level at which the symbol should be spoken. The symbol "
"level is configured by the user and specifies the amount of symbols that "
"should be spoken. This field should contain one of the levels \"none\", "
"\"some\", \"most\", \"all\" or \"char\", or \"-\" to use the default. \"char"
"\" means that the symbol should only be pronounced when moving by character. "
"The default is to inherit the value or \"all\" if there is nothing to "
"inherit. "
msgstr ""
"  * Nivel: el nivel de símbolos en el que el símbolo debería verbalizarse. "
"El usuario configura el nivel de símbolos, que especifica la cantidad de "
"símbolos que deberían verbalizarse. Este campo debería contener uno de los "
"niveles \"none\", \"some\", \"most\", \"all\" o \"char\", o \"-\" para usar "
"el predeterminado. \"char\" significa que el símbolo sólo debería "
"pronunciarse al moverse por caracteres. Por defecto se hereda el valor o "
"\"all\" si no hay nada que heredar. "

#: ..\python_docs\developer_guide.py:105
msgid ""
"  * preserve: Whether the symbol itself should be preserved to facilitate "
"correct pronunciation by the synthesiser. For example, symbols which cause "
"pauses or inflection \\(such as the comma in English\\) should be preserved. "
"This field should be one of the following: "
msgstr ""
"  * Preservar: indica si el símbolo debería preservarse para facilitar la "
"correcta pronunciación en el sintetizador. Por ejemplo, los símbolos que "
"causan pausas o inflexiones \\(como la coma en inglés\\) deberían "
"preservarse. Este campo debería contener los siguientes valores: "

#: ..\python_docs\developer_guide.py:106
msgid "    * never: Never preserve the symbol. "
msgstr "    * never: nunca preservar el símbolo. "

#: ..\python_docs\developer_guide.py:107
msgid "    * always: Always preserve the symbol. "
msgstr "    * always: preservar el símbolo siempre. "

#: ..\python_docs\developer_guide.py:108
msgid ""
"    * norep: Only preserve the symbol if it is not being replaced; i.e. the "
"user has set symbol level lower than the level of this symbol. "
msgstr ""
"    * norep: preservar el símbolo sólo si no se reemplaza; es decir, el "
"usuario ha configurado el nivel de símbolos por debajo del nivel de este "
"símbolo. "

#: ..\python_docs\developer_guide.py:109
msgid ""
"    * -: Use the default.  The default is to inherit the value or \"never\" "
"if there is nothing to inherit. "
msgstr ""
"    * -: usar predeterminado. Por defecto se hereda el valor o \"never\" si "
"no hay nada que heredar. "

#: ..\python_docs\developer_guide.py:110
msgid ""
"Finally, a display name for the symbol can be provided in a comment after a "
"tab at the end of the line. This will be shown to users when editing the "
"symbol information and is especially useful for translators to define "
"translated names for English complex symbols. "
msgstr ""
"Finalmente, se puede proporcionar un nombre para mostrar el símbolo en un "
"comentario tras un tabulador al final de la línea. Este se mostrará a los "
"usuarios cuando editen la información del símbolo y es especialmente útil "
"para los traductores para definir nombres traducidos para los símbolos "
"complejos en inglés. "

#: ..\python_docs\developer_guide.py:111
msgid "Here are some examples: "
msgstr "Aquí hay algunos ejemplos: "

#: ..\python_docs\developer_guide.py:114
msgid "    (\tleft paren\tmost"
msgstr "    (\tparéntesis izquierdo\tmost"

#: ..\python_docs\developer_guide.py:116
msgid ""
"This means that the \"\\(\" character should be spoken as \"left paren\" "
"only when the symbol level is set to most or higher; i.e. most or all. "
msgstr ""
"Esto significa que el carácter \"\\(\" debería verbalizarse como "
"\"paréntesis izquierdo\" sólo cuando el nivel de símbolos esté establecido "
"en la mayoría o más alto; es decir, la mayoría o todo. "

#: ..\python_docs\developer_guide.py:119
msgid "    ,\tcomma\tall\talways"
msgstr "    ,\tcoma\tall\talways"

#: ..\python_docs\developer_guide.py:121
msgid ""
"This means that the \",\" character should be spoken as \"comma\" when the "
"symbol level is set to all and that the character itself should always be "
"preserved so that the synthesiser will pause appropriately. "
msgstr ""
"Esto significa que el carácter \",\" debería verbalizarse como \"coma\" "
"cuando el nivel de símbolos esté establecido en todo y que el carácter en sí "
"mismo debería preservarse siempre para que el sintetizador pause de forma "
"apropiada. "

#: ..\python_docs\developer_guide.py:124
msgid "    . sentence ending\tpoint\t# . fin de phrase"
msgstr "    . sentence ending\tpoint\t# . fin de phrase"

#: ..\python_docs\developer_guide.py:126
msgid ""
"This line appears in the French symbols.dic file. It means that the \". "
"sentence ending\" complex symbol should be spoken as \"point\". Level and "
"preserve are not specified, so they will be taken from English. A display "
"name is provided so that French users will know what the symbol represents. "
msgstr ""
"Esta línea aparece en el archivo symbols.dic francés. Significa que el "
"símbolo complejo \". sentence ending\" debería verbalizarse como \"point\". "
"Nivel y preservar no se han especificado, por lo que se tomarán del inglés. "
"Se ofrece un nombre para mostrar, por lo que los usuarios franceses sabrán "
"lo que representa el símbolo. "

#: ..\python_docs\developer_guide.py:129
msgid ""
"    dates with .\t\\1 point \\2 point \\3\tall\tnorep\t# date avec points"
msgstr ""
"    dates with .\t\\1 point \\2 point \\3\tall\tnorep\t# date avec points"

#: ..\python_docs\developer_guide.py:131
msgid ""
"This line appears in the French symbols.dic file. It means that the first, "
"second, and third groups of the match will be included, separated by the "
"word 'point'. The effect is thus to replace the dots from the date with the "
"word 'point'. "
msgstr ""
"Esta línea aparece en el archivo symbols.dyc francés. Significa que se "
"incluirán el primer, segundo y tercer grupo de la coincidencia, separados "
"por la palabra 'point'. El efecto sirve para sustituir los puntos de la "
"fecha por la palabra 'point'. "

#: ..\python_docs\developer_guide.py:132
msgid ""
"Please see the file locale\\en\\symbols.dic for the English definitions "
"which are inherited for all locales. This is also a good full example. "
msgstr ""
"Por favor, consulta el archivo locale\\en\\symbols.dic para ver las "
"definiciones inglesas que heredan todos los idiomas. También representa un "
"buen ejemplo completo. "

#: ..\python_docs\developer_guide.py:133
msgid "## 3\\. Plugins"
msgstr "## 3\\. Extensiones"

#: ..\python_docs\developer_guide.py:134
msgid "### 3.1. Overview"
msgstr "### 3.1. Descripción"

#: ..\python_docs\developer_guide.py:135
msgid ""
"Plugins allow you to customize the way NVDA behaves overall or within a "
"particular application. They are able to: "
msgstr ""
"Las extensiones permiten personalizar la forma en que NVDA se comporta en "
"general o dentro de una aplicación en particular. Son capaces de: "

#: ..\python_docs\developer_guide.py:136
msgid ""
"  * Respond to particular events such as focus and object property changes; "
"e.g. when a control changes its name. "
msgstr ""
"  * Responder a eventos particulares como cambios de propiedades de objetos "
"o del foco; por ejemplo, cuando un control cambia su nombre. "

#: ..\python_docs\developer_guide.py:137
msgid ""
"  * Implement commands which are bound to particular key presses or other "
"input. "
msgstr ""
"  * Implementar órdenes que se asocian a ciertas pulsaciones de teclado u "
"otra entrada. "

#: ..\python_docs\developer_guide.py:138
msgid ""
"  * Customise the behaviour of and implement additional functionality for "
"particular controls. "
msgstr ""
"  * Personalizar el comportamiento e implementar funcionalidad adicional "
"para controles concretos. "

#: ..\python_docs\developer_guide.py:139
msgid ""
"  * Customise or add new support for text content and complex documents. "
msgstr ""
"  * Personalizar o añadir nuevo soporte para contenido textual y documentos "
"complejos. "

#: ..\python_docs\developer_guide.py:140
msgid ""
"This section provides an introduction to developing plugins. Developers "
"should consult the code documentation for a complete reference. "
msgstr ""
"Esta sección ofrece una introducción al desarrollo de extensiones. Los "
"desarrolladores deberían consultar la documentación del código para tener "
"una referencia completa. "

#: ..\python_docs\developer_guide.py:141
msgid "### 3.2. Types of Plugins"
msgstr "### 3.2. Tipos de extensiones"

#: ..\python_docs\developer_guide.py:142
msgid "There are two types of plugins. These are: "
msgstr "Hay dos tipos de extensiones. Son los siguientes: "

#: ..\python_docs\developer_guide.py:143
msgid ""
"  * App Modules: code specific to a particular application. The App Module "
"receives all events for a particular application, even if that application "
"is not currently active. When the application is active, any commands that "
"the App Module has bound to key presses or other input can be executed by "
"the user. "
msgstr ""
"  * Módulos de aplicación: código específico para una aplicación concreta. "
"El módulo recibe todos los eventos de la aplicación, incluso si esa "
"aplicación no se encuentra activa actualmente. Cuando la aplicación está "
"activa, cualquier orden que el módulo de aplicación haya asociado a "
"pulsaciones de teclado y otro tipo de entrada puede ser ejecutada por el "
"usuario. "

#: ..\python_docs\developer_guide.py:144
msgid ""
"  * Global Plugins: code global to NVDA; i.e. it is used in all "
"applications. Global Plugins Receive all events for all controls in the "
"Operating System. Any commands bound by a Global Plugin can be executed by "
"the user wherever they are in the operating system, regardless of "
"application. "
msgstr ""
"  * Extensiones globales: código global para NVDA; es decir, se usa en todas "
"las aplicaciones. Las extensiones reciben eventos para todos los controles "
"del sistema operativo. Cualquier orden vinculada a una extensión global "
"puede ser ejecutada por el usuario independientemente de dónde esté en el "
"sistema operativo, sin importar la aplicación. "

#: ..\python_docs\developer_guide.py:145
msgid ""
"If you wish to improve NVDA's access to a particular application, it is most "
"likely you will want to write an App Module. In contrast, if you wish to add "
"some overall functionality to NVDA \\(e.g. a script that announces current "
"Wireless network strength while in any application\\), then a Global Plugin "
"is what you want. "
msgstr ""
"Si quieres mejorar el acceso de NVDA a una aplicación en particular, lo más "
"probable es que necesites escribir un módulo de aplicación. En contraste, si "
"quisieras añadir alguna funcionalidad general a NVDA \\(por ejemplo, un "
"script que verbalice la fuerza de la señal de la red wi-fi desde cualquier "
"aplicación\\), lo que necesitas entonces es una extensión global. "

#: ..\python_docs\developer_guide.py:146
msgid ""
"Both App Modules and Global Plugins share a common look and feel. They are "
"both Python source files \\(with a .py extension\\), they both define a "
"special class containing all events, scripts and bindings, and they both may "
"define custom classes to access controls, text content and complex "
"documents. However, they do differ in some ways. "
msgstr ""
"Tanto los módulos de aplicación como las extensiones globales tienen mucho "
"en común. Ambos son archivos con código fuente Python \\(con una extensión ."
"py\\), ambos definen una clase especial que contiene todos los eventos, "
"scripts y asociaciones, y ambos pueden definir clases personalizadas para "
"acceder a controles, contenido textual y documentos complejos. Sin embargo, "
"difieren en algunos aspectos. "

#: ..\python_docs\developer_guide.py:147
msgid ""
"Custom appModules and globalPlugins can be packaged into NVDA add-ons. This "
"allows easy distribution, and provides a safe way for the user to install "
"and uninstall the custom code. Please refer to the Add-ons section later on "
"in this document. "
msgstr ""
"Las extensiones globales y los módulos de aplicación personalizados pueden "
"empaquetarse como complementos de NVDA. Esto facilita la distribución y "
"proporciona una forma segura para que el usuario instale y desinstale código "
"personalizado. Por favor, lee la sección que habla de complementos más "
"adelante en este documento. "

#: ..\python_docs\developer_guide.py:148
msgid ""
"In order to test the code while developing, you can place it in a special "
"'scratchpad' directory in your NVDA user configuration directory. You will "
"also need to configure NVDA to enable loading of custom code from the "
"Developer Scratchpad Directory, by enabling this in the Advanced category of "
"NVDA's Settings dialog. The Advanced category also contains a button to "
"easily open the Developer Scratchpad directory if enabled. "
msgstr ""
"Para probar el código durante el desarrollo, puedes situarlo en un "
"directorio especial llamado 'scratchpad' en tu carpeta de configuración de "
"usuario de NVDA. También será necesario configurar NVDA para habilitar la "
"carga de código personalizado desde el directorio scratchpad para "
"desarrolladores. Esto se puede hacer desde la categoría Avanzado del diálogo "
"de opciones de NVDA. La categoría Avanzado también contiene un botón para "
"abrir fácilmente la carpeta scratchpad de desarrollo si está activada. "

#: ..\python_docs\developer_guide.py:149
msgid ""
"The following few sections will talk separately about App Modules and Global "
"Plugins. After this point, discussion is again more general. "
msgstr ""
"Las siguientes secciones hablarán por separado de módulos de aplicación y "
"extensiones globales. Después de este punto, la discusión volverá a ser más "
"general. "

#: ..\python_docs\developer_guide.py:150
msgid "### 3.3. Basics of an App Module"
msgstr "### 3.3. Lo básico de un módulo de aplicación"

#: ..\python_docs\developer_guide.py:151
msgid ""
"App Module files have a .py extension, and are named the same as either the "
"main executable of the application for which you wish them to be used or the "
"package inside a host executable. For example, an App Module for notepad "
"would be called notepad.py, as notepad's main executable is called notepad."
"exe. For apps hosted inside host executables, see the section on app modules "
"for hosted apps. "
msgstr ""
"Los archivos de módulo de aplicación tienen una extensión .py, y tienen el "
"mismo nombre del archivo ejecutable de la aplicación para la que quieras que "
"se usen o el nombre del paquete dentro de un ejecutable contenedor. Por "
"ejemplo, un módulo de aplicación para el bloc de notas se llamaría notepad."
"py, ya que el ejecutable principal del bloc de notas se llama notepad.exe. "
"Para las aplicaciones alojadas en un ejecutable contenedor, consulta la "
"sección sobre módulos de aplicación para aplicaciones alojadas. "

#: ..\python_docs\developer_guide.py:152
msgid ""
"App Module files must be placed in the appModules subdirectory of an add-on, "
"or of the scratchpad directory of the NVDA user configuration directory. "
msgstr ""
"Los archivos de módulo de aplicación deben situarse en la subcarpeta "
"appModules de un complemento, o en el directorio scratchpad de la carpeta de "
"configuración de usuario de NVDA. "

#: ..\python_docs\developer_guide.py:153
msgid ""
"App Modules must define a class called AppModule, which inherits from "
"appModuleHandler.AppModule. This class can then define event and script "
"methods, gesture bindings and other code. This will all be covered in depth "
"later. "
msgstr ""
"Los módulos de aplicación deben definir una clase llamada AppModule, que "
"hereda de appModuleHandler.AppModule. Esta clase puede definir métodos de "
"eventos y scripts, asociaciones de gestos y otro código. Esto se cubrirá más "
"tarde en profundidad. "

#: ..\python_docs\developer_guide.py:154
msgid ""
"NVDA loads an App Module for an application as soon as it notices the "
"application is running. The App Module is unloaded once the application is "
"closed or when NVDA is exiting. "
msgstr ""
"NVDA carga el módulo de aplicación para una aplicación dada tan pronto como "
"se da cuenta de que esa aplicación se está ejecutando. El módulo de "
"aplicación se descarga una vez se cierra la aplicación o se sale de NVDA. "

#: ..\python_docs\developer_guide.py:155
msgid "### 3.4. Example 1: An App Module that Beeps on Focus Change Events"
msgstr ""
"### 3.4. Ejemplo 1: un módulo de aplicación que pita ante eventos de cambio "
"de foco"

#: ..\python_docs\developer_guide.py:156
msgid ""
"The following example App Module makes NVDA beep each time the focus changes "
"within the notepad application. This example shows you the basic layout of "
"an App Module. "
msgstr ""
"El siguiente módulo de aplicación de ejemplo hace que NVDA pite cada vez que "
"cambia el foco en la aplicación bloc de notas. Este ejemplo te muestra la "
"estructura básica de un módulo de aplicación. "

#: ..\python_docs\developer_guide.py:157
msgid ""
"Copy and paste the code between \\(but not including\\) the start and end "
"markers into a new text file called notepad.py, which should be saved in the "
"AppModules subdirectory. Be very careful to keep all tabs and spaces intact. "
msgstr ""
"Copia y pega el código entre \\(pero sin incluir\\) los marcadores de inicio "
"y fin en un nuevo archivo de texto llamado notepad.py, que debería guardarse "
"en el subdirectorio appModules. Ten mucho cuidado, debes conservar intactos "
"todos los tabuladores y espacios. "

#: ..\python_docs\developer_guide.py:158
msgid ""
"Once saved in the correct location, either restart NVDA or choose Reload "
"Plugins found under Tools in the NVDA menu. "
msgstr ""
"Una vez guardado en la ubicación correcta, reinicia NVDA o bien elige "
"Recargar plugins en el submenú herramientas del menú de NVDA. "

#: ..\python_docs\developer_guide.py:159
msgid ""
"Finally, open Notepad and move the focus around the application; e.g. move "
"along the menu bar, open some dialog boxes, etc. You should hear beeps each "
"time the focus changes. Note though that if you move outside of Notepad - "
"for instance, to Windows Explorer - you do not hear beeps. "
msgstr ""
"Finalmente, abre el bloc de notas y mueve el foco por la aplicación; por "
"ejemplo muévete a lo largo de la barra de menú, abre algunos cuadros de "
"diálogo, etc. Deberías oír pitidos cada vez que cambie el foco. Date cuenta "
"de que si te mueves fuera del bloc de notas - por ejemplo, al explorador de "
"Windows - no oirás pitidos. "

#: ..\python_docs\developer_guide.py:162 ..\python_docs\developer_guide.py:189
#: ..\python_docs\developer_guide.py:218 ..\python_docs\developer_guide.py:302
#: ..\python_docs\developer_guide.py:329 ..\python_docs\developer_guide.py:396
#: ..\python_docs\developer_guide.py:421 ..\python_docs\developer_guide.py:453
#: ..\python_docs\developer_guide.py:494
msgid "    --- start ---"
msgstr "    --- inicio ---"

#: ..\python_docs\developer_guide.py:163
msgid "    # Notepad App Module for NVDA"
msgstr "    # Módulo de aplicación del bloc de notas para NVDA"

#: ..\python_docs\developer_guide.py:164
msgid "    # Developer guide example 1"
msgstr "    # Ejemplo 1 de la guía del desarrollador"

#: ..\python_docs\developer_guide.py:166 ..\python_docs\developer_guide.py:397
#: ..\python_docs\developer_guide.py:422 ..\python_docs\developer_guide.py:454
msgid "    import appModuleHandler"
msgstr "    import appModuleHandler"

#: ..\python_docs\developer_guide.py:168 ..\python_docs\developer_guide.py:399
#: ..\python_docs\developer_guide.py:428 ..\python_docs\developer_guide.py:457
msgid "    class AppModule(appModuleHandler.AppModule):"
msgstr "    class AppModule(appModuleHandler.AppModule):"

#: ..\python_docs\developer_guide.py:170 ..\python_docs\developer_guide.py:197
msgid "    \tdef event_gainFocus(self, obj, nextHandler):"
msgstr "    \tdef event_gainFocus(self, obj, nextHandler):"

#: ..\python_docs\developer_guide.py:171 ..\python_docs\developer_guide.py:198
msgid "    \t\timport tones"
msgstr "    \t\timport tones"

#: ..\python_docs\developer_guide.py:172 ..\python_docs\developer_guide.py:199
msgid "    \t\ttones.beep(550, 50)"
msgstr "    \t\ttones.beep(550, 50)"

#: ..\python_docs\developer_guide.py:173 ..\python_docs\developer_guide.py:200
msgid "    \t\tnextHandler()"
msgstr "    \t\tnextHandler()"

#: ..\python_docs\developer_guide.py:175 ..\python_docs\developer_guide.py:202
#: ..\python_docs\developer_guide.py:233 ..\python_docs\developer_guide.py:310
#: ..\python_docs\developer_guide.py:360 ..\python_docs\developer_guide.py:403
#: ..\python_docs\developer_guide.py:440 ..\python_docs\developer_guide.py:462
#: ..\python_docs\developer_guide.py:504
msgid "    --- end ---"
msgstr "    --- fin ---"

#: ..\python_docs\developer_guide.py:177
msgid ""
"This App Module file starts with two comment lines, which describe what the "
"file is for. "
msgstr ""
"Este archivo de módulo de aplicación empieza con dos líneas de comentarios, "
"que describen para qué es el archivo. "

#: ..\python_docs\developer_guide.py:178
msgid ""
"It then imports the appModuleHandler module, so that the App Module then has "
"access to the base AppModule class. "
msgstr ""
"Después importa el módulo appModuleHandler, lo que le da al módulo de "
"aplicación acceso a la clase base AppModule. "

#: ..\python_docs\developer_guide.py:179
msgid ""
"Next, it defines a class called AppModule, which is inherited from "
"appModuleHandler.AppModule. "
msgstr ""
"Después, define una clase AppModule, que hereda de appModuleHandler."
"AppModule. "

#: ..\python_docs\developer_guide.py:180
msgid ""
"Inside this class, it defines 1 or more events, scripts or gesture bindings. "
"In this example, it defines one event method for gainFocus events \\(event"
"\\_gainFocus\\), which plays a short beep each time it is executed. The "
"implementation of this event is not important for the purposes of this "
"example. The most important part is the class itself. Events will be covered "
"in greater detail later. "
msgstr ""
"Dentro de esta clase, define uno o más eventos, scripts o asociaciones de "
"gestos. En este ejemplo, define un método de evento para los eventos "
"gainFocus \\(event\\_gainFocus\\), que reproduce un pitido corto cada vez "
"que se ejecuta. La implementación de este evento no es importante para los "
"propósitos de este ejemplo. La parte más importante es la clase en sí. Los "
"eventos se cubrirán con mucho más detalle más adelante. "

#: ..\python_docs\developer_guide.py:181
msgid ""
"As with other examples in this guide, remember to delete the created app "
"module when you are finished testing and then restart NVDA or reload "
"plugins, so that original functionality is restored. "
msgstr ""
"Como se pide con otros ejemplos de esta guía, recuerda eliminar el módulo de "
"aplicación creado cuando termines de hacer pruebas y reinicia NVDA o recarga "
"las extensiones para que se restaure la funcionalidad original. "

#: ..\python_docs\developer_guide.py:182
msgid "### 3.5. App modules for hosted apps"
msgstr "### 3.5. Módulos de aplicación para aplicaciones hospedadas"

#: ..\python_docs\developer_guide.py:183
msgid ""
"Some executables host various apps inside. These include javaw.exe for "
"running various java programs and wwahost.exe for some apps in Windows 8 and "
"later. "
msgstr ""
"Algunos ejecutables hospedan diversas aplicaciones en su interior. Entre "
"ellos se incluyen javaw.exe para ejecutar diversos programas Java, y wwahost."
"exe para algunas aplicaciones en Windows 8 y posterior. "

#: ..\python_docs\developer_guide.py:184
msgid ""
"If an app runs inside a host executable, the name of the app module must be "
"the name as defined by the host executable, which can be found through "
"AppModule.appName property. For example, an app module for a java app named "
"\"test\" hosted inside javaw.exe must be named test.py. For apps hosted "
"inside wwahost, not only must the app module name be the name of the loaded "
"app, but the app module must subclass the app module class found in wwahost. "
msgstr ""
"Si una aplicación funciona en un ejecutable contenedor, el nombre del módulo "
"de aplicación debe ser el nombre definido por el ejecutable contenedor, que "
"puede obtenerse mediante la propiedad AppModule.appName. Por ejemplo, un "
"módulo de aplicación para una aplicación Java llamada \"prueba\" alojada "
"dentro de javaw.exe debe llamarse prueba.py. En el caso de las aplicaciones "
"alojadas dentro de wwahost, el nombre del módulo de aplicación no sólo debe "
"ser el de la aplicación cargada, sino que además se debe crear una subclase "
"que herede de la clase del módulo de aplicación de wwahost. "

#: ..\python_docs\developer_guide.py:185
msgid "### 3.6. Example 2: an app module for an app hosted by wwahost.exe"
msgstr ""
"### 3.6. Ejemplo 2: un módulo de aplicación para una aplicación hospedada en "
"wwahost.exe"

#: ..\python_docs\developer_guide.py:186
msgid ""
"The following example is same as Notepad app module above except this is for "
"an app hosted by wwahost.exe. "
msgstr ""
"El siguiente ejemplo es igual que el módulo de aplicación para el bloc de "
"notas anterior, salvo que en este caso es para una aplicación alojada en "
"wwahost.exe. "

#: ..\python_docs\developer_guide.py:190
msgid "    # wwahost/test App Module for NVDA"
msgstr "    # Módulo de aplicación wwahost/test para NVDA"

#: ..\python_docs\developer_guide.py:191
msgid "    # Developer guide example 2"
msgstr "    # Ejemplo 2 de la guía del desarrollador"

#: ..\python_docs\developer_guide.py:193
msgid "    from nvdaBuiltin.appModules.wwahost import *"
msgstr "    from nvdaBuiltin.appModules.wwahost import *"

#: ..\python_docs\developer_guide.py:195
msgid "    class AppModule(AppModule):"
msgstr "    class AppModule(AppModule):"

#: ..\python_docs\developer_guide.py:204
msgid ""
"The biggest difference from Notepad app module is where wwahost app module "
"comes from. As a built-in app module, wwahost can be imported from "
"nvdaBuiltin.appModules. "
msgstr ""
"La mayor diferencia con respecto al módulo de aplicación del bloc de notas "
"es el lugar de procedencia del módulo de aplicación wwahost. Al ser un "
"módulo de aplicación incorporado, se puede importar wwahost desde "
"nvdaBuiltin.appModules. "

#: ..\python_docs\developer_guide.py:205
msgid ""
"Another difference is how the app module class is defined. As wwahost app "
"module provides necessary infrastructure for apps hosted inside, you just "
"need to subclass the wwahost AppModule class. "
msgstr ""
"Otra diferencia es el modo de definir la clase del módulo de aplicación. Ya "
"que el módulo de aplicación wwahost proporciona la infraestructura necesaria "
"para las aplicaciones alojadas en su interior, simplemente es necesario "
"crear una subclase que herede de la clase del módulo de aplicación de "
"wwahost. "

#: ..\python_docs\developer_guide.py:206
msgid "### 3.7. Basics of a Global Plugin"
msgstr "### 3.7. Lo básico de una extensión global"

#: ..\python_docs\developer_guide.py:207
msgid ""
"Global Plugin files have a .py extension, and should have a short unique "
"name which identifies what they do. "
msgstr ""
"Los archivos de extensión global tienen la extensión .py, y deberían tener "
"un nombre corto y único que identifique lo que hacen. "

#: ..\python_docs\developer_guide.py:208
msgid ""
"Global plugin files must be placed in the globalPlugins subdirectory of an "
"add-on, or of the scratchpad directory of the NVDA user configuration "
"directory. "
msgstr ""
"Los archivos de extensión global deben situarse en el subdirectorio "
"globalPlugins de un complemento, o en la carpeta scratchpad del directorio "
"de configuración de usuario de NVDA. "

#: ..\python_docs\developer_guide.py:209
msgid ""
"Global Plugins must define a class called GlobalPlugin, which inherits from "
"globalPluginHandler.GlobalPlugin. This class can then define event and "
"script methods, gesture bindings and other code. This will all be covered in "
"depth later. "
msgstr ""
"Las extensiones globales deben definir una clase llamada GlobalPlugin, que "
"hereda de globalPluginHandler.GlobalPlugin. Esta clase puede definir a "
"continuación métodos de eventos y scripts, asociaciones de gestos y otro "
"código. Esto se cubrirá en profundidad más tarde. "

#: ..\python_docs\developer_guide.py:210
msgid ""
"NVDA loads all global plugins as soon as it starts, and unloads them on "
"exit. "
msgstr ""
"NVDA carga todas las extensiones globales tan pronto como se inicia, y las "
"descarga al salir. "

#: ..\python_docs\developer_guide.py:211
msgid ""
"### 3.8. Example 3: a Global Plugin Providing a Script to Announce the NVDA "
"Version"
msgstr ""
"### 3.8. Ejemplo 3: una extensión global que proporciona un script para "
"verbalizar la versión de NVDA"

#: ..\python_docs\developer_guide.py:212
msgid ""
"The following example Global Plugin Allows you to press NVDA+shift+v while "
"anywhere in the Operating System to find out NVDA's version. This example is "
"only to show you the basic layout of a Global Plugin. "
msgstr ""
"La siguiente extensión global de ejemplo te permite pulsar NVDA+shift+v en "
"cualquier sitio del sistema operativo para obtener la versión de NVDA. Este "
"ejemplo sólo sirve para mostrarte la estructura básica de una extensión "
"global. "

#: ..\python_docs\developer_guide.py:213
msgid ""
"Copy and paste the code between \\(but not including\\) the start and end "
"markers into a new text file with a name of example2.py, which should be "
"saved in the globalPlugins subdirectory. Be very careful to keep all tabs "
"and spaces intact. "
msgstr ""
"Copia el código entre \\(pero sin incluir\\) los marcadores de inicio y fin "
"en un nuevo archivo de texto con el nombre example2.py, y guárdalo en el "
"subdirectorio globalPlugins. Ten mucho cuidado para mantener todos los "
"tabuladores y espacios intactos. "

#: ..\python_docs\developer_guide.py:214 ..\python_docs\developer_guide.py:326
msgid ""
"Once saved in the right place, either restart NVDA or choose Reload Plugins "
"found under Tools in the NVDA menu. "
msgstr ""
"Una vez guardado en el lugar correcto, reinicia NVDA o bien elige recargar "
"plugins en el submenú herramientas del menú de NVDA. "

#: ..\python_docs\developer_guide.py:215
msgid ""
"From anywhere, you can now press NVDA+shift+v to have NVDA's version spoken "
"and brailled. "
msgstr ""
"Desde cualquier sitio, ahora puedes pulsar NVDA+shift+v para que NVDA "
"verbalice y muestre en braille su versión. "

#: ..\python_docs\developer_guide.py:219
msgid "    # Version announcement plugin for NVDA"
msgstr "    # Extensión de verbalización de versión de NVDA"

#: ..\python_docs\developer_guide.py:220
msgid "    # Developer guide example 3"
msgstr "    # Ejemplo 3 de la guía del desarrollador"

#: ..\python_docs\developer_guide.py:222 ..\python_docs\developer_guide.py:333
msgid "    import globalPluginHandler"
msgstr "    import globalPluginHandler"

#: ..\python_docs\developer_guide.py:223 ..\python_docs\developer_guide.py:297
#: ..\python_docs\developer_guide.py:334 ..\python_docs\developer_guide.py:423
msgid "    from scriptHandler import script"
msgstr "    from scriptHandler import script"

#: ..\python_docs\developer_guide.py:224 ..\python_docs\developer_guide.py:335
#: ..\python_docs\developer_guide.py:426
msgid "    import ui"
msgstr "    import ui"

#: ..\python_docs\developer_guide.py:225
msgid "    import versionInfo"
msgstr "    import versionInfo"

#: ..\python_docs\developer_guide.py:227 ..\python_docs\developer_guide.py:338
msgid "    class GlobalPlugin(globalPluginHandler.GlobalPlugin):"
msgstr "    class GlobalPlugin(globalPluginHandler.GlobalPlugin):"

#: ..\python_docs\developer_guide.py:229
msgid "    \t@script(gesture=\"kb:NVDA+shift+v\")"
msgstr "    \t@script(gesture=\"kb:NVDA+shift+v\")"

#: ..\python_docs\developer_guide.py:230
msgid "    \tdef script_announceNVDAVersion(self, gesture):"
msgstr "    \tdef script_announceNVDAVersion(self, gesture):"

#: ..\python_docs\developer_guide.py:231
msgid "    \t\tui.message(versionInfo.version)"
msgstr "    \t\tui.message(versionInfo.version)"

#: ..\python_docs\developer_guide.py:235
msgid ""
"This Global Plugin file starts with two comment lines, which describe what "
"the file is for. "
msgstr ""
"Este archivo de extensión global comienza con dos líneas de comentarios, que "
"describen para qué sirve el archivo. "

#: ..\python_docs\developer_guide.py:236
msgid ""
"It then imports the globalPluginHandler module, so that the Global Plugin "
"has access to the base GlobalPlugin class. "
msgstr ""
"A continuación importa el módulo globalPluginHandler, de manera que la "
"extensión global tiene acceso a la clase base GlobalPlugin. "

#: ..\python_docs\developer_guide.py:237
msgid ""
"It also imports a few other modules, namely ui, versionInfo and "
"scriptHandler, which this specific plugin needs in order for it to perform "
"the necessary actions to announce the version. "
msgstr ""
"También importa otros módulos llamados ui, versionInfo y scriptHandler, "
"necesarios para que esta extensión concreta haga las acciones adecuadas para "
"verbalizar la versión de NVDA. "

#: ..\python_docs\developer_guide.py:238
msgid ""
"Next, it defines a class called GlobalPlugin, which is inherited from "
"globalPluginHandler.GlobalPlugin. "
msgstr ""
"Después, define una clase llamada GlobalPlugin, que hereda de "
"globalPluginHandler.GlobalPlugin. "

#: ..\python_docs\developer_guide.py:239
msgid ""
"Inside this class, it defines 1 or more events, scripts or gesture bindings. "
"In this example, it defines a script method that performs the version "
"announcement. The script decorator from the scriptHandler module is used to "
"assign the NVDA+shift+v shortcut to this script. However, the details of the "
"script and its binding are not important for the purposes of this example. "
"The most important part is the class itself. More information about scripts "
"and the script decorator can be found in the Defining script properties "
"section of this guide. "
msgstr ""
"En esta clase, define uno o más eventos, scripts o asociaciones de gestos. "
"En este ejemplo, define un método de script que realiza la verbalización de "
"versión, y ofrece una asociación de NVDA+shift+v a este script utilizando el "
"decorador script del módulo scriptHandler. Sin embargo, los detalles del "
"script y su asociación no son importantes para los propósitos de este "
"ejemplo. La parte más importante es la clase en sí. Se puede encontrar más "
"información sobre los scripts y el decorador de scripts en en la sección "
"Definición de propiedades de scripts en esta guía. "

#: ..\python_docs\developer_guide.py:240
msgid ""
"As with other examples in this guide, remember to delete the created Global "
"Plugin when finished testing and then restart NVDA or reload plugins, so "
"that original functionality is restored. "
msgstr ""
"Como se pide con otros ejemplos de esta guía, recuerda eliminar la extensión "
"global creada cuando termines de hacer pruebas y reinicia NVDA o recarga las "
"extensiones para que se restaure la funcionalidad original. "

#: ..\python_docs\developer_guide.py:241
msgid "### 3.9. NVDA Objects"
msgstr "### 3.9. Objetos de NVDA"

#: ..\python_docs\developer_guide.py:242
msgid ""
"NVDA represents controls and other GUI elements as NVDA Objects. These NVDA "
"Objects contain standardised properties, such as name, role, value, states "
"and description, which allow other parts of NVDA to query or present "
"information about a control in a generalised way. For example, the OK button "
"in a dialog would be represented as an NVDA Object with a name of \"OK\" and "
"a role of button. Similarly, a checkbox with a label of \"I agree\" would "
"have a name of \"I agree\", a role of checkbox, and if currently checked, a "
"state of checked. "
msgstr ""
"NVDA representa controles y otros elementos gráficos como objetos NVDA. "
"Estos objetos NVDA contienen propiedades estandarizadas, como nombre, rol, "
"valor, estados y descripción, que permiten a otras partes de NVDA consultar "
"o presentar información sobre un control de una manera generalizada. Por "
"ejemplo, el botón Aceptar en un diálogo sería representado como un objeto "
"NVDA con un nombre como \"Aceptar\" y un rol de botón. De forma similar, una "
"casilla de verificación con una etiqueta de \"Acepto\" tendría un nombre de "
"\"Acepto\", un rol de casilla de verificación, y si actualmente está "
"marcada, un estado de marcada. "

#: ..\python_docs\developer_guide.py:243
msgid ""
"As there are many different GUI Toolkits and platform and accessibility "
"APIs, NVDA Objects abstract these differences into a standard form that NVDA "
"can use, regardless of the toolkit or API a particular control is made with. "
"For example, the Ok button just discussed could be a widget in a Java "
"application, an MSAA object, an IAccessible2 object or a UI Automation "
"element. "
msgstr ""
"Como hay muchos kits de herramientas gráficos y apis de accesibilidad y "
"plataforma, los objetos NVDA abstraen sus diferencias de una forma estándar "
"que NVDA pueda usar, sin importar la api o motor gráfico con el que un "
"control esté hecho. Por ejemplo, el botón aceptar del que acabamos de hablar "
"podría ser un widget en una aplicación Java, un objeto MSAA, un objeto "
"IAccessible2 o un elemento de UI Automation. "

#: ..\python_docs\developer_guide.py:244
msgid "NVDA Objects have many properties. Some of the most useful are: "
msgstr ""
"Los objetos NVDA tienen muchas propiedades. Algunas de las más útiles son: "

#: ..\python_docs\developer_guide.py:245
msgid "  * name: the label of the control. "
msgstr "  * name: la etiqueta del control. "

#: ..\python_docs\developer_guide.py:246
msgid ""
"  * role: one of the ROLE\\_\\* constants from NVDA's controlTypes module. "
"Button, dialog, editableText, window and checkbox are examples of roles. "
msgstr ""
"  * role: una de las constantes ROLE\\_\\* del módulo controlTypes de NVDA. "
"Button, dialog, editableText, window y checkbox son ejemplos de roles. "

#: ..\python_docs\developer_guide.py:247
msgid ""
"  * states: a set of 0 or more of the STATE\\_\\* constants from NVDA's "
"controlTypes module. Focusable, focused, selected, selectable, expanded, "
"collapsed and checked are some examples of states. "
msgstr ""
"  * states: un conjunto de 0 o más constantes STATE\\_\\* del módulo "
"controlTypes de NVDA. Focusable, focused, selected, selectable, expanded, "
"collapsed y checked son algunos ejemplos de estados. "

#: ..\python_docs\developer_guide.py:248
msgid ""
"  * value: the value of the control; e.g. the percentage of a scroll bar or "
"the current setting of a combo box. "
msgstr ""
"  * value: el valor del control; por ejemplo, el porcentaje de una barra "
"deslizante o el ajuste actual de un cuadro combinado. "

#: ..\python_docs\developer_guide.py:249
msgid ""
"  * description: a sentence or two describing what the control does "
"\\(usually the same as its tooltip\\). "
msgstr ""
"  * description: una o dos frases describiendo lo que hace el control "
"\\(generalmente lo mismo que su descripción visual\\). "

#: ..\python_docs\developer_guide.py:250
msgid ""
"  * location: the object's left, top, width and height positions in screen "
"coordinates. "
msgstr ""
"  * location: la posición horizontal, vertical, anchura y altura en "
"coordenadas de la pantalla. "

#: ..\python_docs\developer_guide.py:251
msgid ""
"  * parent: this object's parent object. For example, a list item object's "
"parent would be the list containing it. "
msgstr ""
"  * parent: el objeto padre de este objeto. Por ejemplo, el padre de un "
"objeto de elemento de lista sería la lista que lo contiene. "

#: ..\python_docs\developer_guide.py:252
msgid ""
"  * next: the object directly after this one on the same level in logical "
"order. For example, a menu item NVDA Object's next object is most likely "
"another menu item within the same menu. "
msgstr ""
"  * next: el objeto directamente después de este en orden lógico en el mismo "
"nivel. Por ejemplo, el siguiente objeto de un objeto NVDA elemento de menú "
"es muy probablemente otro elemento de menú en el mismo menú. "

#: ..\python_docs\developer_guide.py:253
msgid "  * previous: like next but in reverse. "
msgstr "  * previous: como next pero al revés. "

#: ..\python_docs\developer_guide.py:254
msgid ""
"  * firstChild: the first direct child object of this object. For example, a "
"list's first child would be the first list item. "
msgstr ""
"  * firstChild: el primer objeto hijo directo de este objeto. Por ejemplo, "
"el primer hijo de una lista sería el primer elemento de lista. "

#: ..\python_docs\developer_guide.py:255
msgid "  * lastChild: the last direct child of this object. "
msgstr "  * lastChild: el último hijo directo de este objeto. "

#: ..\python_docs\developer_guide.py:256
msgid ""
"  * children: a list of all the direct children of this object; e.g. all the "
"menu items in a menu. "
msgstr ""
"  * children: una lista de todos los hijos directos de este objeto; por "
"ejemplo, todos los elementos de menú en un menú. "

#: ..\python_docs\developer_guide.py:257
msgid ""
"There are also a few simplified navigation properties such as simpleParent, "
"simpleNext, simpleFirstChild and simpleLastChild. These are like their "
"respective navigation properties described above, but NVDA filters out "
"unuseful objects. These properties are used when NVDA's simple review mode "
"is turned on, which is the default. These simple properties may be easier to "
"use, but the real navigation properties more closely reflect the underlying "
"Operating System structure. Also, these may change in future versions of "
"NVDA as improvements are made to simple review, so they should generally be "
"avoided when programmatically locating specific objects. "
msgstr ""
"También hay unas pocas propiedades de navegación simplificada, como "
"simpleParent, simpleNext, simpleFirstChild y simpleLastChild. Son como sus "
"respectivas propiedades de navegación descritas más arriba, pero NVDA filtra "
"y desecha objetos inútiles. Estas propiedades se usan cuando el modo de "
"revisión simple de NVDA está activado, lo que viene así por defecto. Estas "
"propiedades simples pueden ser más fáciles de utilizar, pero las propiedades "
"de navegación real reflejan de forma más cercana la estructura subyacente "
"del sistema operativo. Además, también pueden cambiar en versiones futuras "
"de NVDA según se hagan mejoras a la revisión simple, por lo que generalmente "
"deberían evitarse al ubicar mediante programación los objetos. "

#: ..\python_docs\developer_guide.py:258
msgid ""
"When developing plugins, most of the time, it is not important what toolkit "
"or API backs an NVDA Object, as the plugin will usually only access standard "
"properties such as name, role and value. However, as plugins become more "
"advanced, it is certainly possible to delve deeper into NVDA Objects to find "
"out toolkit or API specific information if required. "
msgstr ""
"Al desarrollar extensiones, en la mayoría de los casos, no es importante el "
"kit de herramientas o la api que hay tras un objeto de NVDA, ya que la "
"extensión normalmente sólo accederá a propiedades estándar como name, role y "
"value. Sin embargo, según las extensiones se vuelven más avanzadas, es "
"ciertamente posible tener que profundizar en los objetos de NVDA para "
"obtener información específica de la api o kit de herramientas si es "
"necesario. "

#: ..\python_docs\developer_guide.py:259
msgid "Plugins make use of NVDA Objects in three particular ways: "
msgstr ""
"Las extensiones hacen uso de los objetos de NVDA de tres formas concretas: "

#: ..\python_docs\developer_guide.py:260
msgid ""
"  * Most events that plugins receive take an argument which is the NVDA "
"Object on which the event occurred. For example, event\\_gainFocus takes the "
"NVDA Object that represents the control gaining focus. "
msgstr ""
"  * La mayoría de eventos que las extensiones reciben tienen un argumento "
"que es el objeto en el que ha ocurrido el evento. Por ejemplo, event"
"\\_gainFocus recibe el objeto de NVDA que representa el control que obtiene "
"el foco. "

#: ..\python_docs\developer_guide.py:261
msgid ""
"  * Scripts, events or other code may fetch objects of interest such as the "
"NVDA Object with focus, NVDA's current navigator object, or perhaps the "
"Desktop NVDA Object. The code may then retreave information from that object "
"or perhaps even retreave another object related to it \\(e.g. its parent, "
"first child, etc.\\). "
msgstr ""
"  * Los eventos, scripts u otro código pueden tomar objetos de interés como "
"el objeto NVDA que tiene el foco, el objeto NVDA actual del navegador de "
"objetos, o tal vez el objeto NVDA del escritorio. El código puede a "
"continuación recuperar información de ese objeto o tal vez incluso recuperar "
"otro objeto relacionado con él \\(por ejemplo su padre, primer hijo, etc."
"\\). "

#: ..\python_docs\developer_guide.py:262
msgid ""
"  * the Plugin may define its own custom NVDA Object classes which will be "
"used to wrap a specific control to give it extra functionality, mutate its "
"properties, etc. "
msgstr ""
"  * La extensión puede definir sus propias clases de objetos de NVDA "
"personalizadas, que se usarán para envolver un control específico para darle "
"funcionalidad extra, modificar sus propiedades, etc. "

#: ..\python_docs\developer_guide.py:263
msgid ""
"Just like App Modules and Global Plugins, NVDA Objects can also define "
"events, scripts and gesture bindings. "
msgstr ""
"Al igual que los módulos de aplicación o las extensiones, los objetos de "
"NVDA también pueden definir eventos, scripts y asociaciones de gestos. "

#: ..\python_docs\developer_guide.py:264
msgid "### 3.10. Scripts and Gesture Bindings"
msgstr "### 3.10. Scripts y asociación de gestos"

#: ..\python_docs\developer_guide.py:265
msgid ""
"App Modules, Global Plugins and NVDA Objects can define special methods "
"which can be bound to a particular piece of input such as a key press. NVDA "
"refers to these methods as scripts. "
msgstr ""
"Los módulos de aplicación, extensiones globales y objetos de NVDA pueden "
"definir métodos especiales que pueden asociarse a una unidad de entrada "
"particular como una pulsación de teclado. NVDA se refiere a estos métodos "
"llamándolos scripts. "

#: ..\python_docs\developer_guide.py:266
msgid ""
"A script is a standard Python instance method with a name starting with "
"\"script\\_\"; e.g. \"script\\_sayDateTime\". "
msgstr ""
"Un script es un método de instancia de Python estándar con un nombre que "
"empieza por \"script\\_\"; por ejemplo, \"script\\_sayDateTime\". "

#: ..\python_docs\developer_guide.py:267
msgid "A script method takes two arguments: "
msgstr "Un método de script recibe dos argumentos: "

#: ..\python_docs\developer_guide.py:268
msgid ""
"  * self: a reference to the App Module, Global Plugin or NVDA Object "
"instance the script was called on. "
msgstr ""
"  * self: una referencia a la instancia del módulo de aplicación, extensión "
"global u objeto de NVDA donde se ha llamado al script. "

#: ..\python_docs\developer_guide.py:269
msgid ""
"  * gesture: an Input Gesture object, which represents the input that caused "
"the script to run. "
msgstr ""
"  * gesture: un objeto de gesto de entrada, que representa el gesto que "
"provocó la llamada al script. "

#: ..\python_docs\developer_guide.py:270
msgid ""
"As well as the actual script method, some form of gesture binding must be "
"defined, so that NVDA knows what input should execute the script. "
msgstr ""
"Además del método del script, se debe definir alguna forma de asociación del "
"gesto, de tal forma que NVDA sepa qué entrada debería ejecutarlo. "

#: ..\python_docs\developer_guide.py:271
msgid ""
"A gesture identifier string is a simple string representation of a piece of "
"input. It consists of a two letter character code denoting the source of the "
"input, an optional device in brackets, a colon \\(:\\) and one or more names "
"separated by a plus \\(+\\) denoting the actual keys or input values. "
msgstr ""
"Una cadena identificadora de gesto es una representación en forma de cadena "
"de una unidad de entrada simple. Consiste en un código de dos caracteres que "
"identifica la fuente de la entrada, un dispositivo opcional entre "
"paréntesis, dos puntos \\(:\\) y uno o más nombres separados por el signo "
"más \\(+\\) que identifican las teclas o valores de entrada. "

#: ..\python_docs\developer_guide.py:272
msgid "Some examples of gesture string identifiers are: "
msgstr "Algunos ejemplos de cadenas identificadoras de gestos son: "

#: ..\python_docs\developer_guide.py:273
msgid "  * \"kb:NVDA+shift+v\" "
msgstr "  * \"kb:NVDA+shift+v\" "

#: ..\python_docs\developer_guide.py:274
msgid "  * \"br\\(freedomScientific\\):leftWizWheelUp\" "
msgstr "  * \"br\\(freedomScientific\\):leftWizWheelUp\" "

#: ..\python_docs\developer_guide.py:275
msgid "  * \"br\\(alva.BC640\\):t3\" "
msgstr "  * \"br\\(alva.BC640\\):t3\" "

#: ..\python_docs\developer_guide.py:276
msgid "  * \"kb\\(laptop\\):NVDA+t\" "
msgstr "  * \"kb\\(laptop\\):NVDA+t\" "

#: ..\python_docs\developer_guide.py:277
msgid "Currently, the input sources in NVDA are: "
msgstr "Actualmente, las fuentes de entrada en NVDA son: "

#: ..\python_docs\developer_guide.py:278
msgid "  * kb: system keyboard input "
msgstr "  * kb: entrada desde el teclado del sistema "

#: ..\python_docs\developer_guide.py:279
msgid "  * br: braille display controls "
msgstr "  * br: controles de la pantalla braille "

#: ..\python_docs\developer_guide.py:280
msgid "  * ts: touch screen "
msgstr "  * ts: pantalla táctil "

#: ..\python_docs\developer_guide.py:281
msgid "  * bk: braille keyboard input "
msgstr "  * bk: entrada por teclado braille "

#: ..\python_docs\developer_guide.py:282
msgid ""
"When NVDA receives input, it looks for a matching gesture binding in a "
"particular order. Once a gesture binding is found, the script is executed "
"and no further bindings are used, nore is that particular gesture passed on "
"automatically to the Operating System. "
msgstr ""
"Cuando NVDA recibe entrada, busca una asociación de gesto que encaje con "
"ella en un orden particular. Una vez se encuentra una asociación de gesto, "
"se ejecuta el script y no se usan otras asociaciones, ni se pasa el gesto "
"automáticamente al sistema operativo. "

#: ..\python_docs\developer_guide.py:283
msgid "The order for gesture binding lookup is: "
msgstr "El orden de búsqueda de asociación de gestos es: "

#: ..\python_docs\developer_guide.py:284
msgid "  * The user specific gesture map "
msgstr "  * El mapa de gestos específico del usuario "

#: ..\python_docs\developer_guide.py:285
msgid "  * The locale specific gesture map "
msgstr "  * El mapa de gestos específico del idioma "

#: ..\python_docs\developer_guide.py:286
msgid "  * The braille display driver specific gesture map "
msgstr ""
"  * El mapa de gestos específico del controlador de la pantalla braille "

#: ..\python_docs\developer_guide.py:287 ..\python_docs\developer_guide.py:366
msgid "  * Loaded Global Plugins "
msgstr "  * Extensiones globales cargadas "

#: ..\python_docs\developer_guide.py:288
msgid "  * App Module of the active application "
msgstr "  * Módulo de aplicación de la aplicación activa "

#: ..\python_docs\developer_guide.py:289
msgid ""
"  * Tree Interceptor of the NVDA Object with focus if any; e.g. a "
"virtualBuffer "
msgstr ""
"  * Interceptor de árbol del objeto NVDA con el foco si lo hubiera; por "
"ejemplo un virtualBuffer "

#: ..\python_docs\developer_guide.py:290
msgid "  * NVDA Object with focus "
msgstr "  * Objeto NVDA con el foco "

#: ..\python_docs\developer_guide.py:291
msgid ""
"  * Global Commands \\(built in commands like quitting NVDA, object "
"navigation commands, etc.\\) "
msgstr ""
"  * Órdenes globales \\(órdenes incorporadas como salir de NVDA, órdenes de "
"navegación por objetos, etc.\\) "

#: ..\python_docs\developer_guide.py:292
msgid "#### 3.10.1. Defining script properties"
msgstr "#### 3.10.1. Definición de propiedades de los scripts"

#: ..\python_docs\developer_guide.py:293
msgid ""
"For NVDA 2018.3 and above, the recommended way to set script properties is "
"by means of the so called script decorator. In short, a decorator is a "
"function that modifies the behavior of a particular function or method. The "
"script decorator modifies the script in such a way that it will be properly "
"bound to the desired gestures. Furthermore, it ensures that the script is "
"listed with the description you specify, and that it is categorised under "
"the desired category in the input gestures dialog. "
msgstr ""
"En NVDA 2018.3 y versiones posteriores, la forma recomendada de establecer "
"las propiedades de un script se conoce como el decorador de scripts. En "
"resumen, un decorador es una función que modifica el comportamiento de otra "
"función o método concretos. El decorador de script modifica el script de tal "
"manera que se asocie adecuadamente a los gestos deseados. Además, garantiza "
"que el script se liste con la descripción especificada, y se incluya bajo la "
"categoría deseada en el diálogo Gestos de entrada. "

#: ..\python_docs\developer_guide.py:294
msgid ""
"In order for you to use the script decorator, you will have to import it "
"from the scriptHandler module. "
msgstr ""
"Para que puedas usar el decorador de scripts, deberás importarlo desde el "
"módulo scriptHandler. "

#: ..\python_docs\developer_guide.py:299
msgid ""
"After that, just above your script definition, add the script decorator, "
"providing it the desired arguments. For example: "
msgstr ""
"Después, justo encima de la definición de tu script, añade el decorador para "
"scripts, proporcionándole los argumentos deseados. Por ejemplo: "

#: ..\python_docs\developer_guide.py:303 ..\python_docs\developer_guide.py:340
#: ..\python_docs\developer_guide.py:350
msgid "    \t@script("
msgstr "    \t@script("

#: ..\python_docs\developer_guide.py:304
msgid "    \t\tdescription=_(\"Speaks the date and time\"),"
msgstr "    \t\tdescription=_(\"Speaks the date and time\"),"

#: ..\python_docs\developer_guide.py:305
msgid "    \t\tcategory=inputCore.SCRCAT_MISC,"
msgstr "    \t\tcategory=inputCore.SCRCAT_MISC,"

#: ..\python_docs\developer_guide.py:306
msgid "    \t\tgestures=[\"kb:NVDA+shift+t\", \"kb:NVDA+alt+r\"]"
msgstr "    \t\tgestures=[\"kb:NVDA+shift+t\", \"kb:NVDA+alt+r\"]"

#: ..\python_docs\developer_guide.py:307 ..\python_docs\developer_guide.py:343
#: ..\python_docs\developer_guide.py:353
msgid "    \t)"
msgstr "    \t)"

#: ..\python_docs\developer_guide.py:308
msgid "    \tdef script_sayDateTime(self, gesture):"
msgstr "    \tdef script_sayDateTime(self, gesture):"

#: ..\python_docs\developer_guide.py:312
msgid ""
"In this example, your script will be listed in the input gestures dialog "
"under the \"Miscellaneous\" category. It will have the description \"Speaks "
"the date and time\", and will be bound to the \"NVDA+shift+t\" and \"NVDA+alt"
"+r\" key combinations on the keyboard. "
msgstr ""
"En este ejemplo, tu script se listará en el diálogo Gestos de entrada bajo "
"la categoría \"Miscelánea\". Tendrá la descripción \"Speaks the date and time"
"\", y estará asociado a las combinaciones de teclado \"NVDA+shift+t\" y "
"\"NVDA+alt+r\". "

#: ..\python_docs\developer_guide.py:313
msgid ""
"The following keyword arguments can be used when applying the script "
"decorator: "
msgstr ""
"Se pueden usar los siguientes argumentos al aplicar el decorador de script: "

#: ..\python_docs\developer_guide.py:314
msgid ""
"  * description: A short, translatable string which describes the command "
"for users. This is reported to users when in Input Help mode and shown in "
"the input gestures dialog. The script will not appear in the Input Gestures "
"dialog unless you specify a description. "
msgstr ""
"  * description: una cadena corta y traducible que describa la orden a los "
"usuarios. Los usuarios escucharán esta información en el modo ayuda de "
"entrada y la verán en el diálogo Gestos de entrada. El script no aparecerá "
"en el diálogo Gestos de entrada a menos que se especifique una descripción. "

#: ..\python_docs\developer_guide.py:315
msgid ""
"  * category: The category of the script in order for it to be grouped with "
"other similar scripts. For example, a script in a global plugin which adds "
"browse mode quick navigation keys may be categorized under the \"Browse mode"
"\" category. The category can be set for individual scripts, but you can "
"also set the \"scriptCategory\" attribute on the plugin class, which will be "
"used for scripts which do not specify a category. There are constants for "
"common categories prefixed with SCRCAT\\_ in the inputCore and "
"globalCommands modules, which can also be specified. The script will be "
"listed under the specified category in the Input Gestures dialog. If no "
"category is specified, the script will be categorized under \"Miscellaneous"
"\". "
msgstr ""
"  * category: categoría del script para agruparlo con otros scripts "
"similares. Por ejemplo, un script en una extensión global que añade teclas "
"rápidas de navegación en el modo exploración puede meterse bajo la categoría "
"\"Modo exploración\". Se puede establecer la categoría de cada script "
"individualmente, pero también puedes establecer el atributo \"scriptCategory"
"\" en la clase de la extensión, que se usará para scripts que no "
"especifiquen una categoría. Hay constantes para categorías comunes, "
"prefijadas con SCRCAT\\_ en los módulos inputCore y globalCommands. El "
"script se listará en la categoría especificada en el diálogo Gestos de "
"entrada. Si no se especifica categoría, el script se meterá en \"Miscelánea"
"\". "

#: ..\python_docs\developer_guide.py:316
msgid ""
"  * gesture: A string containing a single gesture associated with this "
"script, e.g. \"kb:NVDA+shift+r\". "
msgstr ""
"  * gesture: una cadena que contiene un único gesto asociado con este "
"script, por ejemplo \"kb:NVDA+shift+r\". "

#: ..\python_docs\developer_guide.py:317
msgid ""
"  * gestures: A string list of multiple gestures associated with this "
"script, e.g. \\[\"kb:NVDA+shift+r\", \"kb:NVDA+alt+t\"\\]. When both gesture "
"and gestures are specified, they are combined. Either gesture, or any item "
"in gestures can be used to trigger the script. "
msgstr ""
"  * gestures: una lista de cadenas con varios gestos asociados a este "
"script, por ejemplo \\[\"kb:NVDA+shift+r\", \"kb:NVDA+alt+t\"\\]. Cuando se "
"especifican tanto gesture como gestures, se combinan. Cualquier elemento de "
"gesture o gestures se puede usar para activar el script. "

#: ..\python_docs\developer_guide.py:318
msgid ""
"  * canPropagate: A boolean indicating whether this script should also apply "
"when it belongs to a focus ancestor object. For example, this can be used "
"when you want to specify a script on a particular foreground object, or "
"another object in the focus ancestry which is not the current focus object. "
"This option defaults to False. "
msgstr ""
"  * canPropagate: un booleano que indica si este script debería aplicarse "
"también a los antecesores del objeto con el foco. Por ejemplo, se puede usar "
"cuando quieres especificar un script en particular para un objeto en primer "
"plano, o en cualquier objeto en la ascendencia del foco que no sea el objeto "
"actualmente enfocado. Esta opción es por defecto False. "

#: ..\python_docs\developer_guide.py:319
msgid ""
"  * bypassInputHelp: A boolean indicating whether this script should run "
"when input help is active. This option defaults to False. "
msgstr ""
"  * bypassInputHelp: un booleano que indica si este script debería "
"ejecutarse con el modo de ayuda de entrada activado. Por defecto esta opción "
"es False. "

#: ..\python_docs\developer_guide.py:320
msgid ""
"  * allowInSleepMode: A boolean indicating whether this script should run "
"when sleep mode is active. This option defaults to False. "
msgstr ""
"  * allowInSleepMode: Un booleano que indica si este script debería "
"funcionar con el modo silencioso activado. El valor predeterminado de esta "
"opción es False. "

#: ..\python_docs\developer_guide.py:321
msgid ""
"  * resumeSayAllMode: The say all mode that should be resumed when active "
"before executing this script. The constants for say all mode are prefixed "
"with CURSOR\\_ and specified in the sayAllHandler modules. If "
"resumeSayAllMode is not specified, say all does not resume after this "
"script. "
msgstr ""
"  * resumeSayAllMode: el modo verbalizar todo que debería reanudarse si "
"estaba activo antes de ejecutar este script. Las constantes del modo "
"verbalizar todo llevan el prefijo CURSOR\\_ y se especifican en el módulo "
"sayAllHandler. Si no se especifica resumeSayAllMode, verbalizar todo no se "
"reanuda tras ejecutar este script. "

#: ..\python_docs\developer_guide.py:322
msgid ""
"Though the script decorator makes the script definition process a lot "
"easier, there are more ways of binding gestures and setting script "
"properties. For example, a special \"\\_\\_gestures\" Python dictionary can "
"be defined as a class variable on an App Module, Global Plugin or NVDA "
"Object. This dictionary should contain gesture identifier strings pointing "
"to the name of the requested script, without the \"script\\_\" prefix. You "
"can also specify a description of the script in the method's \" _doc_ \" "
"attribute. However, beware not to include an inline docstring at the start "
"of the method if you do not set the \" _doc_ \" attribute, as it would "
"render the description not translatable. The script decorator does not "
"suffer from this limitation, so you are encouraged to provide inline "
"docstrings as needed when using it. Furthermore, an alternative way of "
"specifying the script's category is by means of setting a \"category\" "
"attribute on the script method to a string containing the name of the "
"category. "
msgstr ""
"Aunque el decorador script hace mucho más fácil el proceso de definición de "
"scripts, hay más formas de asociar scripts y establecer sus propiedades. Por "
"ejemplo, se puede definir como variable de clase un diccionario Python "
"especial llamado \"\\_\\_gestures\" en un módulo de aplicación, extensión "
"global u objeto NVDA. Este diccionario debería contener cadenas con "
"identificadores de gestos apuntando al nombre del script solicitado, sin el "
"prefijo \"script\\_\". También se puede especificar una descripción para el "
"script en el atributo \"_doc_\" del método. Sin embargo, procura no incluir "
"una cadena de documentación en línea como comienzo del método si no "
"configuras el atributo \"_doc_\", ya que la descripción renderizada no sería "
"traducible. El decorador script no padece esta limitación, por lo que se "
"recomienda que uses cadenas de documentación en línea según sea necesario "
"cuando lo emplees. Además, una forma alternativa de especificar la categoría "
"del script es crear un atributo \"category\" en la función del script que "
"contenga una cadena con el nombre de la categoría. "

#: ..\python_docs\developer_guide.py:323
msgid ""
"### 3.11. Example 4: A Global Plugin to Find out Window Class and Control ID"
msgstr ""
"### 3.11. Ejemplo 4: una extensión global para encontrar la clase de la "
"ventana y el identificador del control"

#: ..\python_docs\developer_guide.py:324
msgid ""
"The following Global Plugin allows you to press NVDA+leftArrow to have the "
"window class of the current focus announced, and NVDA+rightArrow to have the "
"window control ID of the current focus announced. This example shows you how "
"to define one or more scripts and gesture bindings on a class such as an App "
"Module, Global Plugin or NVDA Object. "
msgstr ""
"La siguiente extensión global te permite pulsar NVDA+flecha izquierda para "
"verbalizar la clase de ventana del objeto con el foco; y NVDA+flecha derecha "
"para anunciar el identificador de ventana del control actual con el foco. "
"Este ejemplo te muestra cómo definir uno o más scripts y asociaciones de "
"gestos en una clase tal como un módulo de aplicación, extensión global u "
"objeto de NVDA. "

#: ..\python_docs\developer_guide.py:325
msgid ""
"Copy and paste the code between \\(but not including\\) the start and end "
"markers into a new text file with a name of example3.py, which should be "
"saved in the globalPlugins subdirectory. Be very careful to keep all tabs "
"and spaces intact. "
msgstr ""
"Copia el código entre \\(pero sin incluir\\) los marcadores de inicio y fin "
"en un nuevo archivo de texto con el nombre example3.py, y guárdalo en el "
"subdirectorio globalPlugins. Ten mucho cuidado para mantener todos los "
"tabuladores y espacios intactos. "

#: ..\python_docs\developer_guide.py:330
msgid "    #Window utility scripts for NVDA"
msgstr "    #Scripts de utilidades de ventana para NVDA"

#: ..\python_docs\developer_guide.py:331
msgid "    #Developer guide example 4"
msgstr "    # Ejemplo 4 de la guía del desarrollador"

#: ..\python_docs\developer_guide.py:336
msgid "    import api"
msgstr "    import api"

#: ..\python_docs\developer_guide.py:341
msgid ""
"    \t\tdescription=_(\"Announces the window class name of the current focus "
"object\"),"
msgstr ""
"    \t\tdescription=_(\"Announces the window class name of the current focus "
"object\"),"

#: ..\python_docs\developer_guide.py:342
msgid "    \t\tgesture=\"kb:NVDA+leftArrow\""
msgstr "    \t\tgesture=\"kb:NVDA+leftArrow\""

#: ..\python_docs\developer_guide.py:344
msgid "    \tdef script_announceWindowClassName(self, gesture):"
msgstr "    \tdef script_announceWindowClassName(self, gesture):"

#: ..\python_docs\developer_guide.py:345 ..\python_docs\developer_guide.py:355
msgid "    \t\tfocusObj = api.getFocusObject()"
msgstr "    \t\tfocusObj = api.getFocusObject()"

#: ..\python_docs\developer_guide.py:346 ..\python_docs\developer_guide.py:356
msgid "    \t\tname = focusObj.name"
msgstr "    \t\tname = focusObj.name"

#: ..\python_docs\developer_guide.py:347
msgid "    \t\twindowClassName = focusObj.windowClassName"
msgstr "    \t\twindowClassName = focusObj.windowClassName"

#: ..\python_docs\developer_guide.py:348
msgid ""
"    \t\tui.message(\"class for %s window: %s\" % (name, windowClassName))"
msgstr ""
"    \t\tui.message(\"clase para ventana %s: %s\" % (name, windowClassName))"

#: ..\python_docs\developer_guide.py:351
msgid ""
"    \t\tdescription=_(\"Announces the window control ID of the current focus "
"object\"),"
msgstr ""
"    \t\tdescription=_(\"Announces the window control ID of the current focus "
"object\"),"

#: ..\python_docs\developer_guide.py:352
msgid "    \t\tgesture=\"kb:NVDA+rightArrow\""
msgstr "    \t\tgesture=\"kb:NVDA+rightArrow\""

#: ..\python_docs\developer_guide.py:354
msgid "    \tdef script_announceWindowControlID(self, gesture):"
msgstr "    \tdef script_announceWindowControlID(self, gesture):"

#: ..\python_docs\developer_guide.py:357
msgid "    \t\twindowControlID = focusObj.windowControlID"
msgstr "    \t\twindowControlID = focusObj.windowControlID"

#: ..\python_docs\developer_guide.py:358
msgid ""
"    \t\tui.message(\"Control ID for %s window: %d\" % (name, "
"windowControlID))"
msgstr ""
"    \t\tui.message(\"Identificador de control para la ventana %s: %d\" % "
"(name, windowControlID))"

#: ..\python_docs\developer_guide.py:362
msgid "### 3.12. Events"
msgstr "### 3.12. Eventos"

#: ..\python_docs\developer_guide.py:363
msgid ""
"When NVDA detects particular toolkit, API or Operating System events, it "
"abstracts these and fires its own internal events on plugins and NVDA "
"Objects. "
msgstr ""
"Cuando NVDA detecta eventos particulares del kit de herramientas, api o "
"sistema operativo, los abstrae y dispara sus propios eventos en extensiones "
"y objetos NVDA. "

#: ..\python_docs\developer_guide.py:364
msgid ""
"Although most events are related to a specific NVDA Object \\(e.g. name "
"change, gain focus, state change, etc.\\), these events can be handled at "
"various levels. When an event is handled, it is stopped from going further "
"down the chain. However, code inside the event can choose to propagate it "
"further if needed. "
msgstr ""
"Aunque la mayoría de eventos están relacionados con un objeto de NVDA "
"específico \\(por ejemplo cambio de nombre, obtención de foco, cambio de "
"estado, etc.\\), estos eventos pueden manejarse a varios niveles. Cuando un "
"evento se captura, se impide que pase al siguiente punto de la cadena. Sin "
"embargo, el código dentro del evento puede elegir si se propaga más "
"adelante. "

#: ..\python_docs\developer_guide.py:365
msgid ""
"The order of levels through which the event passes until an event method is "
"found is: "
msgstr ""
"El orden de niveles por los que pasa el evento hasta que se encuentra un "
"método de evento es: "

#: ..\python_docs\developer_guide.py:367
msgid ""
"  * The App Module associated with the NVDA Object on which the event was "
"fired "
msgstr ""
"  * El módulo de aplicación asociado con el objeto de NVDA en el que se ha "
"disparado el evento "

#: ..\python_docs\developer_guide.py:368
msgid ""
"  * The Tree Interceptor \\(if any\\) associated with the NVDAObject on "
"which the event was fired "
msgstr ""
"  * El interceptor de árbol \\(si lo hay\\) asociado con el objeto de NVDA "
"donde se ha disparado el evento "

#: ..\python_docs\developer_guide.py:369
msgid "  * the NVDAObject itself. "
msgstr "  * El propio objeto de NVDA. "

#: ..\python_docs\developer_guide.py:370
msgid ""
"Events are Python instance methods, with a name starting with \"event\\_\" "
"followed by the actual name of the event \\(e.g. gainFocus\\). "
msgstr ""
"Los eventos son métodos Python de instancia, con un nombre que empieza por "
"\"event\\_\" seguido del nombre real del evento \\(por ejemplo, gainFocus"
"\\). "

#: ..\python_docs\developer_guide.py:371
msgid ""
"These event methods take slightly different arguments depending at what "
"level they are defined. "
msgstr ""
"Estos métodos de evento reciben argumentos ligeramente diferentes "
"dependiendo del nivel en el que se definan. "

#: ..\python_docs\developer_guide.py:372
msgid ""
"If an event for an NVDA Object is defined on an NVDA Object itself, the "
"method only takes one mandatory argument which is the 'self' argument; i.e. "
"the NVDA Object instance\\). Some events may take extra arguments, though "
"this is quite rare. "
msgstr ""
"Si se define un evento para un objeto de NVDA en ese objeto, el método sólo "
"recibe un argumento obligatorio, el argumento 'self'; es decir, la instancia "
"del objeto de NVDA. Algunos eventos pueden recibir argumentos extra, aunque "
"es bastante raro. "

#: ..\python_docs\developer_guide.py:373
msgid ""
"If an event for an NVDA Object is defined on a Global Plugin, App Module or "
"Tree Interceptor, the event takes the following arguments: "
msgstr ""
"Si se define un evento para un objeto de NVDA en una extensión global, "
"módulo de aplicación o interceptor de árbol, el evento recibe los siguientes "
"argumentos: "

#: ..\python_docs\developer_guide.py:374
msgid ""
"  * self: the instance of the Global Plugin, App Module or Tree Interceptor "
msgstr ""
"  * self: la instancia de la extensión global, módulo de aplicación o "
"interceptor de árbol "

#: ..\python_docs\developer_guide.py:375
msgid "  * obj: the NVDA Object on which the event was fired "
msgstr "  * obj: el objeto de NVDA en el que se ha disparado el evento "

#: ..\python_docs\developer_guide.py:376
msgid ""
"  * nextHandler: a function that when called will propagate the event "
"further down the chain. "
msgstr ""
"  * nextHandler: una función que al ser llamada propaga el evento al "
"siguiente punto de la cadena. "

#: ..\python_docs\developer_guide.py:377
msgid "Some common NVDA Object events are: "
msgstr "Algunos eventos comunes de objetos de NVDA son: "

#: ..\python_docs\developer_guide.py:378
msgid ""
"  * foreground: this NVDA Object has become the new foreground object; i.e. "
"active top-level object "
msgstr ""
"  * foreground: este objeto de NVDA se ha convertido en el nuevo objeto en "
"primer plano; es decir, el objeto activo de nivel superior. "

#: ..\python_docs\developer_guide.py:379
msgid "  * gainFocus "
msgstr "  * gainFocus "

#: ..\python_docs\developer_guide.py:380
msgid ""
"  * focusEntered: Focus has moved inside this object; i.e. it is an ancestor "
"of the focus object "
msgstr ""
"  * focusEntered: el foco se ha movido dentro de este objeto; es decir, es "
"un antepasado del objeto con el foco "

#: ..\python_docs\developer_guide.py:381
msgid "  * loseFocus "
msgstr "  * loseFocus "

#: ..\python_docs\developer_guide.py:382
msgid "  * nameChange "
msgstr "  * nameChange "

#: ..\python_docs\developer_guide.py:383
msgid "  * valueChange "
msgstr "  * valueChange "

#: ..\python_docs\developer_guide.py:384
msgid "  * stateChange "
msgstr "  * stateChange "

#: ..\python_docs\developer_guide.py:385
msgid ""
"  * caret: when the caret \\(insertion point\\) within this NVDA Object "
"moves "
msgstr ""
"  * caret: cuando el caret \\(punto de inserción\\) se mueve dentro de este "
"objeto de NVDA "

#: ..\python_docs\developer_guide.py:386
msgid "  * locationChange: physical screen location changes "
msgstr "  * locationChange: la ubicación en la pantalla física cambia "

#: ..\python_docs\developer_guide.py:387
msgid ""
"There are many other events, though those listed above are usually the most "
"useful. "
msgstr ""
"Hay muchos otros eventos, aunque los que se han listado arriba son "
"normalmente los más útiles. "

#: ..\python_docs\developer_guide.py:388
msgid ""
"For an example of an event handled by an App Module, please refer to example "
"1 \\(focus beeps in notepad\\). "
msgstr ""
"Para ver un ejemplo de un evento manejado por un módulo de aplicación, mira "
"el ejemplo 1 \\(pitidos del foco en el bloc de notas\\). "

#: ..\python_docs\developer_guide.py:389
msgid "### 3.13. the App Module SleepMode variable"
msgstr "### 3.13. La variable SleepMode en módulos de aplicación"

#: ..\python_docs\developer_guide.py:390
msgid ""
"App Modules have one very useful property called \"sleepMode\", which if set "
"to true almost completely disables NVDA within that application. Sleep Mode "
"is very useful for self voicing applications that have their own screen "
"reading functionality, or perhaps even some games that need full use of the "
"keyboard. "
msgstr ""
"Los módulos de aplicación tienen una propiedad muy útil llamada \"sleepMode"
"\", que si se establece a True deshabilita casi completamente NVDA en la "
"aplicación correspondiente. El modo latente es muy útil para aplicaciones "
"con respuesta de voz propia o funciones internas de lectura de pantalla, o "
"quizás incluso algunos juegos que necesitan disponer completamente del "
"teclado. "

#: ..\python_docs\developer_guide.py:391
msgid ""
"Although sleep mode can be toggled on and off by the user with the key "
"command NVDA+shift+s, a developer can choose to have sleep mode enabled by "
"default for an application. This is done by providing an App Module for that "
"application which simply sets sleepMode to True in the AppModule class. "
msgstr ""
"Aunque el modo latente puede ser activado y desactivado por el usuario con "
"la orden de teclado NVDA+shift+s, un desarrollador puede elegir tener el "
"modo latente activado por defecto para una aplicación. Esto se hace "
"proporcionando un módulo de aplicación para esa aplicación que simplemente "
"establezca sleepMode a True en la clase AppModule. "

#: ..\python_docs\developer_guide.py:392
msgid "### 3.14. Example 5: A Sleep Mode App Module"
msgstr "### 3.14. Ejemplo 5: un módulo de aplicación en modo latente"

#: ..\python_docs\developer_guide.py:393
msgid ""
"The following code can be copied and pasted in to a text file, then saved in "
"the appModules directory with the name of the application you wish to enable "
"sleep mode for. As always, the file must have a .py extension. "
msgstr ""
"El siguiente código se puede copiar y pegar en un archivo de texto, y "
"guardarse en el directorio appModules con el nombre de la aplicación para la "
"que quieras activar el modo latente. Como siempre, el archivo debe tener "
"extensión .py. "

#: ..\python_docs\developer_guide.py:401
msgid "    \tsleepMode = True"
msgstr "    \tsleepMode = True"

#: ..\python_docs\developer_guide.py:405
msgid "### 3.15. Providing Custom NVDA Object Classes"
msgstr "### 3.15. Proporcionar clases de objetos personalizados de NVDA"

#: ..\python_docs\developer_guide.py:406
msgid ""
"Providing custom NVDA Object classes is probably the most powerful and "
"useful way to improve the experience of an application in an NVDA plugin. "
"This method allows you to place all the needed logic for a particular "
"control altogether in one NVDA Object class for that control, rather than "
"scattering code for many controls across a plugin's events. "
msgstr ""
"Ofrecer clases personalizadas de objetos NVDA es probablemente la forma más "
"potente y útil de mejorar la experiencia para una aplicación en una "
"extensión de NVDA. Este método te permite situar toda la lógica necesaria "
"para un control en particular junta en una única clase de objeto de NVDA "
"para ese control, en vez de crear código para muchos controles a través de "
"los eventos de la extensión. "

#: ..\python_docs\developer_guide.py:407
msgid "There are two steps to providing a custom NVDA Object class: "
msgstr ""
"Hay dos pasos para proporcionar una clase de objeto de NVDA personalizado: "

#: ..\python_docs\developer_guide.py:408
msgid ""
"  * Define the NVDA Object class and its events, scripts, gesture bindings "
"and overridden properties. "
msgstr ""
"  * Definir la clase del objeto NVDA y sus eventos, scripts, asociaciones de "
"gestos y propiedades sobreescritas. "

#: ..\python_docs\developer_guide.py:409
msgid ""
"  * Tell NVDA to use this NVDA Object class in specific situations by "
"handling it in the plugin's chooseNVDAObjectOverlayClasses method. "
msgstr ""
"  * Decirle a NVDA que use esta clase de objeto de NVDA en situaciones "
"específicas manejándola en el método chooseNVDAObjectOverlayClasses de la "
"extensión. "

#: ..\python_docs\developer_guide.py:410
msgid ""
"When defining a custom NVDAObject class, you have many NVDAObject base "
"classes to choose from. These base classes contain the base support for the "
"particular accessibility or OS API underlying the control, such as win32, "
"MSAA or Java access Bridge. You should usually inherit your custom "
"NVDAObject class from the highest base class you need in order to choose "
"your class in the first place. For example, if you choose to use your custom "
"NVDAObject class when the window class name is \"Edit\" and the window "
"control ID is 15, you should probably inherit from NVDAObjects.window."
"Window, as clearly you are aware that this is a Window object. Similarly, if "
"you match on MSAA's accRole property, you would probably need to inherit "
"from NVDAObjects.IAccessible.IAccessible. You should also consider what "
"properties you are going to override on the custom NVDA Object. For "
"instance, if you are going to override an IAccessible specific property, "
"such as shouldAllowIAccessibleFocusEvent, then you need to inherit from "
"NVDAObjects.IAccessible.IAccessible. "
msgstr ""
"Al definir una clase de objeto NVDA personalizado, tienes muchas clases base "
"de objetos NVDA para elegir. Estas clases base contienen el soporte básico "
"para la api de accesibilidad o del sistema operativo subyacente al control, "
"como por ejemplo Win32, MSAA, o Java Access Bridge. Deberías hacer que tu "
"clase de objeto NVDA personalizado herede de la clase base más alta que "
"necesites para elegir tu clase en primer lugar. Por ejemplo, si eliges usar "
"tu clase de objeto NVDA personalizada cuando el nombre de clase de ventana "
"sea \"Edit\" y el identificador de control de la ventana sea 15, "
"probablemente deberías heredar de NVDAObjects.window.Window, ya que "
"claramente eres consciente de que este es un objeto Window. De forma "
"similar, si te fijas en la propiedad accRole de MSAA, probablemente deberías "
"heredar de NVDAObjects.IAccessible.IAccessible. También deberías considerar "
"qué propiedades vas a sobreescribir en el objeto NVDA personalizado. Por "
"ejemplo, si vas a sobreescribir una propiedad específica de IAccessible, "
"como shouldAllowIAccessibleFocusEvent, entonces debes heredar de NVDAObjects."
"IAccessible.IAccessible. "

#: ..\python_docs\developer_guide.py:411
msgid ""
"the chooseNVDAObjectOverlayClasses method can be implemented on app modules "
"or global plugin classes. It takes 3 arguments: "
msgstr ""
"el método chooseNVDAObjectOverlayClasses puede implementarse en en clases de "
"módulos de aplicación o extensiones globales. Recibe 3 argumentos: "

#: ..\python_docs\developer_guide.py:412
msgid "  1. self: the app module or global plugin instance. "
msgstr "  1. self: la instancia del módulo de aplicación o extensión global. "

#: ..\python_docs\developer_guide.py:413
msgid "  2. obj: the NVDAObject for which classes are being chosen. "
msgstr "  2. obj: el objeto de NVDA para el que se van a elegir clases. "

#: ..\python_docs\developer_guide.py:414
msgid ""
"  3. clsList: a Python list of NVDAObject classes that will be used for obj. "
msgstr ""
"  3. clsList: una lista Python de clases de objetos NVDA que se usarán con "
"obj. "

#: ..\python_docs\developer_guide.py:415
msgid ""
"Inside this method, you should decide which custom NVDA Object class\\(es\\) "
"\\(if any\\) this NVDA Object should use by checking its properties, etc. If "
"a custom class should be used, it must be inserted into the class list, "
"usually at the beginning. You can also remove classes chosen by NVDA from "
"the class list, although this is rarely required. "
msgstr ""
"Dentro de este método, deberías decidir qué clase o clases de objeto NVDA "
"personalizado (si las hay) debería usar este objeto NVDA comprobando sus "
"propiedades, etc. Si debiera usarse una clase personalizada, debe insertarse "
"en la lista de clases, normalmente al principio. También puedes eliminar "
"clases elegidas por NVDA de la lista de clases, aunque esto rara vez hace "
"falta. "

#: ..\python_docs\developer_guide.py:416
msgid ""
"### 3.16. Example 6: Command to Retrieve the Length of Text in an Edit Field "
"Using a Custom NVDA Object"
msgstr ""
"### 3.16. Ejemplo 6: orden para recuperar la longitud del texto en un cuadro "
"de edición usando un objeto de NVDA personalizado"

#: ..\python_docs\developer_guide.py:417
msgid ""
"This app module for notepad provides a command to report the number of "
"characters in edit fields. You can activate it using NVDA+l. Notice that the "
"command is specific to edit fields; i.e. it only works while you are focused "
"in an edit field, rather than anywhere in the application. "
msgstr ""
"Este módulo de aplicación para el bloc de notas proporciona una orden para "
"informar sobre el número de caracteres en los cuadros de edición. Puedes "
"activarlo usando NVDA+l. Ten en cuenta que la orden es específica para "
"cuadros de edición; sólo funciona si el foco está en uno, en vez de "
"funcionar en cualquier lugar de la aplicación. "

#: ..\python_docs\developer_guide.py:418 ..\python_docs\developer_guide.py:450
msgid ""
"The following code can be copied and pasted in to a text file, then saved in "
"the appModules directory with the name of notepad.py. "
msgstr ""
"El siguiente código puede copiarse y pegarse en un archivo de texto, y "
"guardarse en el directorio appModules con el nombre notepad.py. "

#: ..\python_docs\developer_guide.py:424
msgid "    from NVDAObjects.IAccessible import IAccessible"
msgstr "    from NVDAObjects.IAccessible import IAccessible"

#: ..\python_docs\developer_guide.py:425
msgid "    import controlTypes"
msgstr "    import controlTypes"

#: ..\python_docs\developer_guide.py:430
msgid "    \tdef chooseNVDAObjectOverlayClasses(self, obj, clsList):"
msgstr "    \tdef chooseNVDAObjectOverlayClasses(self, obj, clsList):"

#: ..\python_docs\developer_guide.py:431
msgid ""
"    \t\tif obj.windowClassName == \"Edit\" and obj.role == controlTypes."
"ROLE_EDITABLETEXT:"
msgstr ""
"    \t\tif obj.windowClassName == \"Edit\" and obj.role == controlTypes."
"ROLE_EDITABLETEXT:"

#: ..\python_docs\developer_guide.py:432
msgid "    \t\t\tclsList.insert(0, EnhancedEditField)"
msgstr "    \t\t\tclsList.insert(0, EnhancedEditField)"

#: ..\python_docs\developer_guide.py:434
msgid "    class EnhancedEditField(IAccessible):"
msgstr "    class EnhancedEditField(IAccessible):"

#: ..\python_docs\developer_guide.py:436
msgid "    \t@script(gesture=\"kb:NVDA+l\")"
msgstr "    \t@script(gesture=\"kb:NVDA+l\")"

#: ..\python_docs\developer_guide.py:437
msgid "    \tdef script_reportLength(self, gesture):"
msgstr "    \tdef script_reportLength(self, gesture):"

#: ..\python_docs\developer_guide.py:438
#, python-format
msgid "    \t\tui.message(\"%d\" % len(self.value))"
msgstr "    \t\tui.message(\"%d\" % len(self.value))"

#: ..\python_docs\developer_guide.py:442
msgid "### 3.17. Making Small Changes to an NVDA Object in App Modules"
msgstr ""
"### 3.17. Hacer pequeños cambios a un objeto de NVDA en módulos de aplicación"

#: ..\python_docs\developer_guide.py:443
msgid ""
"Sometimes, you may wish to make only small changes to an NVDA Object in an "
"application, such as overriding its name or role. In these cases, you don't "
"need the full power of a custom NVDA Object class. To do this, you can use "
"the NVDAObject\\_init event available only on App Modules. "
msgstr ""
"En ocasiones, puedes querer hacer solamente pequeños cambios a un objeto de "
"NVDA en una aplicación, tales como sobreescribir su nombre o su rol. En "
"estos casos, no necesitas el poder completo de una clase de objeto NVDA "
"personalizada. Para hacerlo, puedes usar el evento NVDAObject\\_init, "
"disponible únicamente en módulos de aplicación. "

#: ..\python_docs\developer_guide.py:444
msgid "The event\\_NVDAObject\\_init method takes two arguments: "
msgstr "El método event\\_NVDAObject\\_init recibe dos argumentos: "

#: ..\python_docs\developer_guide.py:445
msgid "  1. self: the AppModule instance. "
msgstr "  1. self: la instancia del módulo de aplicación. "

#: ..\python_docs\developer_guide.py:446
msgid "  2. obj: the NVDAObject being initialized. "
msgstr "  2. obj: el objeto de NVDA que se inicializa. "

#: ..\python_docs\developer_guide.py:447
msgid ""
"Inside this method, you can check whether this object is relevant and then "
"override properties accordingly. "
msgstr ""
"Dentro de este método, puedes comprobar si este objeto es relevante y "
"sobreescribir propiedades en consecuencia. "

#: ..\python_docs\developer_guide.py:448
msgid ""
"### 3.18. Example 7: Labelling the Notepad Edit Field Using event"
"\\_NVDAObject\\_init"
msgstr ""
"### 3.18. Ejemplo 7: etiquetando el cuadro de edición del bloc de notas "
"usando event\\_NVDAObject\\_init"

#: ..\python_docs\developer_guide.py:449
msgid ""
"This app module for notepad makes NVDA report Notepad's main edit field as "
"having a name of \"content\". That is, when it receives focus, NVDA will say "
"\"Content edit\". "
msgstr ""
"Este módulo de aplicación para el bloc de notas hace que NVDA indique el "
"cuadro de edición principal del bloc de notas como si tuviera el nombre "
"\"contenido\". Es decir, cuando recibe el foco, NVDA dirá \"contenido edición"
"\". "

#: ..\python_docs\developer_guide.py:455
msgid "    from NVDAObjects.window import Window"
msgstr "    from NVDAObjects.window import Window"

#: ..\python_docs\developer_guide.py:459
msgid "    \tdef event_NVDAObject_init(self, obj):"
msgstr "    \tdef event_NVDAObject_init(self, obj):"

#: ..\python_docs\developer_guide.py:460
msgid ""
"    \t\tif isinstance(obj, Window) and obj.windowClassName == \"Edit\" and "
"obj.windowControlID == 15:"
msgstr ""
"    \t\tif isinstance(obj, Window) and obj.windowClassName == \"Edit\" and "
"obj.windowControlID == 15:"

#: ..\python_docs\developer_guide.py:461
msgid "    \t\t\tobj.name = \"Content\""
msgstr "    \t\t\tobj.name = \"Contenido\""

#: ..\python_docs\developer_guide.py:464
msgid "## 4\\. Packaging Code as NVDA Add-ons"
msgstr "## 4\\. Empaquetado de código como complementos de NVDA"

#: ..\python_docs\developer_guide.py:465
msgid ""
"To make it easy for users to share and install plugins and drivers, they can "
"be packaged in to a single NVDA add-on package which the user can then "
"install into a copy of NVDA via the Add-ons Manager found under Tools in the "
"NVDA menu. Add-on packages are only supported in NVDA 2012.2 and later. An "
"add-on package is simply a standard zip archive with the file extension of "
"nvda-addon which contains a manifest file, optional install/uninstall code "
"and one or more directories containing plugins and/or drivers. "
msgstr ""
"Para ponerle fácil a los usuarios la tarea de instalar extensiones y "
"controladores, estos pueden empaquetarse en un único paquete de complemento "
"de NVDA que el usuario puede instalar en una copia de NVDA a través del "
"administrador de complementos que se encuentra en herramientas en el menú de "
"NVDA. Los paquetes de complementos se soportan sólo en NVDA 2012.2 y "
"posterior. Un complemento de NVDA es simplemente un archivo Zip estándar con "
"la extensión de archivo nvda-addon, que contiene un archivo de manifiesto, "
"código opcional de instalación y desinstalación, y uno o más directorios con "
"extensiones y / o controladores. "

#: ..\python_docs\developer_guide.py:466
msgid "### 4.1. Non-ASCII File Names in Zip Archives"
msgstr "### 4.1. Nombres de fichero no ASCII en archivos Zip"

#: ..\python_docs\developer_guide.py:467
msgid ""
"If your add-on includes files which contain non-ASCII \\(non-English\\) "
"characters, you should create the zip archive such that it uses UTF-8 file "
"names. This means that these files can be extracted properly on all systems, "
"regardless of the system's configured language. Unfortunately, many zip "
"archivers do not support this, including Windows Explorer. Generally, it has "
"to be explicitly enabled even in archivers that do support it. [7-Zip]"
"(http://www.7-zip.org/) supports this, though it must be enabled by "
"specifying the \"cu=on\" method parameter. "
msgstr ""
"Si tu complemento incluye archivos que contienen caracteres no ASCII \\(no "
"ingleses\\), deberías crear el archivo Zip de tal manera que use nombres de "
"archivo UTF-8. Esto significa que estos archivos pueden extraerse "
"adecuadamente en todos los sistemas, independientemente del idioma "
"configurado en el sistema. Por desgracia, muchos compresores zip no soportan "
"esta característica, incluido el explorador de Windows. Generalmente, tiene "
"que habilitarse de forma explícita incluso en compresores que sí lo "
"soportan. [7-zip](http://www.7-zip.org) lo soporta, aunque hay que activarlo "
"especificando el parámetro de método \"cu=on\". "

#: ..\python_docs\developer_guide.py:468
msgid "### 4.2. Manifest Files"
msgstr "### 4.2. Archivos de manifiesto"

#: ..\python_docs\developer_guide.py:469
msgid ""
"Each add-on package must contain a manifest file named manifest.ini. This "
"must be a UTF-8 encoded text file. This manifest file contains key = value "
"pairs declaring info such as the add-on's name, version and description. "
msgstr ""
"Cada paquete de complementos debe contener un archivo de manifiesto llamado "
"manifest.ini. Debe ser un archivo de texto codificado en UTF-8. Este archivo "
"de manifiesto contiene pares clave=valor que declaran información como el "
"nombre del complemento, versión y descripción. "

#: ..\python_docs\developer_guide.py:470
msgid "#### 4.2.1. Available Fields"
msgstr "#### 4.2.1. Campos disponibles"

#: ..\python_docs\developer_guide.py:471
msgid ""
"Although it is highly suggested that manifests contain all fields, the "
"fields marked as mandatory must be included. Otherwise, the add-on will not "
"install. "
msgstr ""
"Aunque se sugiere encarecidamente que los manifiestos tengan todos los "
"campos, basta con incluir sólo aquellos marcados como obligatorios. De "
"cualquier otro modo, el complemento no se instalará. "

#: ..\python_docs\developer_guide.py:472
msgid ""
"  * name \\(string\\): A short unique name for the add-on. This is used to "
"differentiate add-ons internally and is not shown to the user. \\(Mandatory"
"\\) "
msgstr ""
"  * name \\(cadena\\): un nombre corto y único para el complemento. Se usa "
"para diferenciar a los complementos internamente y no se muestra al usuario. "
"\\(Obligatorio\\) "

#: ..\python_docs\developer_guide.py:473
msgid ""
"  * summary \\(string\\): The name of the add-on as shown to the user. "
"\\(Mandatory\\) "
msgstr ""
"  * summary \\(cadena\\): el nombre del complemento tal como se muestra al "
"usuario. \\(Obligatorio\\) "

#: ..\python_docs\developer_guide.py:474
msgid ""
"  * version \\(string\\): The version of this add-on; e.g. 2.0. \\(Mandatory"
"\\) "
msgstr ""
"  * version \\(cadena\\): la versión del complemento, por ejemplo 2.0. "
"\\(Obligatorio\\) "

#: ..\python_docs\developer_guide.py:475
msgid ""
"  * author \\(string\\): The author of this add-on, preferably in the form "
"Full Name <email address>; e.g. Michael Curran <[mick@kulgan.net](mailto:"
"mick@kulgan.net)>. \\(Mandatory\\) "
msgstr ""
"  * author \\(cadena\\): el autor del complemento, preferiblemente en la "
"forma nombre completo &lt;dirección de correo&gt;; por ejemplo Michael "
"Curran <[mick@kulgan.net](mailto:mick@kulgan.net)>. \\(Obligatorio\\) "

#: ..\python_docs\developer_guide.py:476
msgid ""
"  * description \\(string\\): A sentence or two describing what the add-on "
"does. "
msgstr ""
"  * description \\(cadena\\): una o dos frases que describan qué hace el "
"complemento. "

#: ..\python_docs\developer_guide.py:477
msgid ""
"  * url \\(string\\): A URL where this add-on, further info and upgrades can "
"be found. "
msgstr ""
"  * url \\(cadena\\): una URL donde pueda encontrarse este complemento, sus "
"actualizaciones y más información sobre él. "

#: ..\python_docs\developer_guide.py:478
msgid ""
"  * docFileName \\(string\\): The name of the main documentation file for "
"this add-on; e.g. readme.html. See the Add-on Documentation section for more "
"details. "
msgstr ""
"  * docFileName \\(cadena\\): el nombre del archivo de documentación "
"principal para el complemento; por ejemplo readme.html. Mira la sección de "
"documentación de complementos para más detalles. "

#: ..\python_docs\developer_guide.py:479
msgid ""
"  * minimumNVDAVersion \\(string\\): The minimum required version of NVDA "
"for this add-on to be installed or enabled. "
msgstr ""
"  * minimumNVDAVersion \\(cadena\\): la mínima versión requerida de NVDA "
"para que este complemento pueda instalarse o habilitarse. "

#: ..\python_docs\developer_guide.py:480
msgid "    * e.g \"2019.1.1\" "
msgstr "    * por ejemplo \"2019.1.1\" "

#: ..\python_docs\developer_guide.py:481 ..\python_docs\developer_guide.py:486
msgid ""
"    * Must be a three part version string I.E. Year.Major.Minor, or a two "
"part version string of Year.Major. In the second case, Minor defaults to 0. "
msgstr ""
"    * debe ser una cadena de versión en tres partes, es decir año.mayor."
"menor, o una cadena de versión en dos partes siguiendo el esquema año.mayor. "
"En el segundo caso, menor se pone por defecto a 0. "

#: ..\python_docs\developer_guide.py:482 ..\python_docs\developer_guide.py:487
msgid "    * Defaults to \"0.0.0\" "
msgstr "    * Por defecto es \"0.0.0\" "

#: ..\python_docs\developer_guide.py:483
msgid "    * Must be less than or equal to `lastTestedNVDAVersion`"
msgstr "    * Debe ser inferior o igual a `lastTestedNVDAVersion`"

#: ..\python_docs\developer_guide.py:484
msgid ""
"  * lastTestedNVDAVersion \\(string\\): The last version of NVDA this add-on "
"has been tested with. "
msgstr ""
"  * lastTestedNVDAVersion \\(cadena\\): la última versión de NVDA con la que "
"se ha probado el complemento. "

#: ..\python_docs\developer_guide.py:485
msgid "    * e.g \"2019.1.0\" "
msgstr "    * por ejemplo \"2019.1.0\" "

#: ..\python_docs\developer_guide.py:488
msgid "    * Must be greater than or equal to `minimumNVDAVersion` "
msgstr "    * Debe ser mayor o igual a `minimumNVDAVersion` "

#: ..\python_docs\developer_guide.py:489
msgid ""
"All string values must be enclosed in quotes as shown in the example below. "
msgstr ""
"Todos los valores de cadena deben encerrarse entre comillas, como se muestra "
"en el ejemplo de más abajo. "

#: ..\python_docs\developer_guide.py:490
msgid ""
"The lastTestedNVDAVersion field in particular is used to ensure that users "
"can be confident about installing an add-on. It allows the add-on author to "
"make an assurance that the add-on will not cause instability, or break the "
"users system. When this is not provided, or is less than the current version "
"of NVDA \\(ignoring minor point updates EG 2018.3.1\\) then the user will be "
"warned not to install the add-on. "
msgstr ""
"El campo lastTestedNVDAVersion en particular se usa para asegurar que los "
"usuarios pueden confiar a la hora de instalar un complemento. Permite que el "
"autor asegure que el complemento no causará inestabilidad o dañará el "
"sistema del usuario. Cuando no se proporcione o sea menor que la versión "
"actual de NVDA \\(ignorando actualizaciones menores como 2018.3.1\\), el "
"usuario recibirá una advertencia indicando que no instale el complemento. "

#: ..\python_docs\developer_guide.py:491
msgid "#### 4.2.2. An Example Manifest File"
msgstr "#### 4.2.2. Ejemplo de archivo de manifiesto"

#: ..\python_docs\developer_guide.py:495
msgid "    name = \"myTestAddon\""
msgstr "    name = \"myTestAddon\""

#: ..\python_docs\developer_guide.py:496
msgid "    summary = \"Cool Test Add-on\""
msgstr "    summary = \"Cool Test Add-on\""

#: ..\python_docs\developer_guide.py:497
msgid "    version = \"1.0\""
msgstr "    version = \"1.0\""

#: ..\python_docs\developer_guide.py:498
msgid "    description = \"An example add-on showing how to create add-ons!\""
msgstr "    description = \"An example add-on showing how to create add-ons!\""

#: ..\python_docs\developer_guide.py:499
msgid "    author = \"Michael Curran <mick@kulgan.net>\""
msgstr "    author = \"Michael Curran <mick@kulgan.net>\""

#: ..\python_docs\developer_guide.py:500
msgid "    url = \"http://www.nvda-project.org/wiki/Development\""
msgstr "    url = \"http://www.nvda-project.org/wiki/Development\""

#: ..\python_docs\developer_guide.py:501
msgid "    docFileName = \"readme.html\""
msgstr "    docFileName = \"readme.html\""

#: ..\python_docs\developer_guide.py:502
msgid "    minimumNVDAVersion = \"2018.1.0\""
msgstr "    minimumNVDAVersion = \"2018.1.0\""

#: ..\python_docs\developer_guide.py:503
msgid "    lastTestedNVDAVersion = \"2019.1.0\""
msgstr "    lastTestedNVDAVersion = \"2019.1.0\""

#: ..\python_docs\developer_guide.py:506
msgid "### 4.3. Plugins and Drivers"
msgstr "### 4.3. Extensiones y controladores"

#: ..\python_docs\developer_guide.py:507
msgid "The following plugins and drivers can be included in an add-on: "
msgstr ""
"Se pueden incluir las siguientes extensiones y controladores en un "
"complemento: "

#: ..\python_docs\developer_guide.py:508
msgid "  * App modules: Place them in an appModules directory in the archive. "
msgstr ""
"  * Módulos de aplicación: sitúalos en una carpeta appModules en tu archivo. "

#: ..\python_docs\developer_guide.py:509
msgid ""
"  * Braille display drivers: Place them in a brailleDisplayDrivers directory "
"in the archive. "
msgstr ""
"  * Controladores de pantallas braille: sitúalos en una carpeta "
"brailleDisplayDrivers en tu archivo. "

#: ..\python_docs\developer_guide.py:510
msgid ""
"  * Global plugins: Place them in a globalPlugins directory in the archive. "
msgstr ""
"  * Extensiones globales: sitúalas en una carpeta globalPlugins en tu "
"archivo. "

#: ..\python_docs\developer_guide.py:511
msgid ""
"  * Synthesizer drivers: Place them in a synthDrivers directory in the "
"archive. "
msgstr ""
"  * Controladores de sintetizador: sitúalos en una carpeta synthDrivers en "
"tu archivo. "

#: ..\python_docs\developer_guide.py:512
msgid "### 4.4. Optional install / Uninstall code"
msgstr "### 4.4. Código opcional de instalación y desinstalación"

#: ..\python_docs\developer_guide.py:513
msgid ""
"If you need to execute code as your add-on is being installed or uninstalled "
"from NVDA \\(e.g. to validate license information or to copy files to a "
"custom location\\), you can provide a Python file called installTasks.py in "
"the archive which contains special functions that NVDA will call while "
"installing or uninstalling your add-on. This file should avoid loading any "
"modules that are not absolutely necessary, especially Python C extensions or "
"dlls from your own add-on, as this could cause later removal of the add-on "
"to fail. However, if this does happen, the add-on directory will be renamed "
"and then deleted after the next restart of NVDA. Finally, it should not "
"depend on the existence or state of other add-ons, as they may not be "
"installed, have already been removed or not yet be initialized. "
msgstr ""
"Si necesitas ejecutar código según se instala o desinstala el complemento de "
"NVDA \\(por ejemplo para validar información de la licencia o copiar "
"archivos a una ubicación personalizada\\), puedes proporcionar un fichero "
"Python llamado installTasks.py en el archivo que contiene funciones "
"especiales a las que NVDA llamará mientras instala o desinstala el "
"complemento. Este fichero debería evitar cargar cualquier módulo que no sea "
"absolutamente necesario, especialmente extensiones Python para C o DLLS del "
"complemento, ya que esto podría causar que la posterior desinstalación del "
"complemento falle. Sin embargo, si esto pasa, se renombrará el directorio "
"del complemento y se eliminará tras el siguiente reinicio de NVDA. "
"Finalmente, no debería depender de la existencia o estado de otros "
"complementos, ya que podrían no estar instalados, haber sido eliminados o "
"estar todavía sin inicializar. "

#: ..\python_docs\developer_guide.py:514
msgid "#### 4.4.1. the onInstall function"
msgstr "#### 4.4.1. La función onInstall"

#: ..\python_docs\developer_guide.py:515
msgid ""
"NVDA will look for and execute an onInstall function in installTasks.py "
"after it has finished extracting the add-on into NVDA. Note that although "
"the add-on will have been extracted at this time, its directory will have a ."
"pendingInstall suffix until NVDA is restarted, the directory is renamed and "
"the add-on is really loaded for the first time. If this function raises an "
"exception, the installation of the add-on will fail and its directory will "
"be cleaned up. "
msgstr ""
"NVDA buscará y ejecutará una función onInstall en installTasks.py después de "
"que termine de extraer el complemento en NVDA. Ten en cuenta que aunque el "
"complemento haya sido extraído en ese momento, su directorio tendrá el "
"sufijo .pendingInstall hasta que NVDA se reinicie, el directorio sea "
"renombrado y el complemento realmente cargado por primera vez. Si esta "
"función eleva una excepción, la instalación del complemento fallará y su "
"directorio será eliminado. "

#: ..\python_docs\developer_guide.py:516
msgid "#### 4.4.2. The onUninstall Function"
msgstr "#### 4.4.2. La función onUninstall"

#: ..\python_docs\developer_guide.py:517
msgid ""
"NVDA will look for and execute an onUninstall function in installTasks.py "
"when NVDA is restarted after the user has chosen to remove the add-on. After "
"this function completes, the add-on's directory will automatically be "
"removed. As this happens on NVDA startup before other components are "
"initialized, this function cannot request input from the user. "
msgstr ""
"NVDA buscará y ejecutará una función onUninstall en installTasks.py cuando "
"se reinicie después de que el usuario haya elegido eliminar el complemento. "
"Después de que esta función complete su ejecución, se eliminará "
"automáticamente el directorio del complemento. Como esto pasa en la "
"inicialización de NVDA antes de que se carguen otros componentes, esta "
"función no puede solicitar entrada del usuario. "

#: ..\python_docs\developer_guide.py:518
msgid "### 4.5. Localizing Add-ons"
msgstr "### 4.5. Traducción de complementos"

#: ..\python_docs\developer_guide.py:519
msgid ""
"It is possible to provide locale-specific information and messages for your "
"add-on. Locale information can be stored in a locale directory in the "
"archive. This directory should contain directories for each language it "
"supports, using the same language code format as the rest of NVDA; e.g. en "
"for English, fr\\_CA for French Canadian. "
msgstr ""
"Es posible proporcionar información y mensajes específicos del idioma para "
"tu complemento. La información traducida puede almacenarse en un directorio "
"locale en el archivo. Este directorio debería contener directorios para cada "
"idioma que soporte, usando el mismo formato de código de idioma que el resto "
"de NVDA; por ejemplo en para inglés, fr\\_ca para francés de Canadá. "

#: ..\python_docs\developer_guide.py:520
msgid "#### 4.5.1. Locale-specific Manifest Files"
msgstr "#### 4.5.1. Archivos de manifiesto específicos del idioma"

#: ..\python_docs\developer_guide.py:521
msgid ""
"Each of these language directories can contain a locale-specific manifest "
"file called manifest.ini, which can contain a small subset of the manifest "
"fields for translation. These fields are summary and description. All other "
"fields will be ignored. "
msgstr ""
"Cada uno de estos directorios de idioma puede contener un archivo de "
"manifiesto específico del idioma llamado manifest.ini, que puede tener un "
"pequeño subconjunto de los campos de manifiesto para traducir. Estos campos "
"son summary y description. Todos los demás campos se ignoran. "

#: ..\python_docs\developer_guide.py:522
msgid "#### 4.5.2. Locale-specific Messages"
msgstr "#### 4.5.2. Mensajes específicos del idioma"

#: ..\python_docs\developer_guide.py:523
msgid ""
"Each language directory can also contain gettext information, which is the "
"system used to translate the rest of NVDA's user interface and reported "
"messages. As with the rest of NVDA, an nvda.mo compiled gettext database "
"file should be placed in the LC\\_MESSAGES directory within this directory. "
"to allow plugins in your add-on to access gettext message information via "
"calls to \\_\\(\\), you must initialize translations at the top of each "
"Python module by calling addonHandler.initTranslation\\(\\). For more "
"information about gettext and NVDA translation in general, please read "
"<https://github.com/nvaccess/nvda/wiki/Translating>"
msgstr ""
"Cada directorio de idioma puede contener también información Gettext, que es "
"el sistema usado para traducir el resto de la interfaz de usuario de NVDA y "
"los mensajes verbalizados. Como en el resto de NVDA, se debería situar en el "
"directorio LC\\_MESSAGES dentro del directorio del idioma un archivo de base "
"de datos de Gettext compilada, llamado nvda.mo. Para permitir que las "
"extensiones de tu complemento accedan a la información de mensajes de "
"Gettext mediante llamadas a \\_\\(\\), debes inicializar las traducciones al "
"principio de cada módulo Python llamando a addonHandler.initTranslation"
"\\(\\). Para más información sobre Gettext y la traducción de NVDA en "
"general, lee la documentación para traductores que se encuentra en nuestra "
"web."

#: ..\python_docs\developer_guide.py:524
msgid "### 4.6. Add-on Documentation"
msgstr "### 4.6. Documentación del complemento"

#: ..\python_docs\developer_guide.py:525
msgid ""
"Documentation for an add-on should be placed in a doc directory in the "
"archive. Similar to the locale directory, this directory should contain "
"directories for each language in which documentation is available. "
msgstr ""
"La documentación para un complemento debería situarse en un directorio doc "
"en el archivo. De forma similar al directorio locale, este directorio "
"debería contener carpetas para cada idioma en el que haya disponible "
"documentación. "

#: ..\python_docs\developer_guide.py:526
msgid ""
"Users can access documentation for a particular add-on by opening the Add-"
"ons Manager, selecting the add-on and pressing the Add-on help button. This "
"will open the file named in the docFileName parameter of the manifest. NVDA "
"will search for this file in the appropriate language directories. For "
"example, if docFileName is set to readme.html and the user is using English, "
"NVDA will open doc\\en\\readme.html. "
msgstr ""
"Los usuarios pueden acceder a la documentación para un complemento "
"específico abriendo el gestor de complementos, seleccionando el complemento "
"y pulsando el botón de ayuda del complemento. Esto abrirá el archivo "
"especificado en el parámetro docFileName del manifiesto. NVDA buscará este "
"archivo en los directorios concretos del idioma. Por ejemplo, si se "
"establece docFileName a readme.html y el usuario utiliza NVDA en inglés, "
"NVDA abrirá doc\\en\\readme.html. "

#: ..\python_docs\developer_guide.py:527
msgid "## 5\\. NVDA Python Console"
msgstr "##5\\. La consola Python de NVDA"

#: ..\python_docs\developer_guide.py:528
msgid ""
"The NVDA Python console emulates the interactive Python interpreter from "
"within NVDA. It is a development tool which is useful for debugging, general "
"inspection of NVDA internals or inspection of the accessibility hierarchy of "
"an application. "
msgstr ""
"La consola Python de NVDA emula el intérprete interactivo de Python desde "
"NVDA. Es una herramienta de desarrollo útil para depuración, inspección "
"interna general de NVDA, o inspección de la jerarquía de accesibilidad de "
"una aplicación. "

#: ..\python_docs\developer_guide.py:529
msgid "### 5.1. Usage"
msgstr "### 5.1. Modo de uso"

#: ..\python_docs\developer_guide.py:530
msgid "The console can be activated in two ways: "
msgstr "La consola puede activarse de dos formas: "

#: ..\python_docs\developer_guide.py:531
msgid ""
"  * By pressing NVDA+control+z. If activated in this fashion, a snapshot of "
"the current state of NVDA at the time the key was pressed will be taken and "
"saved in certain variables available in the console. See Snapshot Variables "
"for more details. "
msgstr ""
"  * Pulsando NVDA+ctrl+z. Si se activa de este modo, se tomará una "
"instantánea de NVDA en el momento en que se pulsaron las teclas y se "
"guardará en ciertas variables disponibles en la consola. Mira la sección de "
"variables instantáneas para más detalles. "

#: ..\python_docs\developer_guide.py:532
msgid ""
"  * By selecting Tools -> Python console from the NVDA system tray menu. "
msgstr ""
"  * Seleccionando Herramientas -> Consola Python desde el menú de NVDA de la "
"bandeja del sistema. "

#: ..\python_docs\developer_guide.py:533
msgid ""
"The console is similar to the standard interactive Python interpreter. Input "
"is accepted one line at a time and processed when enter is pressed. Multiple "
"lines can be pasted at once from the clipboard and will be processed one by "
"one. You can navigate through the history of previously entered lines using "
"the up and down arrow keys. "
msgstr ""
"La consola es similar al intérprete interactivo estándar de Python. La "
"entrada sólo acepta una línea cada vez y la procesa al pulsar intro. Se "
"pueden pegar varias líneas a la vez desde el portapapeles y se procesarán "
"una a una. Puedes navegar por el historial de líneas introducidas "
"anteriormente usando flechas arriba y abajo. "

#: ..\python_docs\developer_guide.py:534
msgid ""
"Output \\(responses from the interpreter\\) will be spoken when enter is "
"pressed. The f6 key toggles between the input and output controls. When on "
"the output control, alt+up/down jumps to the previous/next result \\(add "
"shift for selecting\\). Pressing control+l clears the output. "
msgstr ""
"La salida \\(respuestas del intérprete\\) se verbalizará al pulsar intro. La "
"tecla f6 permite desplazarse entre los controles de entrada y salida. Cuando "
"te encuentres en el control de salida, alt+arriba/abajo salta al resultado "
"anterior o siguiente \\(añade shift para seleccionar\\). Al pulsar control+l "
"se limpia la salida. "

#: ..\python_docs\developer_guide.py:535
msgid ""
"The result of the last executed command is stored in the \"\\_\" global "
"variable. This shadows the gettext function which is stored as a built-in "
"with the same name. It can be unshadowed by executing \"del \\_\" and "
"avoided altogether by executing \"\\_ = \\_\". "
msgstr ""
"El resultado del último comando ejecutado se almacena en la variable global "
"\"\\_\". Esto impide usar la función de Gettext que se aloja como función "
"incorporada con el mismo nombre. Se puede suprimir esta superposición "
"ejecutando \"del \\_\", y evitarse con \"\\_=\\_\". "

#: ..\python_docs\developer_guide.py:536
msgid ""
"Closing the console window \\(with escape or alt+F4\\) simply hides it. This "
"allows the user to return to the session as it was left when it was closed, "
"including history and variables. "
msgstr ""
"Cerrar la ventana de la consola \\(con escape o alt+f4\\) simplemente la "
"oculta. Esto permite al usuario volver a la sesión tal y como la dejó cuando "
"la cerró, incluyendo historial y variables. "

#: ..\python_docs\developer_guide.py:537
msgid "### 5.2. Namespace"
msgstr "### 5.2. Espacio de nombres"

#: ..\python_docs\developer_guide.py:538
msgid "#### 5.2.1. Automatic Imports"
msgstr "#### 5.2.1. Importaciones automáticas"

#: ..\python_docs\developer_guide.py:539
msgid ""
"For convenience, the following modules and variables are automatically "
"imported in the console: sys, os, wx, log \\(from logHandler\\), api, "
"queueHandler, config, controlTypes, textInfos, braille, speech, vision, "
"appModules, globalPlugins "
msgstr ""
"Los siguientes módulos y variables se importan automáticamente en la consola "
"por conveniencia: sys, os, wx, log \\(de logHandler\\), api, queueHandler, "
"config, controlTypes, textInfos, braille, speech, vision, appModules, "
"globalPlugins "

#: ..\python_docs\developer_guide.py:540
msgid "See: pythonConsole.PythonConsole.initNamespace "
msgstr "Consulta: pythonConsole.PythonConsole.initNamespace "

#: ..\python_docs\developer_guide.py:541
msgid "#### 5.2.2. Snapshot Variables"
msgstr "#### 5.2.2. Variables instantáneas"

#: ..\python_docs\developer_guide.py:542
msgid ""
"Whenever NVDA+control+z is pressed, certain variables available in the "
"console will be assigned according to the current state of NVDA. These "
"variables are: "
msgstr ""
"Cada vez que se pulse NVDA+ctrl+z, se asignarán ciertas variables en la "
"consola basándose en el estado actual de NVDA. Estas variables son: "

#: ..\python_docs\developer_guide.py:543
msgid "  * focus: The current focus object "
msgstr "  * focus: el objeto actual con el foco "

#: ..\python_docs\developer_guide.py:544
msgid "  * focusAnc: The ancestors of the current focus object "
msgstr "  * focusAnc: los antepasados del objeto actual con el foco "

#: ..\python_docs\developer_guide.py:545
msgid ""
"  * fdl: Focus difference level; i.e. the level at which the ancestors for "
"the current and previous focus differ "
msgstr ""
"  * fdl: nivel de diferencia del foco; es decir, el nivel al que los "
"antepasados difieren entre el objeto que tenía previamente el foco y el "
"actual "

#: ..\python_docs\developer_guide.py:546
msgid "  * fg: The current foreground object "
msgstr "  * fg: el objeto actual en primer plano "

#: ..\python_docs\developer_guide.py:547
msgid "  * nav: The current navigator object "
msgstr "  * nav: el navegador de objetos actual "

#: ..\python_docs\developer_guide.py:548
msgid "  * mouse: The current mouse object "
msgstr "  * mouse: el objeto actual del ratón "

#: ..\python_docs\developer_guide.py:549
msgid "  * brlRegions: The braille regions from the active braille buffer "
msgstr "  * brlRegions: las regiones braille del buffer braille activo "

#: ..\python_docs\developer_guide.py:550
msgid "### 5.3. Tab completion"
msgstr "### 5.3. Autocompletado con el tabulador"

#: ..\python_docs\developer_guide.py:551
msgid ""
"The input control supports tab-completion of variables and member attributes "
"names. Hit the tab key once to complete the current input if there is one "
"single candidate. If there is more than one, hit the tab key a second time "
"to open a menu listing all matching possibilities. By default, only \"public"
"\" member attributes are listed. That is, if the input is \"nav.\", "
"attribute names with no leading underscore are proposed. If the input is "
"\"nav.\\_\", attribute names with a single leading underscore are proposed. "
"Similarly, if the input is \"nav.\\_\\_\", attribute names with two leading "
"underscores are proposed. "
msgstr ""
"El control de entrada soporta el autocompletado mediante tabulador de "
"variables y nombres de atributos miembros. Pulsa el tabulador una vez para "
"autocompletar la entrada actual si hay un candidato único. Si hay más de "
"uno, pulsa el tabulador por segunda vez para abrir un menú que liste todas "
"las posibilidades que encajen. Por defecto, sólo se listan los atributos y "
"miembros \"públicos\". Esto significa que si por ejemplo la entrada es \"nav."
"\", se proponen los nombres de atributo que no comiencen con un guión bajo. "
"Si la entrada es \"nav.\\_\", se proponen los atributos miembros con un "
"guión bajo al principio. De manera similar, si la entrada es \"nav.\\_\\_\", "
"se proponen los atributos que comiencen con dos guiones bajos. "

#: ..\python_docs\developer_guide.py:552
msgid "## 6\\. Remote Python Console"
msgstr "## 6\\. La consola Python remota"

#: ..\python_docs\developer_guide.py:553
msgid ""
"A remote Python console is available in source builds of NVDA, for "
"situations where remote debugging of NVDA is useful. It is similar to the "
"local Python console discussed above, but is accessed via TCP. "
msgstr ""
"En las compilaciones de código fuente de NVDA, se encuentra disponible una "
"consola Python remota para situaciones donde la depuración remota de NVDA es "
"útil. Es similar a la consola Python local expuesta arriba, pero se accede a "
"ella a través de tcp. "

#: ..\python_docs\developer_guide.py:554
msgid ""
"Please be aware that this is a huge security risk. It is not available in "
"binary builds distributed by NV Access, and You should only enable it if you "
"are connected to trusted networks. "
msgstr ""
"Por favor, sé consciente de que supone un enorme riesgo de seguridad. No se "
"encuentra disponible en las compilaciones binarias distribuidas por NV "
"Access, y sólo deberías activarla si estás conectado a una red de confianza. "

#: ..\python_docs\developer_guide.py:555
msgid "### 6.1. Usage"
msgstr "### 6.1. Modo de uso"

#: ..\python_docs\developer_guide.py:556
msgid ""
"To enable the remote Python console, use the local Python console to import "
"remotePythonConsole and call remotePythonConsole.initialize\\(\\). You can "
"then connect to it via TCP port 6832. "
msgstr ""
"Para activar la consola Python remota, usa la consola Python local para "
"importar remotePythonConsole y llama a remotePythonConsole.initialize\\(\\). "
"A continuación puedes conectarte a ella por el puerto tcp 6832. "

#: ..\python_docs\developer_guide.py:557
msgid "History of previously entered lines is not supported. "
msgstr "No se soporta el historial de líneas introducidas previamente. "

#: ..\python_docs\developer_guide.py:558
msgid ""
"The namespace is the same as the namespace in the local Python console. "
msgstr "El espacio de nombres es el mismo que el de la consola Python local. "

#: ..\python_docs\developer_guide.py:559
msgid "There are some special functions: "
msgstr "Hay algunas funciones especiales: "

#: ..\python_docs\developer_guide.py:560
msgid ""
"  * snap\\(\\): Takes a snapshot of the current state of NVDA and saves it "
"in the snapshot variables. "
msgstr ""
"  * snap\\(\\): toma una instantánea del estado actual de NVDA y la guarda "
"en las variables instantáneas. "

#: ..\python_docs\developer_guide.py:561
msgid "  * rmSnap\\(\\): Removes all snapshot variables. "
msgstr "  * rmSnap\\(\\): elimina todas las variables instantáneas. "

#~ msgid "        "
#~ msgstr "        "

#~ msgid "        --- start ---"
#~ msgstr "        --- inicio ---"

#~ msgid "        --- end ---"
#~ msgstr "        --- fin ---"

#~ msgid "    \n"
#~ msgstr "    \n"

#~ msgid "  * replacement: The text which should be spoken for the symbol. "
#~ msgstr "  * Reemplazo: el texto que debería verbalizarse para el símbolo. "

#~ msgid "        \n"
#~ msgstr "        \n"

#~ msgid "    * -: Use the default. "
#~ msgstr "    * -: Usar el valor por defecto. "

#~ msgid "                --- start ---\n"
#~ msgstr "                --- inicio ---\n"
