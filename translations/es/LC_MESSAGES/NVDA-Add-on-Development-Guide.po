# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-04 17:28+0200\n"
"PO-Revision-Date: 2021-09-04 17:29+0200\n"
"Last-Translator: José Manuel Delicado <jmdaweb@hotmail.com>\n"
"Language-Team: \n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"X-Generator: Poedit 3.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:3
msgid "<!-- A note to translators:"
msgstr "<!-- Nota para traductores:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:4
msgid ""
"If you are publishing a translated version of this file off-github, the "
"current table of contents likely won't work."
msgstr ""
"Si publicas una versión traducida de este archivo fuera de GitHub, el índice "
"actual probablemente no funcionará."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:5
msgid ""
"It includes \"user-content-\" at the start of each relative link, because of "
"Github's processing."
msgstr ""
"Incluye \"user-content-\" al principio de cada enlace relativo, a causa del "
"procesamiento de GitHub."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:6
msgid "You will have to remove all of those."
msgstr "Deberás eliminar todos ellos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:7
msgid ""
"It may be better to delete this table of contents entirely, and generate a "
"clean one, either by:"
msgstr ""
"Puede ser mejor eliminar completamente este índice, y generar uno limpio de "
"las siguientes formas:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:8
msgid ""
"Deleting everything between the TOC start and end comments, and replacing "
"the whole thing with:"
msgstr ""
"Eliminando todo entre los comentarios de inicio y fin de índice, y "
"reemplázalo por:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:9
msgid "[TOC]"
msgstr "[TOC]"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:10
msgid "Assuming your translation tool supports that markdown extension; or:"
msgstr ""
"Asumiendo que tu herramienta de traducción soporta esta extensión de "
"Markdown, o:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:11
msgid ""
"downloading the PERL script we use to generate the table of contents, and "
"running it with the "
msgstr ""
"descargando el script PERL que usamos para generar el índice, y ejecutándolo "
"con la "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:12
msgid ""
"$relativeLinkPreface variable in the CONFIGURATION section set to the empty "
"string \"\"."
msgstr ""
"variable $relativeLinkPreface en la sección de configuración establecida a "
"la cadena vacía \"\"."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:13
msgid "You can download the PERL script at:"
msgstr "Puedes descargar el script PERL desde:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:14
msgid "https://github.com/XLTechie/pubtools/raw/master/markdowntoc.pl"
msgstr "https://github.com/XLTechie/pubtools/raw/master/markdowntoc.pl"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:15
msgid ""
"If you take this latter option, you may consider generating the table of "
"contents after the translation, instead of before. This may or may not work."
msgstr ""
"Si eliges la segunda opción, puedes plantearte generar el índice después de "
"la traducción, en vez de antes. Esto puede o puede no funcionar."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:16
msgid ""
"Please report your experiences with translations, and we will do our best to "
"adjust things to make it easier."
msgstr ""
"Por favor, cuéntanos tus experiencias con la traducción, y haremos lo "
"posible para ajustar las cosas y que todo sea más fácil."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:17
msgid "-->"
msgstr "-->"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:18
msgid "[//]: # (Links for use elsewhere in the document)"
msgstr "[//]: # (Enlaces que pueden usarse en cualquier parte del documento)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:19
msgid "[Git]: https://www.git-scm.com"
msgstr "[Git]: https://www.git-scm.com"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:20
msgid "[GitHub]: https://www.github.com/"
msgstr "[GitHub]: https://www.github.com/"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:21
msgid "[BitBucket]: https://bitbucket.org/"
msgstr "[BitBucket]: https://bitbucket.org/"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:22
msgid "[NVDA GitHub page]: https://github.com/nvaccess/nvda"
msgstr "[Página de NVDA en GitHub]: https://github.com/nvaccess/nvda"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:23
msgid ""
"[NVDA Developer Guide]: https://www.nvaccess.org/files/nvda/documentation/"
"developerGuide.html"
msgstr ""
"[Guía del desarrollador de NVDA]: https://www.nvaccess.org/files/nvda/"
"documentation/developerGuide.html"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:24
msgid "[Design Overview]: https://github.com/nvaccess/nvda/wiki/DesignOverview"
msgstr ""
"[Descripción del diseño]: https://github.com/nvaccess/nvda/wiki/"
"DesignOverview"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:25
msgid "[NVDA Community Add-ons web site]: https://addons.nvda-project.org"
msgstr ""
"[Sitio web de complementos de la comunidad de NVDA]: https://addons.nvda-"
"project.org"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:26
msgid ""
"[add-on template]: https://github.com/nvdaaddons/AddonTemplate/archive/"
"master.zip"
msgstr ""
"[plantilla de complemento]: https://github.com/nvdaaddons/AddonTemplate/"
"archive/master.zip"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:27
msgid ""
"[Python Console]: <https://www.nvaccess.org/files/nvda/documentation/"
"developerGuide.html#PythonConsole> (Python Console in NVDA Developer Guide)"
msgstr ""
"[Consola Python]: <https://www.nvaccess.org/files/nvda/documentation/"
"developerGuide.html#PythonConsole> (Consola Python en la guía del "
"desarrollador de NVDA)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:28
msgid ""
"[Using Win32 API]: http://www.zlotowicz.pl/nvda/winapi.mdwn (Using Win32 API "
"in your add-on)"
msgstr ""
"[Usar la API de Win32]: http://www.zlotowicz.pl/nvda/winapi.mdwn (Usar la "
"API de Win32 en tu complemento)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:29
msgid "[Git Bash]: https://www.atlassian.com/git/tutorials/git-bash"
msgstr "[Git Bash]: https://www.atlassian.com/git/tutorials/git-bash"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:30
msgid ""
"[Git for Cygwin]: https://stackoverflow.com/questions/33006007/how-to-"
"install-git-for-cygwin"
msgstr ""
"[Git para Cygwin]: https://stackoverflow.com/questions/33006007/how-to-"
"install-git-for-cygwin"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:31
msgid "[TortoiseGit]: https://tortoisegit.org/"
msgstr "[TortoiseGit]: https://tortoisegit.org/"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:32
msgid ""
"[WSL]: https://docs.microsoft.com/en-us/windows/wsl/install-win10 (Windows "
"Subsystem for Linux)"
msgstr ""
"[WSL]: https://docs.microsoft.com/en-us/windows/wsl/install-win10 (Windows "
"Subsystem for Linux)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:33
msgid "# NVDA Add-on Development Guide"
msgstr "# Guía de Desarrollo de Complementos de NVDA"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:34
#, fuzzy
#| msgid "Latest version: January 2021 for NVDA 2020.4"
msgid "Latest version: August 2021 for NVDA 2021.2"
msgstr "Última versión: enero de 2021 para NVDA 2020.4"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:35
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:149
msgid "---"
msgstr "---"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:36
msgid "[//]: # (Place this line where you want the table of contents to start)"
msgstr "[//]: # (Pon esta línea donde quieras que empiece el índice)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:37
msgid "[Table Of Contents]: <#user-content-table-of-contents> (TOC)"
msgstr "[Índice]: <#indice>"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:38
msgid "# **TABLE OF CONTENTS**"
msgstr "# **ÍNDICE**"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:39
msgid ""
"*A note to screen reader users:* to return to this table of contents, use "
"your heading level 1 browse mode command in the reverse direction."
msgstr ""
"*Nota para usuarios de lectores de pantalla*: para volver a este índice, usa "
"tu orden del modo exploración para moverte al encabezado de nivel 1 en "
"dirección contraria."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:40
msgid ""
"- [Authors, Contributions, and Copyright](#user-content-authors-"
"contributions-and-copyright)"
msgstr ""
"- [Autores, Colaboraciones y Copyright](#autores-colaboraciones-y-copyright)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:41
msgid "- [Introduction](#user-content-introduction)"
msgstr "- [Introducción](#introduccion)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:42
msgid "- [Audience](#user-content-audience)"
msgstr "- [Audiencia](#audiencia)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:43
msgid ""
"    - [Special note on Python version](#user-content-special-note-on-python-"
"version)"
msgstr ""
"    - [Nota especial sobre la versión de Python](#nota-especial-sobre-la-"
"version-de-python)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:44
#, fuzzy
#| msgid ""
#| "    - [Special note on Python version](#user-content-special-note-on-"
#| "python-version)"
msgid ""
"    - [Special note on NVDA backward compatibility](#user-content-special-"
"note-on-nvda-backward-compatibility)"
msgstr ""
"    - [Nota especial sobre la versión de Python](#nota-especial-sobre-la-"
"version-de-python)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:45
msgid ""
"    - [A special note for scripters of other screen readers](#user-content-a-"
"special-note-for-scripters-of-other-screen-readers)"
msgstr ""
"    - [Una nota especial para creadores de scripts de otros lectores de "
"pantalla](#una-nota-especial-para-creadores-de-scripts-de-otros-lectores-de-"
"pantalla)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:46
msgid ""
"    - [A special note about Windows Store version of NVDA](#user-content-a-"
"special-note-about-windows-store-version-of-nvda)"
msgstr ""
"    - [Nota especial sobre la versión de NVDA para la tienda de Windows]"
"(#nota-especial-sobre-la-version-de-nvda-para-la-tienda-de-windows)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:47
msgid ""
"    - [A very important note about migrating custom extension code to "
"development scratchpad](#user-content-a-very-important-note-about-migrating-"
"custom-extension-code-to-development-scratchpad)"
msgstr ""
"    - [Nota muy importante sobre la migración de código personalizado de "
"extensión a development scratchpad](#nota-muy-importante-sobre-la-migracion-"
"de-codigo-personalizado-de-extension-a-development-scratchpad)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:48
#, fuzzy
#| msgid ""
#| "    - [A special note about Windows Store version of NVDA](#user-content-"
#| "a-special-note-about-windows-store-version-of-nvda)"
msgid ""
"    - [A very important note about control types module changes in NVDA "
"2021.2](#user-content-a-very-important-note-about-control-types-changes-in-"
"nvda-2021.2)"
msgstr ""
"    - [Nota especial sobre la versión de NVDA para la tienda de Windows]"
"(#nota-especial-sobre-la-version-de-nvda-para-la-tienda-de-windows)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:49
msgid "- [Add-on Basics](#user-content-add-on-basics)"
msgstr ""
"- [Conceptos básicos sobre complementos](#conceptos-basicos-sobre-"
"complementos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:50
msgid "    - [What are Add-ons?](#user-content-what-are-add-ons)"
msgstr "    - [¿Qué son los Complementos?](#que-son-los-complementos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:51
msgid "    - [What Are Add-on Modules?](#user-content-what-are-add-on-modules)"
msgstr ""
"    - [¿Qué son los módulos de un complemento?](#que-son-los-modulos-de-un-"
"complemento)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:52
msgid ""
"    - [What Are Add-on Packages?](#user-content-what-are-add-on-packages)"
msgstr ""
"    - [¿Qué son los paquetes de complementos?](#que-son-los-paquetes-de-"
"complementos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:53
msgid "    - [Installing NVDA Add-ons](#user-content-installing-nvda-add-ons)"
msgstr ""
"    - [Instalación de Complementos de NVDA](#instalacion-de-complementos-de-"
"nvda)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:54
msgid ""
"- [Setting Up Your Add-on Development Environment](#user-content-setting-up-"
"your-add-on-development-environment)"
msgstr ""
"- [Configuración del entorno de desarrollo de complementos](#configuracion-"
"del-entorno-de-desarrollo-de-complementos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:55
msgid "    - [System Requirements](#user-content-system-requirements)"
msgstr "    - [Requisitos del Sistema](#requisitos-del-sistema)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:56
msgid ""
"    - [Add-on Development Folder Structure](#user-content-add-on-development-"
"folder-structure)"
msgstr ""
"    - [Estructura de Carpetas de Desarrollo del Complemento](#estructura-de-"
"carpetas-de-desarrollo-del-complemento)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:57
msgid "    - [Add-on folder structure](#user-content-add-on-folder-structure)"
msgstr ""
"    - [Estructura de carpetas del complemento](#estructura-de-carpetas-del-"
"complemento)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:58
msgid "    - [Packaging add-ons](#user-content-packaging-add-ons)"
msgstr "    - [Enpaquetado de complementos](#enpaquetado-de-complementos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:59
msgid ""
"- [Getting started: Hands-on examples](#user-content-getting-started-hands-"
"on-examples)"
msgstr "- [Comenzando: Ejemplos prácticos](#comenzando-ejemplos-practicos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:60
msgid ""
"    - [How add-on code is organized](#user-content-how-add-on-code-is-"
"organized)"
msgstr ""
"    - [Cómo está organizado el código de los complementos](#como-esta-"
"organizado-el-codigo-de-los-complementos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:61
msgid ""
"    - [Running your add-on in this example chapter](#user-content-running-"
"your-add-on-in-this-example-chapter)"
msgstr ""
"    - [Ejecutar tu complemento de ejemplo en este capítulo](#ejecutar-tu-"
"complemento-de-ejemplo-en-este-capitulo)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:62
msgid ""
"    - [Example 1: Hear a tone when pressing NVDA+A](#user-content-example-1-"
"hear-a-tone-when-pressing-nvdaa)"
msgstr ""
"    - [Ejemplo 1: escuchar un tono al pulsar NVDA+A](#ejemplo-1-escuchar-un-"
"tono-al-pulsar-nvdaa)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:63
msgid ""
"    - [Example 1 code explanation](#user-content-example-1-code-explanation)"
msgstr ""
"    - [Explicación del código del ejemplo 1](#explicacion-del-codigo-del-"
"ejemplo-1)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:64
msgid ""
"    - [I don't understand those above terms](#user-content-i-dont-understand-"
"those-above-terms)"
msgstr ""
"    - [No entiendo los términos anteriores](#no-entiendo-los-terminos-"
"anteriores)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:65
msgid ""
"    - [Example 2: Generate a tone when switching to Notepad](#user-content-"
"example-2-generate-a-tone-when-switching-to-notepad)"
msgstr ""
"    - [Ejemplo 2: generar un tono cuando se cambie al Bloc de notas]"
"(#ejemplo-2-generar-un-tono-cuando-se-cambie-al-bloc-de-notas)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:66
msgid ""
"    - [Example 2 code explanation](#user-content-example-2-code-explanation)"
msgstr ""
"    - [Explicación del código del ejemplo 2](#explicacion-del-codigo-del-"
"ejemplo-2)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:67
msgid "    - [More new terms please](#user-content-more-new-terms-please)"
msgstr "    - [Más términos nuevos por favor](#mas-terminos-nuevos-por-favor)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:68
msgid ""
"    - [A few tips for beginners](#user-content-a-few-tips-for-beginners)"
msgstr ""
"    - [Algunos consejos para principiantes](#algunos-consejos-para-"
"principiantes)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:69
msgid ""
"- [Useful modules from NVDA core](#user-content-useful-modules-from-nvda-"
"core)"
msgstr ""
"- [Módulos útiles del núcleo de NVDA](#modulos-utiles-del-nucleo-de-nvda)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:70
msgid ""
"    - [List of useful NVDA core modules and methods](#user-content-list-of-"
"useful-nvda-core-modules-and-methods)"
msgstr ""
"    - [Lista de módulos y métodos básicos útiles de NVDA](#lista-de-modulos-"
"y-metodos-basicos-utiles-de-nvda)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:71
msgid "    - [Some real-life examples](#user-content-some-real-life-examples)"
msgstr ""
"    - [Algunos ejemplos de la vida real](#algunos-ejemplos-de-la-vida-real)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:72
msgid ""
"        - [Example 1: am I on the right app where the focus is located?]"
"(#user-content-example-1-am-i-on-the-right-app-where-the-focus-is-located)"
msgstr ""
"        - [Ejemplo 1: ¿Estoy en la aplicación correcta donde se encuentra el "
"foco?](#ejemplo-1-estoy-en-la-aplicacion-correcta-donde-se-encuentra-el-foco)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:73
msgid ""
"        - [Example 2: Display a message in a browse mode document](#user-"
"content-example-2-display-a-message-in-a-browse-mode-document)"
msgstr ""
"        - [Ejemplo 2: Mostrar un mensaje en un documento en modo exploración]"
"(#ejemplo-2-mostrar-un-mensaje-en-un-documento-en-modo-exploracion)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:74
msgid ""
"        - [Example 3: Announce the automation ID of a UIA object](#user-"
"content-example-3-announce-the-automation-id-of-a-uia-object)"
msgstr ""
"        - [Ejemplo 3: Anunciar el ID de automatización de un objeto UIA]"
"(#ejemplo-3-anunciar-el-id-de-automatizacion-de-un-objeto-uia)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:75
msgid ""
"        - [Example 4: Send keystrokes](#user-content-example-4-send-"
"keystrokes)"
msgstr ""
"        - [Ejemplo 4: Enviar pulsaciones de teclas](#ejemplo-4-enviar-"
"pulsaciones-de-teclas)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:76
msgid ""
"        - [Example 5: Stop speech whenever screen content changes if dynamic "
"content change announcement is off](#user-content-example-5-stop-speech-"
"whenever-screen-content-changes-if-dynamic-content-change-announcement-is-"
"off)"
msgstr ""
"        - [Ejemplo 5: Detener la voz cada vez que cambie el contenido de la "
"pantalla si el anuncio de cambio de contenido dinámico está desactivado]"
"(#ejemplo-5-detener-la-voz-cada-vez-que-cambie-el-contenido-de-la-pantalla-"
"si-el-anuncio-de-cambio-de-contenido-dinamico-esta-desactivado)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:77
msgid ""
"        - [Example 6: using script decorator](#user-content-example-6-using-"
"script-decorator)"
msgstr ""
"        - [Ejemplo 6: uso del decorador script](#ejemplo-6-uso-del-decorador-"
"script)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:78
msgid ""
"- [Add-on module components and development tips](#user-content-add-on-"
"module-components-and-development-tips)"
msgstr ""
"- [Componentes del módulo de un complemento y consejos de desarrollo]"
"(#componentes-del-modulo-de-un-complemento-y-consejos-de-desarrollo)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:79
msgid "    - [The Python Console](#user-content-the-python-console)"
msgstr "    - [La consola Python](#la-consola-python)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:80
msgid ""
"    - [Working with objects on screen](#user-content-working-with-objects-on-"
"screen)"
msgstr ""
"    - [Trabajando con objetos en pantalla](#trabajando-con-objetos-en-"
"pantalla)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:81
msgid ""
"    - [Examining object hierarchy](#user-content-examining-object-hierarchy)"
msgstr ""
"    - [Examinando la jerarquía de objetos](#examinando-la-jerarquia-de-"
"objetos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:82
msgid ""
"    - [Focus vs. navigator object](#user-content-focus-vs-navigator-object)"
msgstr "    - [Foco vs. navegador de objetos](#foco-vs-navegador-de-objetos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:83
msgid ""
"    - [Other useful object-related goodies](#user-content-other-useful-"
"object-related-goodies)"
msgstr ""
"    - [Otras golosinas útiles relacionadas con objetos](#otras-golosinas-"
"utiles-relacionadas-con-objetos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:84
msgid ""
"    - [Example 1: Finding the value of a slider in a program](#user-content-"
"example-1-finding-the-value-of-a-slider-in-a-program)"
msgstr ""
"    - [Ejemplo 1: encontrar el valor de un deslizador en un programa]"
"(#ejemplo-1-encontrar-el-valor-de-un-deslizador-en-un-programa)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:85
msgid ""
"    - [Specialist objects and overriding object properties at runtime](#user-"
"content-specialist-objects-and-overriding-object-properties-at-runtime)"
msgstr ""
"    - [Objetos Especiales y redefinición de las propiedades de objetos en "
"tiempo de ejecución](#objetos-especiales-y-redefinicion-de-las-propiedades-"
"de-objetos-en-tiempo-de-ejecucion)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:86
msgid ""
"    - [Examples of overlay classes and modified roles](#user-content-"
"examples-of-overlay-classes-and-modified-roles)"
msgstr ""
"    - [Ejemplos de sobreescritura de clases y de modificación de roles]"
"(#ejemplos-de-sobreescritura-de-clases-y-de-modificacion-de-roles)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:87
msgid ""
"    - [Input and output: scripts and UI messages](#user-content-input-and-"
"output-scripts-and-ui-messages)"
msgstr ""
"    - [Entrada y salida: scripts y mensajes IU](#entrada-y-salida-scripts-y-"
"mensajes-iu)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:88
msgid ""
"    - [Example 2: A basic script dictionary and message output](#user-"
"content-example-2-a-basic-script-dictionary-and-message-output)"
msgstr ""
"    - [Ejemplo 2: Un diccionario de scripts básico y un mensaje de salida]"
"(#ejemplo-2-un-diccionario-de-scripts-basico-y-un-mensaje-de-salida)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:89
msgid ""
"    - [Example 3: script information using script decorator](#user-content-"
"example-3-script-information-using-script-decorator)"
msgstr ""
"    - [Ejemplo 3: información del script usando el decorador script]"
"(#ejemplo-3-información-del-script-usando-el-decorador-script)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:90
msgid ""
"        - [Script decorator arguments](#user-content-script-decorator-"
"arguments)"
msgstr ""
"        - [Argumentos del decorador script](#argumentos-del-decorador-script)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:91
msgid ""
"    - [Example 4: Scripts for specific objects](#user-content-example-4-"
"scripts-for-specific-objects)"
msgstr ""
"    - [Ejemplo 4: Scripts para objetos específicos](#ejemplo-4-scripts-para-"
"objetos-especificos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:92
msgid ""
"    - [Script lookup order and command conflicts](#user-content-script-"
"lookup-order-and-command-conflicts)"
msgstr ""
"    - [Orden de búsqueda de scripts y conflictos de órdenes](#orden-de-"
"busqueda-de-scripts-y-conflictos-de-ordenes)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:93
msgid ""
"    - [A few other remarks on scripts](#user-content-a-few-other-remarks-on-"
"scripts)"
msgstr ""
"    - [Otros comentarios sobre scripts](#otros-comentarios-sobre-scripts)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:94
msgid "    - [Events](#user-content-events)"
msgstr "    - [Eventos](#eventos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:95
msgid ""
"    - [Example 5: Announcing the changed name of a control](#user-content-"
"example-5-announcing-the-changed-name-of-a-control)"
msgstr ""
"    - [Ejemplo 5: Anunciar el nombre cambiado de un control](#ejemplo-5-"
"anunciar-el-nombre-cambiado-de-un-control)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:96
msgid "    - [List of possible events](#user-content-list-of-possible-events)"
msgstr "    - [Lista de posibles eventos](#lista-de-posibles-eventos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:97
msgid "    - [Events within objects](#user-content-events-within-objects)"
msgstr "    - [Eventos dentro de objetos](#eventos-dentro-de-objetos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:98
msgid "    - [Other components](#user-content-other-components)"
msgstr "    - [Otros componentes](#otros-componentes)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:99
msgid "    - [Let's build an add-on](#user-content-lets-build-an-add-on)"
msgstr "    - [Construyamos un complemento](#construyamos-un-complemento)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:100
msgid ""
"    - [Add-on planning and development tips](#user-content-add-on-planning-"
"and-development-tips)"
msgstr ""
"    - [Consejos para planificación y desarrollo de complementos](#consejos-"
"para-planificacion-y-desarrollo-de-complementos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:101
msgid "    - [Do's and don'ts](#user-content-dos-and-donts)"
msgstr "    - [Qué hacer y qué no](#que-hacer-y-que-no)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:102
msgid ""
"    - [Frequently Asked Questions about add-on components and development]"
"(#user-content-frequently-asked-questions-about-add-on-components-and-"
"development)"
msgstr ""
"    - [Preguntas frecuentes sobre componentes de complementos y desarrollo]"
"(#preguntas-frecuentes-sobre-componentes-de-complementos-y-desarrollo)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:103
msgid ""
"- [Introduction to global plugins](#user-content-introduction-to-global-"
"plugins)"
msgstr ""
"- [Introducción a las extensiones globales](#introduccion-a-las-extensiones-"
"globales)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:104
msgid ""
"    - [Typical development plan for global plugins](#user-content-typical-"
"development-plan-for-global-plugins)"
msgstr ""
"    - [Plan de desarrollo típico para extensiones globales](#plan-de-"
"desarrollo-tipico-para-extensiones-globales)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:105
msgid "    - [The global plugin code](#user-content-the-global-plugin-code)"
msgstr ""
"    - [El código de la extensión global](#el-codigo-de-la-extension-global)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:106
msgid ""
"    - [When to write or not write global plugins](#user-content-when-to-"
"write-or-not-write-global-plugins)"
msgstr ""
"    - [Cuándo escribir o no escribir extensiones globales](#cuando-escribir-"
"o-no-escribir-extensiones-globales)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:107
msgid ""
"    - [A Few more things to remember about global plugins](#user-content-a-"
"few-more-things-to-remember-about-global-plugins)"
msgstr ""
"    - [Algunas cosas más que recordar sobre las extensiones globales]"
"(#algunas-cosas-mas-que-recordar-sobre-las-extensiones-globales)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:108
msgid ""
"    - [Example 1: Writing computer braille using QWERTY keyboard](#user-"
"content-example-1-writing-computer-braille-using-qwerty-keyboard)"
msgstr ""
"    - [Ejemplo 1: Escribir braille computerizado utilizando el teclado "
"QWERTY](#ejemplo-1-escribir-braille-computerizado-utilizando-el-teclado-"
"qwerty)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:109
msgid "    - [Exercises](#user-content-exercises)"
msgstr "    - [Ejercicios](#ejercicios)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:110
msgid ""
"- [Introduction to app modules](#user-content-introduction-to-app-modules)"
msgstr ""
"- [Introdución a los módulos de aplicación](#introducion-a-los-modulos-de-"
"aplicacion)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:111
msgid ""
"    - [Differences between app modules and global plugins](#user-content-"
"differences-between-app-modules-and-global-plugins)"
msgstr ""
"    - [Diferencias entre módulos de aplicación y extensiones globales]"
"(#diferencias-entre-modulos-de-aplicacion-y-extensiones-globales)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:112
msgid ""
"    - [App module development process and strategies](#user-content-app-"
"module-development-process-and-strategies)"
msgstr ""
"    - [Proceso y estrategias de desarrollo de módulos de aplicación]"
"(#proceso-y-estrategias-de-desarrollo-de-modulos-de-aplicacion)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:113
msgid ""
"    - [Example 2: Simple app module in Notepad](#user-content-example-2-"
"simple-app-module-in-notepad)"
msgstr ""
"    - [Ejemplo 2: Módulo de aplicación simple en el Bloc de notas]"
"(#ejemplo-2-modulo-de-aplicacion-simple-en-el-bloc-de-notas)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:114
msgid ""
"    - [Example 3: Silencing NVDA in Openbook](#user-content-example-3-"
"silencing-nvda-in-openbook)"
msgstr ""
"    - [Ejemplo 3: Silenciar NVDA en Openbook](#ejemplo-3-silenciar-nvda-en-"
"openbook)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:115
msgid ""
"    - [Example 4: Announcing control property changes while using another "
"app](#user-content-example-4-announcing-control-property-changes-while-using-"
"another-app)"
msgstr ""
"    - [Ejemplo 4: Anunciar cambios de propiedad de control mientras se usa "
"otra aplicación](#ejemplo-4-anunciar-cambios-de-propiedad-de-control-"
"mientras-se-usa-otra-aplicacion)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:116
msgid ""
"    - [Useful app module properties and methods](#user-content-useful-app-"
"module-properties-and-methods)"
msgstr ""
"    - [Propiedades y métodos útiles de los módulos de aplicación]"
"(#propiedades-y-metodos-utiles-de-los-modulos-de-aplicacion)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:117
msgid ""
"    - [Other remarks on app modules](#user-content-other-remarks-on-app-"
"modules)"
msgstr ""
"    - [Otros comentarios sobre los módulos de aplicación](#otros-comentarios-"
"sobre-los-modulos-de-aplicacion)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:118
msgid "- [Drivers](#user-content-drivers)"
msgstr "- [Controladores](#controladores)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:119
msgid "    - [Driver components](#user-content-driver-components)"
msgstr "    - [Componentes del controlador](#componentes-del-controlador)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:120
msgid ""
"    - [A Few important things to remember before, during and after driver "
"development](#user-content-a-few-important-things-to-remember-before-during-"
"and-after-driver-development)"
msgstr ""
"    - [Unas pocas cosas importantes que recordar antes, durante y después "
"del desarrollo de controladores](#unas-pocas-cosas-importantes-que-recordar-"
"antes-durante-y-despues-del-desarrollo-de-controladores)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:121
msgid ""
"    - [Typical driver development steps](#user-content-typical-driver-"
"development-steps)"
msgstr ""
"    - [Pasos típicos de desarrollo de un controlador](#pasos-tipicos-de-"
"desarrollo-de-un-controlador)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:122
msgid "- [Enhancers](#user-content-enhancers)"
msgstr "- [Potenciadores](#potenciadores)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:123
msgid "    - [Enhancer components](#user-content-enhancer-components)"
msgstr "    - [Componentes potenciadores](#componentes-potenciadores)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:124
msgid ""
"    - [A Few important things to remember before, during and after enhancer "
"development](#user-content-a-few-important-things-to-remember-before-during-"
"and-after-enhancer-development)"
msgstr ""
"    - [Unas pocas cosas importantes que recordar antes, durante y después "
"del desarrollo de potenciadores](#unas-pocas-cosas-importantes-que-recordar-"
"antes-durante-y-despues-del-desarrollo-de-potenciadores)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:125
msgid ""
"    - [Typical enhancer development steps](#user-content-typical-enhancer-"
"development-steps)"
msgstr ""
"    - [Pasos típicos de desarrollo de un potenciador](#pasos-tipicos-de-"
"desarrollo-de-un-potenciador)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:126
msgid ""
"- [Sharing your add-on and experience with others](#user-content-sharing-"
"your-add-on-and-experience-with-others)"
msgstr ""
"- [Compartiendo tu complemento y experiencia con otros](#compartiendo-tu-"
"complemento-y-experiencia-con-otros)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:127
msgid "    - [The NVDA Add-ons list](#user-content-the-nvda-add-ons-list)"
msgstr ""
"    - [La lista de complementos de NVDA](#la-lista-de-complementos-de-nvda)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:128
msgid ""
"    - [The NVDA Community Add-ons web site and code repository](#user-"
"content-the-nvda-community-add-ons-web-site-and-code-repository)"
msgstr ""
"    - [El sitio web y el repositorio de código de los complementos de la "
"comunidad de NVDA](#el-sitio-web-y-el-repositorio-de-codigo-de-los-"
"complementos-de-la-comunidad-de-nvda)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:129
msgid ""
"    - [Submitting your add-on for review](#user-content-submitting-your-add-"
"on-for-review)"
msgstr ""
"    - [Envío de tu complemento a revisión](#envio-de-tu-complemento-a-"
"revision)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:130
msgid ""
"        - [Add-on review checklist](#user-content-add-on-review-checklist)"
msgstr ""
"        - [Lista de comprobación de revisión de complementos](#lista-de-"
"comprobacion-de-revision-de-complementos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:131
msgid ""
"- [Advanced Code Examples and Features](#user-content-advanced-code-examples-"
"and-features)"
msgstr ""
"- [Ejemplos avanzados de código y características](#ejemplos-avanzados-de-"
"codigo-y-caracteristicas)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:132
msgid "    - [Interactive Dialogs](#user-content-interactive-dialogs)"
msgstr "    - [Diálogos interactivos](#dialogos-interactivos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:133
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:138
msgid "        - [Introduction](#user-content-introduction)"
msgstr "        - [Introducción](#introduccion)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:134
msgid ""
"        - [Example 1: A Basic Dialog](#user-content-example-1-a-basic-dialog)"
msgstr "        - [Ejemplo 1: un diálogo básico](#ejemplo-1-un-dialogo-basico)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:135
msgid ""
"        - [Example 2: A Three-Way Dialog](#user-content-example-2-a-three-"
"way-dialog)"
msgstr ""
"        - [Ejemplo 2: un diálogo con tres caminos](#ejemplo-2-un-dialogo-con-"
"tres-caminos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:136
msgid "    - [Using The Log](#user-content-using-the-log)"
msgstr "    - [Usar el registro](#usar-el-registro)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:137
msgid "    - [Threading](#user-content-threading)"
msgstr "    - [Concurrencia](#concurrencia)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:139
msgid "        - [Threading scenarios](#user-content-threading-scenarios)"
msgstr "        - [Escenarios de concurrencia](#escenarios-de-concurrencia)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:140
msgid "        - [Threading examples](#user-content-threading-examples)"
msgstr "        - [Ejemplos de concurrencia](#ejemplos-de-concurrencia)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:141
msgid ""
"    - [Storing and Using Persistent Information Outside Your Add-on](#user-"
"content-storing-and-using-persistent-information-outside-your-add-on)"
msgstr ""
"    - [Almacenar y usar información persistente más allá de tu complemento]"
"(#almacenar-y-usar-informacion-persistente-mas-alla-de-tu-complemento)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:142
msgid "- [Miscellaneous information](#user-content-miscellaneous-information)"
msgstr "- [Información miscelánea](#informacion-miscelanea)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:143
msgid "- [Appendices](#user-content-appendices)"
msgstr "- [Apéndices](#apendices)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:144
msgid ""
"    - [Appendix A: add-on terms dictionary](#user-content-appendix-a-add-on-"
"terms-dictionary)"
msgstr ""
"    - [Apéndice A: Diccionario de términos de complemento](#apendice-a-"
"diccionario-de-terminos-de-complemento)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:145
msgid ""
"    - [Appendix B: Programming and Python concepts every add-on developer "
"needs to know](#user-content-appendix-b-programming-and-python-concepts-"
"every-add-on-developer-needs-to-know)"
msgstr ""
"    - [Apéndice B: Programación y conceptos de Python que todo desarrollador "
"de complementos necesita saber](#apendice-b-programacion-y-conceptos-de-"
"python-que-todo-desarrollador-de-complementos-necesita-saber)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:146
msgid ""
"    - [Appendix C: Add-on type comparison](#user-content-appendix-c-add-on-"
"type-comparison)"
msgstr ""
"    - [Apéndice C: Comparación de tipos de complementos](#apendice-c-"
"comparacion-de-tipos-de-complementos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:147
msgid ""
"    - [Appendix D: notes and references for scripters of other screen "
"readers](#user-content-appendix-d-notes-and-references-for-scripters-of-"
"other-screen-readers)"
msgstr ""
"    - [Apéndice D: notas y referencias para creadores de scripts de otros "
"lectores de pantalla](#apendice-d-notas-y-referencias-para-creadores-de-"
"scripts-de-otros-lectores-de-pantalla)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:148
msgid ""
"    - [Appendix E: Python 2 versus 3](#user-content-appendix-e-python-2-"
"versus-3)"
msgstr ""
"    - [Apéndice E: Python 2 frente a 3](#apendice-e-python-2-frente-a-3)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:150
msgid "[//]: # (End of TOC)"
msgstr "[//]: # (Fin de la tabla de contenidos)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:151
msgid "## Authors, Contributions, and Copyright"
msgstr "## Autores, Colaboraciones y Copyright"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:152
msgid ""
"This guide is primarily maintained, and was originally written, by Joseph "
"Lee ([@josephsl](https://github.com/josephsl)), and is shaped by the NVDA "
"user and developer community. Luke Davis ([@XLTechie](https://github.com/"
"XLTechie)) sometimes serves as editor."
msgstr ""
"Esta guía fue escrita originalmente y es mantenida principalmente por Joseph "
"Lee ([@josephsl](https://github.com/josephsl)), y está diseñada por la "
"comunidad de usuarios y desarrolladores de NVDA. Luke Davis ([@XLTechie]"
"(https://github.com/XLTechie)) a veces ejerce como editor."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:153
msgid "Valuable contributions and corrections from the community are welcome."
msgstr ""
"Las valiosas contribuciones y correcciones de la comunidad son bienvenidas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:154
msgid ""
"NVDA is copyright 2006-2021 NV Access Limited. Microsoft Windows, Microsoft "
"Office, Win32 API, and other Microsoft  products are copyright Microsoft "
"Corporation. the IAccessible package is copyright by IBM and the Linux "
"Foundation. Python is copyright by Python Software Foundation. Other "
"products mentioned are copyrighted by their respective copyright holders."
msgstr ""
"NVDA es copyright 2006-2021 NV Access Limited. Microsoft Windows, Microsoft "
"Office, Win32 API y otros productos de Microsoft son propiedad de Microsoft "
"Corporation. el paquete IAccessible es propiedad intelectual de IBM y la "
"Fundación Linux. Python es propiedad intelectual de la Python Software "
"Foundation. Otros productos mencionados son propiedad intelectual de sus "
"respectivos propietarios."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:155
msgid "## Introduction"
msgstr "## Introducción"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:156
msgid ""
"Welcome to the NVDA Add-on Development Guide. This is the one-stop guide on "
"how to develop NVDA add-ons. This guide also  explains some useful code "
"segments from the NVDA core source code, which highlight concepts for you, "
"as you learn to write add-ons."
msgstr ""
"Bienvenido a la Guía de desarrollo de complementos para NVDA. Esta es la "
"guía completa sobre cómo desarrollar complementos de NVDA. Esta guía también "
"explica algún segmento de código útil del código fuente del núcleo de NVDA, "
"que resalta conceptos para ti mientras aprendes a escribir complementos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:157
msgid ""
"For more information on NVDA development, please visit the [NVDA GitHub "
"page]. Be sure to go over the [NVDA Developer Guide] to familiarize yourself "
"with key terms and basics on getting started with add-on development."
msgstr ""
"Para obtener más información sobre el desarrollo de NVDA, por favor visita "
"[la Página de GitHub de NVDA]. Asegúrate de revisar la [Guía del "
"desarrollador de NVDA] para familiarizarte con los términos clave y los "
"conceptos básicos para comenzar con el desarrollo de complementos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:158
msgid "## Audience"
msgstr "## Audiencia"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:159
msgid "This guide is designed for: "
msgstr "Esta guía se ha diseñado para: "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:160
msgid "* Python beginners"
msgstr "* aprendices de Python"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:161
msgid "* beginners to NVDA development"
msgstr "* principiantes en el desarrollo de NVDA"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:162
msgid "* Expert Python developers"
msgstr "* desarrolladores Expertos de Python"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:163
msgid "* Expert NVDA developers"
msgstr "* desarrolladores Expertos de NVDA"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:164
msgid "* People familiar with programming languages other than Python."
msgstr ""
"* Gente familiarizada con otros lenguajes de programación distintos a Python."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:165
msgid "* Developers of scripts for other screen readers."
msgstr "* Desarrolladores de scripts para otros lectores de pantalla."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:166
msgid ""
"If you are new to NVDA add-on or core development, we recommend that you get "
"to know [Python](https://python.org) first, as it gives the necessary "
"programming background for understanding the rest of the guide. If you are a "
"Python programmer but new to NVDA development, please checkout the [NVDA "
"Developer Guide] and [Design Overview] document."
msgstr ""
"Si eres nuevo en el desarrollo de complementos o del núcleo de NVDA, te "
"recomendamos que conozcas [Python](https://python.org) primero, ya que "
"proporciona los conocimientos de programación necesarios para entender el "
"resto de la guía. Si eres programador de Python pero eres nuevo en el "
"desarrollo de NVDA, por favor, consulta la [guía del desarrollador de NVDA] "
"y el documento [descripción del diseño]."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:167
msgid "### Special note on Python version"
msgstr "### Nota especial sobre la versión de Python"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:168
msgid ""
"Until 2019, NVDA and add-ons were written primarily in Python 2, "
"specifically 2.7. As of July 2019, NVDA was transitioned to use Python 3.7, "
"with some add-on developers modifying their add-on source code to run on "
"Python 2 and 3. With the release of NVDA 2019.3 in February 2020, Python 3 "
"transition is complete. Be sure to keep an eye on NVDA development and add-"
"ons mailing lists, as well as relevant development documentation and notices "
"regarding news on Python 3 and NVDA. For more information on Python 2 versus "
"3, please read Appendix E."
msgstr ""
"Hasta 2019, NVDA y los complementos estaban escritos principalmente en "
"Python 2, específicamente 2.7. A partir de julio de 2019, NVDA ha sido "
"migrado a Python 3.7, con algunos desarrolladores de complementos "
"modificando su código fuente para que se ejecute en Python 2 y 3. Con la "
"publicación de NVDA 2019.3 en febrero de 2020, la transición a Python 3 se "
"dio por completada. Asegúrate de estar atento al desarrollo de NVDA y a las "
"listas de correo de complementos, así como a la documentación de desarrollo "
"relevante y a los avisos relacionados con las noticias sobre Python 3 y "
"NVDA. Para más información sobre las diferencias entre Python 2 y 3, "
"consulta el apéndice E."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:169
msgid "This guide will use strictly Python 3 code."
msgstr "Esta guía usará estrictamente código de Python 3."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:170
msgid "### Special note on NVDA backward compatibility"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:171
msgid ""
"To modernize NVDA source code and to respond to screen reader usage changes, "
"NV Access has adopted an annual backward compatibility policy in 2020. For "
"each calendar year, the first major version (year.1) is designated "
"\"backwards incompatible\" release where changes affecting add-ons will be "
"incorporated. These include changes to names of functions and classes, as "
"well as removing deprecated code. Because these changes will affect many add-"
"ons, developers must test their add-ons for compatibility once the first "
"beta of the backwards incompatible version of NVDA is released."
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:172
msgid "List of backwards incompatible NVDA releases and their highlights:"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:173
msgid "* 2019.3: Python 3"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:174
msgid "* 2021.1: dependency updates"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:175
msgid "* 2022.1: control types refactor"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:176
msgid ""
"Unless otherwise stated, this guide will assume latest backwards "
"incompatible NVDA when giving code examples (as of August 2021, 2021.1 is "
"assumed). Exceptions will be documented in appropriate places."
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:177
msgid "### A special note for scripters of other screen readers"
msgstr ""
"### Una nota especial para creadores de scripts de otros lectores de pantalla"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:178
msgid ""
"Some of the concepts described in this document are the same across "
"different screen readers, such as objects, windows, events, accessibility "
"API and so on. However, there are important things to be aware of when "
"writing or porting scripts:"
msgstr ""
"Algunos de los conceptos descritos en este documento son los mismos para "
"diferentes lectores de pantalla, tales como objetos, ventanas, eventos, APIs "
"de accesibilidad y así sucesivamente. Sin embargo, hay cosas importantes que "
"hay que tener en cuenta al escribir o portar scripts:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:179
msgid ""
"* Unlike some screen readers, NVDA does not have a formal specification or "
"an object model as defined by documentation in other screen readers."
msgstr ""
"* A diferencia de algunos lectores de pantalla, NVDA no tiene una "
"especificación formal o un modelo de objeto definido por la documentación en "
"otros lectores de pantalla."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:180
msgid ""
"* The code you write will run inside the same runtime environment as the "
"screen reader itself, thus you can perform things such as obtain focused "
"object directly, modify NVDA's functionality and even replace NVDA functions "
"and classes with your own."
msgstr ""
"* El código que escribas se ejecutará dentro del mismo entorno de ejecución "
"que el propio lector de pantalla, por lo que puedes realizar cosas como "
"obtener directamente objetos enfocados, modificar la funcionalidad de NVDA e "
"incluso reemplazar las funciones y clases de NVDA con las tuyas propias."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:181
msgid ""
"* Python, and consequently, NVDA is an object-oriented system. In other "
"words, most of your code will consist of defining classes and objects which "
"are then picked up by NVDA at runtime."
msgstr ""
"* Python, y consecuentemente NVDA, es un sistema orientado a objetos. En "
"otras palabras, la mayor parte de su código consistirá en definir clases y "
"objetos que NVDA recogerá en tiempo de ejecución."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:182
msgid ""
"* Unlike scripting engines for some screen readers, there is no special hack "
"involved when you wish to provide a feature that'll work in all applications."
msgstr ""
"* A diferencia de los motores de scripting para algunos lectores de "
"pantalla, no hay ningún hack especial involucrado cuando se desee "
"proporcionar una característica que funcione en todas las aplicaciones."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:183
msgid ""
"* Unlike scripting engines for some screen readers, you are not limited to "
"libraries that come with screen readers; as a Python-based program, you can "
"use any python module(s) that fits your needs, including external modules. "
"For example, a popular module used to interface with web applications is "
"JSON (JavaScript Object Notation) module, which isn't bundled with NVDA "
"versions prior to 2017.3. You need to bundle external Python libraries "
"yourself if you choose to use these packages."
msgstr ""
"* A diferencia de los motores de scripting para algunos lectores de "
"pantalla, no estás limitado a bibliotecas que vengan con los lectores de "
"pantalla; como un programa basado en Python, puedes usar cualquier módulo "
"(s) de python que se adapte a tus necesidades, incluyendo módulos externos. "
"Por ejemplo, un módulo popular utilizado para interactuar con aplicaciones "
"web es el módulo JSON (JavaScript Object Notation), que no está incluido en "
"las versiones de NVDA anteriores a 2017.3. Necesitas incorporar las "
"bibliotecas externas de Python tú mismo si deseas usar estos paquetes."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:184
msgid "### A special note about Windows Store version of NVDA"
msgstr "### Nota especial sobre la versión de NVDA para la tienda de Windows"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:185
msgid ""
"As of NVDA 2018.1, foundation has been laid to let NVDA run as a Windows "
"Store application. Once the Windows Store version of NVDA is published to "
"Microsoft Store, users running Windows 10 can go to Store and obtain NVDA. "
"However, there are restrictions that come with this version of NVDA, notably "
"add-ons cannot run in this environment. Thus, if you need to run or write "
"NVDA add-ons, you need to use the classic desktop version of NVDA, available "
"from the [nvaccess.org website](https://www.nvaccess.org/)."
msgstr ""
"A partir de NVDA 2018.1, se han establecido cambios para permitir a NVDA "
"ejecutarse como una aplicación de la tienda Windows. Una vez se publique en "
"la tienda la versión de NVDA para la tienda de Windows, los usuarios de "
"Windows 10 podrán ir a la tienda y obtener NVDA. Sin embargo, hay "
"restricciones que vienen con esta versión de NVDA, la más notable es que los "
"complementos no pueden ejecutarse en este entorno. Por lo tanto, si "
"necesitas ejecutar o escribir complementos de NVDA, deberás utilizar la "
"versión clásica de escritorio de este lector, disponible en la sección de "
"descargas de nuestro sitio web."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:186
msgid ""
"### A very important note about migrating custom extension code to "
"development scratchpad"
msgstr ""
"### Nota muy importante sobre la migración de código personalizado de "
"extensión a development scratchpad"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:187
msgid ""
"If you are coming from NVDA 2018.4 or earlier, you may recall that you are "
"able to run extension modules (sometimes called \"plugins\") inside folders "
"stored in the user configuration directory (e.g. appModules). This "
"functionality has been revised in NVDA 2019.1 as follows:"
msgstr ""
"Si vienes de NVDA 2018.4 o versiones anteriores, recordarás que se podían "
"ejecutar módulos de extensión (a veces llamados \"extensiones\") desde el "
"interior de carpetas situadas en el directorio de configuración de usuario "
"(por ejemplo, appModules). Esta funcionalidad se ha rediseñado en NVDA "
"2019.1 de la siguiente manera:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:188
msgid ""
"1. NVDA will no longer load extension code stored in the following "
"subdirectories of the user configuration folder: appModules, "
"brailleDisplayDrivers, globalPlugins, synthDrivers."
msgstr ""
"1. NVDA ya no cargará código de extensiones alojado en los siguientes "
"subdirectorios de la carpeta de configuración de usuario: appModules, "
"brailleDisplayDrivers, globalPlugins y synthDrivers."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:189
msgid ""
"\t* If you find that code inside these folders is no longer working as of "
"NVDA 2019.1, the above reason is why."
msgstr ""
"\t* Si descubres que el código de estas carpetas no está funcionando desde "
"que tienes NVDA 2019.1, la razón anterior explica por qué."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:190
msgid ""
"2. You must enable development scratchpad functionality (reserved for "
"developers) if you wish to load custom extension code. To do so:"
msgstr ""
"2. Debes activar la funcionalidad development scratchpad (reservada para "
"desarrolladores) si quieres habilitar la carga de código de extensión "
"personalizado. Para hacerlo:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:191
msgid ""
"\t1. With NVDA 2019.1 (or later) running, go to NVDA menu/Preferences/"
"settings/Advanced."
msgstr ""
"\t1. Teniendo NVDA 2019.1 (o posterior) en ejecución, ve al menú NVDA / "
"Preferencias / Opciones / Avanzado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:192
msgid ""
"\t2. You must check \"I understand that changing these settings may cause "
"NVDA to function incorrectly\" checkbox."
msgstr ""
"\t2. Debes marcar la casilla \"Comprendo que cambiar estas opciones puede "
"hacer que NVDA funcione incorrectamente\"."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:193
msgid ""
"\t3. You must check \"Enable loading custom code from Developer Scratchpad "
"directory\" checkbox."
msgstr ""
"\t3. Debes marcar la casilla \"Habilitar la carga de código personalizado "
"desde el directorio Developer Scratchpad\"."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:194
msgid "\t4. Select OK."
msgstr "\t4. Pulsa Aceptar."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:195
msgid ""
"3. You must store code that was formerly housed in the above list of "
"subdirectories inside corresponding subdirectories of the scratchpad folder."
msgstr ""
"3. Debes almacenar el código que estaba previamente alojado en la lista "
"anterior de subcarpetas dentro de los directorios correspondientes de la "
"carpeta scratchpad."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:196
msgid ""
"4. If you need to use NVDA 2018.4 and would like to use custom code, you "
"must not remove the above listed subdirectories from the user configuration "
"directory. Otherwise go ahead and remove the folders listed in item 1."
msgstr ""
"4. Si necesitas usar NVDA 2018.4 y quisieras utilizar código personalizado, "
"no elimines las subcarpetas del directorio de configuración de usuario. En "
"cualquier otro caso, elimina las carpetas que se mencionan en el elemento 1 "
"de esta lista."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:197
msgid ""
"### A very important note about control types module changes in NVDA 2021.2"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:198
msgid ""
"NVDA 2021.2 introduces control types refactor that changes how control roles "
"and sates are specified. In older NvDA releases, control roles are written "
"as controlTypes.ROLE_*, and states are written as controlTypes.STATE_*. With "
"control types refactor, roles and states must be written as controlTypes."
"Role.* and controlTypes.State.*, respectively. For example:"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:199
msgid "* Editable text role:"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:200
msgid "    * 2021.1 and earlier: controlTypes.ROLE_EDITABLETEXT"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:201
msgid "    * 2021.2 and later: controlTypes.Role.EDITABLETEXT"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:202
msgid "* Checkable state:"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:203
msgid "    * 2021.1 and earlier: controlTypes.STATE_CHECKABLE"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:204
msgid "    * 2021.2 and later: controlTypes.State.CHECKABLE"
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:205
msgid ""
"The older way of specifying control roles and states will be removed in NVDA "
"2022.1. Unless otherwise stated, this guide will use the newer style."
msgstr ""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:206
msgid "## Add-on Basics"
msgstr "## Conceptos básicos sobre complementos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:207
msgid "### What are Add-ons?"
msgstr "### ¿Qué son los Complementos?"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:208
msgid ""
"Add-ons are additional small programs that extend NVDA's functionality or "
"support for applications. This may include adding global features, enhancing "
msgstr ""
"Los complementos son pequeños programas adicionales que extienden la "
"funcionalidad de NVDA o su soporte para aplicaciones. Esto puede incluir la "
"adición de características globales, la mejora "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:209
msgid ""
"support for an application, adding support for newer braille displays or "
"speech synthesizers, or enhancing visual usage of NVDA via vision enhancers."
msgstr ""
"del soporte para una aplicación, o la adición de soporte para pantallas "
"Braille nuevas o sintetizadores de voz, o la mejora del uso visual de NVDA "
"mediante potenciadores de la visión."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:210
msgid ""
"A fully constructed add-on will consist of the add-on Python code itself, "
"contained in one or more modules (more on that in the next section), and "
msgstr ""
"Un complemento completamente construido constará del propio código Python "
"del complemento, contenido en uno o más módulos (más sobre esto en la "
"próxima sección), y "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:211
msgid ""
"usually some documentation, and other support files. If that sounds "
"daunting: don't worry, we will start small, with examples, and only with "
"Python "
msgstr ""
"normalmente algo de documentación, y otros archivos de soporte. Si esto "
"suena desalentador, no te preocupes: empezaremos con muy poco, ejemplos, y "
"sólo con código "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:212
msgid "code. The rest of the support structure for an add-on will come later."
msgstr ""
"Python. El resto de estructura de soporte de los complementos vendrá más "
"adelante."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:213
msgid ""
"Note: add-ons are sometimes called \"Plugins\", especially in the [NVDA "
"Developer Guide]. Although they may appear to be similar, these terms are "
"different:"
msgstr ""
"Nota: en ocasiones a los complementos también se los conoce como "
"\"extensiones\", especialmente en la [guía del desarrollador de NVDA]. "
"Aunque parece que son lo mismo, estos términos son diferentes:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:214
msgid ""
"* Add-on: one or more modules or components packaged as an archive for easy "
"installation."
msgstr ""
"* Complemento: uno o más módulos o componentes empaquetados en un archivo "
"para facilitar su instalación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:215
msgid ""
"* Plugin: a module or a collection of modules designed to modify NVDA's "
"behavior in various ways."
msgstr ""
"* Extensión: módulo o colección de módulos diseñados para modificar el "
"comportamiento de NVDA de diversas formas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:216
msgid ""
"Throughout this guide, whenever we refer to \"add-ons\", you can assume that "
"they contain at least one plugin or component."
msgstr ""
"A lo largo de esta guía, cuando hagamos referencia a \"complementos\", "
"puedes asumir que contienen al menos un componente o extensión."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:217
msgid "### What Are Add-on Modules?"
msgstr "### ¿Qué son los módulos de un complemento?"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:218
msgid ""
"Add-ons can act globally (across all of NVDA), in a specific application or "
"program, behind the scenes (at the hardware or software level), or enhance "
"NVDA experience for visual audiences. We call these four "
msgstr ""
"Los complementos pueden actuar globalmente (a través de todo NVDA), en un "
"programa o aplicación específica, tras el escenario (a nivel del hardware), "
"o mejorar la experiencia con NVDA para público con visión. Llamamos a estas "
"cuatro "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:219
msgid ""
"major areas \"modules\". Every add-on contains at least one module, which is "
"just one or more Python files designed to act in one of those four specific "
msgstr ""
"áreas principales \"módulos\". Cada complemento contiene al menos un módulo, "
"consistente en uno o más archivos Python diseñados para actuar en una de "
"estas cuatro áreas "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:220
msgid ""
"areas. Additionally, if it makes sense for the add-on you are developing, "
"your add-on can include more than one module. For example, if your add-on "
msgstr ""
"específicas. Además, si tiene sentido para el complemento que estás "
"desarrollando, tu complemento puede incluir más de un módulo. Por ejemplo, "
"si tu complemento "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:221
msgid ""
"provides better accessibility for a specific application, but also provides "
"global commands that work anywhere in NVDA, you would be using two modules."
msgstr ""
"proporciona accesibilidad mejorada en una aplicación específica, pero "
"también proporciona órdenes globales que funcionan en cualquier parte con "
"NVDA, estarías utilizando dos módulos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:222
msgid "Currently, NVDA supports these add-on module types:"
msgstr "Actualmente, NVDA soporta estos tipos de módulos adicionales:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:223
msgid ""
"* Global plugin: A global plugin adds features for NVDA which can be used "
"anywhere, such as OCR capability."
msgstr ""
"* Extensión global: una extensión global añade características para NVDA que "
"se pueden utilizar en cualquier lugar, como la función de OCR."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:224
msgid ""
"* App module: An app module allows enhanced support for a specific program. "
"App modules only run as long as the program runs. They change how NVDA "
"reacts to the windows and controls in the running application. "
msgstr ""
"* Módulo de aplicación: Un módulo de aplicación permite un soporte mejorado "
"para un programa específico. Los módulos de aplicación sólo se ejecutan "
"mientras el programa se ejecute. Cambian la forma en que NVDA reacciona a "
"las ventanas y controles de la aplicación en ejecución. "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:225
msgid ""
"* Driver: A driver allows a program to talk to hardware, and in some cases, "
"other software. Currently you can write drivers for new braille displays or "
"speech synthesizers."
msgstr ""
"* Controlador: Un controlador permite a un programa comunicarse con el "
"hardware, y en algunas ocasiones, con otro software. Actualmente puedes "
"escribir controladores para nuevas pantallas braille o sintetizadores de voz."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:226
msgid ""
"* Enhancer: An enhancer is used to improve NVDA experience for different "
"groups of users as they use computers. Currently one enhancer type, \"vision "
"enhancement provider\", is supported."
msgstr ""
"* Potenciador: un potenciador se usa para mejorar la experiencia con NVDA a "
"distintos grupos de usuarios que utilizan ordenadores. Actualmente sólo se "
"soporta un tipo de potenciador, \"proveedor de mejoras de visión\"."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:227
msgid "### What Are Add-on Packages?"
msgstr "### ¿Qué son los paquetes de complementos?"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:228
msgid ""
"A package is the single file which contains the code, documentation, and "
"other elements which make up a fully functioning add-on, which is "
msgstr ""
"Un paquete es el archivo único que contiene el código, la documentación, y "
"otros elementos que componen un complemento totalmente operativo, que está "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:229
msgid ""
"intended to be robust enough to be distributed to the public. Each NVDA add-"
"on package is a normal zip file with a file extension of .nvda-addon instead "
"of .zip."
msgstr ""
"pensado para ser suficientemente robusto para distribuirse al público. Cada "
"paquete de complementos de NVDA es un archivo zip normal con una extensión "
"de archivo .nvda-addon en lugar de .zip."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:230
msgid ""
"If making an add-on package sounds like a lot of work: don't worry, you "
"don't have to make a package just to start writing and testing your first "
msgstr ""
"Si hacer un paquete de complemento te suena a un montón de trabajo: no te "
"preocupes, no tienes que hacer un paquete simplemente para empezar a "
"escribir y probar tu primer "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:231
msgid "add-on."
msgstr "complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:232
msgid "### Installing NVDA Add-ons"
msgstr "### Instalación de Complementos de NVDA"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:233
msgid ""
"You can install NVDA-approved add-on packages via the Add-ons Manager, found "
"on NVDA's tools menu. Alternatively, you can open any .nvda-addon file "
msgstr ""
"Puedes instalar paquetes de complemento de NVDA mediante el Administrador de "
"complementos, situado en el menú Herramientas de NVDA. De forma alternativa, "
"puedes abrir cualquier archivo .nvda-addon "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:234
msgid ""
"you may have created or downloaded, by selecting it in your Windows file "
"manager, and it should launch the add-on install process."
msgstr ""
"que hayas creado o descargado seleccionándolo en tu gestor de archivos de "
"Windows, y debería lanzarse el proceso de instalación del complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:235
msgid "## Setting Up Your Add-on Development Environment"
msgstr "## Configuración del entorno de desarrollo de complementos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:236
msgid "Follow these steps to prepare your computer for writing NVDA add-ons."
msgstr ""
"Sigue estos pasos para preparar tu ordenador para escribir complementos de "
"NVDA."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:237
msgid "### System Requirements"
msgstr "### Requisitos del Sistema"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:238
msgid ""
"To create an add-on for NVDA, please make sure your system meets the "
"following requirements:"
msgstr ""
"Para crear un complemento para NVDA, asegúrate de que tu sistema cumple los "
"siguientes requisitos:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:239
msgid "* NVDA:"
msgstr "* NVDA:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:240
msgid ""
"    - A version of NVDA is available on your computer (either a portable or "
"installed version will work, but we strongly recommend that you install a "
"copy of NVDA on your development computer). Download NVDA from the [NV "
"Access download page](https://www.nvaccess.org/download/)."
msgstr ""
"    - Una versión de NVDA está disponible en tu ordenador (funcionará ya sea "
"una versión portable o instalada, pero te recomendamos encarecidamente que "
"instales una copia de NVDA en tu ordenador de desarrollo). Descarga NVDA "
"desde la [página de descargas de NV Access](https://www.nvaccess.org/"
"download/)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:241
msgid ""
"    - Even better: we recommend installing the latest master (alpha) or beta "
"development version to keep up to date with core API changes. You can "
"download the latest snapshots at https://www.nvaccess.org/files/nvda/"
"snapshots/."
msgstr ""
"    - O incluso mejor: recomendamos instalar la última versión master "
"(Alpha) o beta de desarrollo para mantenerse al día con los cambios en la "
"API del núcleo.  Puedes descargar las últimas versiones de desarrollo en "
"https://www.nvaccess.org/files/nvda/snapshots/."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:242
msgid "* Python:"
msgstr "* Python:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:243
msgid ""
"    - Python 3.7 series, version 3.7.9 32-bit for Windows: https://www."
"python.org/downloads/release/python-379/"
msgstr ""
"    - Series de Python 3.7, versión 3.7.9 de 32 bits para Windows: https://"
"www.python.org/downloads/release/python-379/"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:244
msgid ""
"    - Although the add-ons community do understand that Python 2 might be "
"required for backward compatibility, we do not recommend using it in "
"production environments."
msgstr ""
"    - Aunque la comunidad de complementos entiende que Python 2 podría ser "
"necesario para dar compatibilidad hacia atrás, no recomendamos usarlo en "
"entornos de producción."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:245
msgid ""
"* SCons 3, version 3.1.2 or later for generating add-on packages: http://www."
"scons.org/"
msgstr ""
"* SCons 3, versión 3.1.2 o posterior para generar paquetes de complementos: "
"http://www.scons.org/"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:246
msgid ""
"* Markdown 2.0.1 or later for generating add-on documentation: https://pypi."
"python.org/pypi/Markdown/2.0.1"
msgstr ""
"* Markdown 2.0.1 o posterior para generar la documentación del complemento: "
"https://pypi.python.org/pypi/Markdown/2.0.1"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:247
msgid ""
"* The GNU Gettext package for Windows for message localization support. The "
"build can be found at: http://gnuwin32.sourceforge.net/downlinks/gettext.php"
msgstr ""
"* El paquete Gettext de GNU para Windows para soporte de traducción de "
"mensajes. La compilación se puede encontrar en: http://gnuwin32.sourceforge."
"net/downlinks/gettext.php"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:248
msgid ""
"    - Once downloaded, copy these two exe files to your add-on development "
"folder. See the next section for a description of the add-on folder "
"structure."
msgstr ""
"    - Una vez descargados, copia ambos archivos exe en la carpeta de "
"desarrollo del complemento. Consulta la siguiente sección para obtener una "
"descripción de la estructura de carpetas del complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:249
msgid "        + msgfmt.exe"
msgstr "        + msgfmt.exe"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:250
msgid "        + xgettext.exe"
msgstr "        + xgettext.exe"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:251
msgid ""
"* If you are developing support for a program, speech synthesizer, or "
"braille display, install the needed software and hardware."
msgstr ""
"* Si estás desarrollando soporte para un programa, sintetizador de voz o "
"pantalla braille, instala el software y el hardware necesario."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:252
msgid "* Optional Items:"
msgstr "* Elementos opcionales:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:253
msgid ""
"    - Git 2.25.0 or later if you wish to upload the add-on to a repository "
"such as [Bitbucket] or [Github] (optional. See below). You can use various "
"Git clients, such as [Git Bash], [Cygwin's Git][Git for Cygwin], and "
"[TortoiseGit]."
msgstr ""
"    - Git 2.25.0 o posterior si deseas subir el complemento a un repositorio "
"como [Bitbucket] o [Github] (opcional. Mira más abajo). Puedes utilizar "
"varios clientes de Git, como [Git Bash], [Git de Cygwin][Git para Cygwin], y "
"[TortoiseGit]."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:254
msgid ""
"    - The [NVDA Community Add-on Template][add-on template] for ease of add-"
"on file and folder packaging and management (optional)."
msgstr ""
"    - La [plantilla de complemento de NVDA de la comunidad][plantilla de "
"complemento] para facilitar el empaquetado y la gestión de carpetas y "
"archivos del complemento (opcional)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:255
msgid ""
"Note: if you're using Windows 10 Anniversary Update or later and wish to use "
"Ubuntu on Windows (AKA [Windows Subsystem for Linux][WSL]), Python is "
"already installed. You can then use Advanced Packaging Tool (APT) to obtain "
"SCons and Gettext. You can then use pip to download and install Markdown."
msgstr ""
"Nota: si utilizas Windows 10 Anniversary Update o posterior y deseas usar "
"Ubuntu en Windows (también conocido como [Windows Subsystem for Linux]"
"[WSL]), Python ya viene instalado. Puedes utilizar Advanced Packaging Tool "
"(APT) para obtener SCons y Gettext. A continuación, puedes utilizar pip para "
"descargar e instalar Markdown."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:256
msgid "### Add-on Development Folder Structure"
msgstr "### Estructura de Carpetas de Desarrollo del Complemento"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:257
msgid ""
"When writing add-ons, it is recommended that you store your add-on code in "
"separate folders, one per add-on. If you chose to download the add-on "
"template, the folder structure will be automatically created."
msgstr ""
"Cuando escribas complementos, se recomienda que guardes el código del "
"complemento en carpetas separadas, una por complemento. Si decides descargar "
"la plantilla del complemento, la estructura de carpetas se creará "
"automáticamente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:258
msgid ""
"Once you install the needed dependencies (see above), paste the Gettext "
"package executables into this add-on folder. Skip this if you plan to build "
"your add-on using WSL Bash."
msgstr ""
"Una vez que instales las dependencias necesarias (mira arriba), pega los "
"ejecutables del paquete Gettext en la carpeta del complemento. Sáltate este "
"paso si planeas construir tu complemento usando el Bash de WSL."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:259
msgid "### Add-on folder structure"
msgstr "### Estructura de carpetas del complemento"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:260
msgid ""
"Each add-on folder, at a minimum, must contain the following files and "
"folders:"
msgstr ""
"Cada carpeta de complementos, como mínimo, debe contener los siguientes "
"archivos y carpetas:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:261
msgid ""
"* manifest.ini to store manifest information such as add-on name, author, "
"and compatibility range (minimum version, last tested version)."
msgstr ""
"* manifest.ini para almacenar la información de manifiesto del complemento "
"tal como el nombre, el autor y el rango de compatibilidad (versión mínima, "
"última versión probada)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:262
msgid ""
"* An \"addon\" subfolder with the add-on module directory underneath this "
"subfolder (appModules, globalPlugins, synthDrivers, brailleDisplays, "
"visionEnhancementProviders). One or more module folders can be specified."
msgstr ""
"* Una subcarpeta \"addon\" con el directorio de módulos del complemento bajo "
"esta subcarpeta (appModules, globalPlugins, synthDrivers, "
"brailleDisplayDriverss, visionEnhancementProviders). Se pueden especificar "
"una o más carpetas de módulos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:263
msgid ""
"If you are using the add-on template, the folder structure will "
"automatically be created, so you need to create only the addon subfolder and "
"the add-on module folder(s) and code inside this folder. See the readme file "
"in the template folder for more information on customizing your add-on "
"manifest using the template files."
msgstr ""
"Si estás utilizando la plantilla de complementos, la estructura de carpetas "
"se creará automáticamente, por lo que sólo necesitas crear la subcarpeta "
"addon y las carpetas de módulos adicionales y el código dentro de estas "
"carpetas. Consulta el archivo readme en la carpeta de la plantilla para "
"obtener más información sobre cómo personalizar tu manifiesto de complemento "
"mediante los archivos de la plantilla."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:264
msgid "### Packaging add-ons"
msgstr "### Enpaquetado de complementos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:265
msgid "There are two ways of packaging add-ons:"
msgstr "Hay dos modos de empaquetar complementos:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:266
msgid ""
"1. To package your add-on manually, zip up (compress) your add-on folder as "
"a .zip file, then rename the file extension to .nvda-addon."
msgstr ""
"1. Para empaquetar el complemento manualmente, comprime (en zip) la carpeta "
"del complemento como un archivo .zip, y luego cambia el nombre de la "
"extensión del archivo a .nvda-addon."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:267
msgid ""
"2. To use the add-on template with SCons, open Command Prompt with "
"administrator mode (Windows Vista or later) or Bash on Ubuntu on Windows "
"(Windows 10 Anniversary Update with WSL enabled), change to your add-on "
"folder and type `scons`."
msgstr ""
"2. Para utilizar la plantilla de complemento con SCons, abre el símbolo del "
"sistema en el modo Administrador (Windows Vista o posterior) o Bash en "
"Ubuntu en Windows (Windows 10 Anniversary Update con el WSL habilitado), "
"cambie a la carpeta de complemento y escribe `scons`."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:268
msgid ""
"For more information on add-on management, see the management chapter in "
"this guide."
msgstr ""
"Para más información sobre gestión de complementos, consulta el capítulo "
"gestión en esta guía."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:269
msgid "## Getting started: Hands-on examples"
msgstr "## Comenzando: Ejemplos prácticos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:270
msgid ""
"So are you ready to start your adventure with add-ons, but not sure as to "
"how to bring it to life? If that is you, please go through this chapter, as "
"it gives you basic information to get you started with add-ons and give you "
"tips on writing code."
msgstr ""
"Entonces, ¿estás listo para comenzar tu aventura con los complementos, pero "
"no estás seguro de cómo darle vida? Si ese es tu caso, vé por favor a través "
"de este capítulo, pues te da la información básica para conseguir comenzar "
"con los complementos y te da consejos para escribir código."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:271
msgid ""
"Note: for this chapter, we will not use the actual add-on packages. Instead, "
"we'll use scratchpad plugin folders - a number of subdirectories located in "
"a folder called \"scratchpad\", which in turn is a subfolder of your NVDA "
"user configuration folder (available from Start Menu/Screen if NVDA is "
"installed) to store our example Python files."
msgstr ""
"Nota: para este capítulo, no usaremos paquetes de complementos reales. En su "
"lugar, usaremos carpetas de extensiones de scratchpad - una serie de "
"subdirectorios situados en una carpeta llamada \"scratchpad\", que es una "
"subcarpeta en tu carpeta de configuración de usuario de NVDA (disponible "
"desde el menú de inicio/pantalla si está instalado NVDA) para almacenar "
"nuestros ficheros Python de ejemplo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:272
msgid ""
"To edit .py files, you need a word processor which can handle .py files. The "
"best one we recommend is Notepad++."
msgstr ""
"Para editar archivos .py, necesitas un procesador de textos que pueda "
"manejar archivos .py. El mejor que recomendamos es Notepad++."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:273
msgid "### How add-on code is organized"
msgstr "### Cómo está organizado el código de los complementos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:274
msgid ""
"Your add-on code is stored in one or more Python files (.py file). Despite "
"different kinds of add-ons out there, they all have similar layout."
msgstr ""
"El código de tu complemento se almacena en uno o más ficheros Python "
"(fichero .py). A pesar de los diferentes tipos de complementos que hay por "
"ahí, todos ellos tienen un diseño similar."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:275
msgid ""
"First, you start by writing an optional header for your add-on, such as your "
"name, a brief sentence or two on what the add-on is for and so on. Although "
"this is optional, it is recommended that you write the header as a reminder "
"to keep track of what you are doing with your add-on. If you plan to "
"distribute your add-on, you must write a header with copyright and license "
"notices."
msgstr ""
"Primero, comienza por escribir una cabecera opcional para el complemento, "
"tal como tu nombre, una o dos frases breves sobre para qué es el complemento "
"y así sucesivamente. Aunque esto es opcional, Se recomienda que escribas el "
"encabezado como un recordatorio para realizar un seguimiento de lo que estás "
"haciendo con tu complemento. Si planeas distribuir tu complemento, debes "
"escribir una cabecera con avisos de copyright y licencia."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:276
msgid ""
"Next, you tell NVDA the modules you need for your add-on file. This is done "
"by writing `import module` where module is the name of the module you wish "
"to use in your code. For example, if you want to hear tones while writing "
"your add-on, write `import tones`. Typically you may need to import two or "
"more modules for your specific add-on (see below on list of modules you need "
"for the type of add-on module you are writing)."
msgstr ""
"A continuación, le dices a NVDA los módulos que necesitas para el "
"complemento en el archivo. Esto se hace escribiendo `import module` donde "
"module es el nombre del módulo que desees utilizar en tu código. Por "
"ejemplo, si quieres escuchar tonos mientras escribes tu complemento, escribe "
"`import tones`. Normalmente será posible que tengas que importar dos o más "
"módulos para tu complemento específico(véase más abajo en la lista de "
"módulos que necesitas para el tipo de módulo del complemento que estés "
"escribiendo)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:277
msgid ""
"after declaring the modules you need or import, you write your add-on code "
"(defining classes, variables, methods and so on). The most important section "
"is the add-on class code, which will determine the type of add-on module "
"your code will be assigned to."
msgstr ""
"después de declarar los módulos necesarios o de importar, escribe el código "
"de tu complemento (definiendo clases, variables, métodos y así "
"sucesivamente). La sección más importante es el código de la clase del "
"complemento, que determinará el tipo de módulo de complemento al que se "
"asignará tu código."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:278
msgid ""
"For instance, if you wish to add support for a program, after importing "
"appModuleHandler and other needed modules, you would write:"
msgstr ""
"Por ejemplo, si deseas agregar soporte para un programa, después de importar "
"appModuleHandler y otros módulos necesarios, podrías escribir:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:279
msgid " `class appModule(appModuleHandler.AppModule):`"
msgstr " `class appModule(appModuleHandler.AppModule):`"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:280
msgid ""
"After that, all you are writing is Python code (see the Python documentation "
"on how to write Python programs)."
msgstr ""
"Después de eso, todo lo que se escribe es código Python (consulta la "
"documentación de Python sobre cómo escribir programas en Python)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:281
msgid "### Running your add-on in this example chapter"
msgstr "### Ejecutar tu complemento de ejemplo en este capítulo"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:282
msgid ""
"Before you can run example add-ons, you must enable development scratchpad "
"from NVDA's advanced settings. After doing so, a new folder named "
"\"scratchpad\" will appear in user configuration folder. See the section on "
"scratchpad above for details on how to do so."
msgstr ""
"Antes de que puedas ejecutar complementos de prueba, debes habilitar el "
"development scratchpad desde las opciones avanzadas de NVDA. Después de "
"hacerlo, aparecerá una nueva carpeta llamada \"scratchpad\" en la carpeta de "
"configuración del usuario. Lee la sección anterior sobre scratchpad para más "
"detalles sobre cómo hacerlo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:283
msgid ""
"To run your example add-ons from this chapter, open your NVDA user "
"configuration directory (from Start Menu/Screen, look for Explore NVDA user "
"configuration folder\" item). Then look for \"scratchpad\" folder (if "
"enabled), then paste your .py file to the appropriate folder inside this "
"subfolder: appModules folder for app module examples, and globalPlugins "
"folder for global plugins."
msgstr ""
"Para ejecutar tu complemento de ejemplo desde este capítulo, abre el "
"directorio de configuración de usuario de NVDA(desde Menú o pantalla Inicio, "
"busca el elemento NVDA \"  Explorar carpeta de configuración del usuario\"). "
"Luego busca la carpeta \"scratchpad\" (si está activada), y pega tu fichero ."
"py en la carpeta correspondiente dentro de esta subcarpeta: carpeta "
"appModules para ejemplos de módulos de aplicación, y carpeta globalPlugins "
"para extensiones globales."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:284
msgid "### Example 1: Hear a tone when pressing NVDA+A"
msgstr "### Ejemplo 1: escuchar un tono al pulsar NVDA+A"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:285
msgid ""
"Let us start with a simple example: if you press NVDA+A, you will hear a "
"tone for 1 second in any program. Since we want to use this everywhere, it "
"must be a global plugin."
msgstr ""
"Comencemos con un ejemplo sencillo: Si pulsamos NVDA+A, se oye un tono "
"durante 1 segundo desde cualquier programa. Puesto que queremos usar esto en "
"todas partes, debe ser una extensión global."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:286
msgid ""
"First, if you haven't done so, enable development scratchpad. Then open your "
"user configuration folder, then open the scratchpad folder (if it exists--"
"create it if not), then select globalPlugins folder. Create a new .py file "
"and give it a descriptive name such as example1.py (it is strongly "
"recommended that when you name your global plugin file, give it a short "
"descriptive name). Then open the newly created .py file in the word "
"processor."
msgstr ""
"En primer lugar, si todavía no lo has hecho, habilita development "
"scratchpad. Después abre la carpeta de configuración de usuario, abre la "
"carpeta scratchpad (si existe--créala si no es así), a continuación, abre la "
"carpeta globalPlugins. Crea un nuevo fichero .py y dale un nombre "
"descriptivo, como example1.py (se recomienda encarecidamente que cuando le "
"dés el nombre del fichero de la extensión global, este sea corto). A "
"continuación, abre el archivo .py recién creado en el procesador de textos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:287
msgid ""
"The below code implements our example. Put this in your .py file as exactly "
"as shown:"
msgstr ""
"El código siguiente implementa nuestro ejemplo. Pon esto en tu .py "
"exactamente como se muestra.:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:288
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:321
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:420
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:430
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:437
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:447
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:454
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:467
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:511
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:524
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:547
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:555
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:578
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:594
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:619
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:657
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:663
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:671
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:807
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:850
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:867
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:877
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:991
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1015
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1041
msgid "```python"
msgstr "```python"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:289
msgid "# Add-on development first example"
msgstr "# Primer ejemplo de desarrollo de complemento"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:290
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:469
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:810
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:994
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1018
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1042
msgid "import globalPluginHandler"
msgstr "import globalPluginHandler"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:291
msgid "import tones # We want to hear beeps."
msgstr "import tones # Queremos escuchar pitidos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:292
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:472
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:812
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:996
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1020
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1046
msgid "class GlobalPlugin(globalPluginHandler.GlobalPlugin):"
msgstr "class GlobalPlugin(globalPluginHandler.GlobalPlugin):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:293
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:474
msgid "\tdef script_doBeep(self, gesture):"
msgstr "\tdef script_doBeep(self, gesture):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:294
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:475
msgid "\t\ttones.beep(440, 1000)  # Beep a standard middle A for 1 second."
msgstr ""
"\t\ttones.beep(440, 1000)  # pita un Lá estándar de la quinta octava durante "
"1 segundo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:295
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:585
msgid "\t__gestures={"
msgstr "\t__gestures={"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:296
msgid "\t\t\"kb:NVDA+A\": \"doBeep\""
msgstr "\t\t\"kb:NVDA+A\": \"doBeep\""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:297
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:588
msgid "\t}"
msgstr "\t}"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:298
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:329
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:426
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:433
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:444
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:451
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:462
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:476
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:521
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:530
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:552
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:565
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:589
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:610
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:630
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:661
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:666
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:675
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:820
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:863
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:872
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:886
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1006
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1037
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1058
msgid "```"
msgstr "```"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:299
msgid ""
"In Python, you make comments by putting hash sign (#) at the start of the "
"comment line."
msgstr ""
"En Python, para poner comentarios se pone el símbolo número (#) al principio "
"de la línea de comentario."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:300
msgid "### Example 1 code explanation"
msgstr "### Explicación del código del ejemplo 1"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:301
msgid ""
"Our first example lets us sound a beep for one second when we press NVDA+A. "
"But you might be wondering what that above code means, so let's step through "
"the code, one piece at a time."
msgstr ""
"Nuestro primer ejemplo nos permite hacer sonar un pitido durante un segundo "
"cuando pulsemos NVDA+A. pero podrías preguntarte sobre el significado del "
"código de más arriba, así que vamos a dar unos pasos a través del código, "
"uno por vez."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:302
msgid ""
"1. At the top of the file, we wrote a header which tells us that this is an "
"example add-on."
msgstr ""
"1. En la parte superior del archivo, escribimos una cabecera que nos dice "
"que este es un ejemplo de complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:303
msgid ""
"2. Since this is a global plugin, we need to import a crucial module: global "
"plugin handler, so we wrote `import globalPluginHandler`."
msgstr ""
"2. Dado que esta es una extensión global, tenemos que importar un módulo "
"fundamental: global plugin handler, por lo que escribimos`import "
"globalPluginHandler`."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:304
msgid ""
"3. Then we wrote `import tones` to import (load, or include) the tones "
"module, a built-in module from NVDA. Whenever you wish to use a method from "
"a given module, import the needed module(s)."
msgstr ""
"3. Entonces escribimos`import tones` para importar (cargar, o incluir) el "
"módulo de tonos, un módulo integrado de NVDA. Cada vez que desees utilizar "
"un método de un módulo dado, importa el o los módulos necesarios."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:305
msgid ""
"4. Next, we defined a class called GlobalPlugin. The text inside the "
"brackets tells us where this class is coming from (more on this concept in a "
"second). A class, in programming, describes an object, such as a person, a "
"desk, a program and others."
msgstr ""
"4. A continuación, definimos una clase llamada GlobalPlugin. El texto dentro "
"de los paréntesis nos dice de dónde proviene esta clase (más sobre este "
"concepto en un segundo). Una  clase, en programación, describe un objeto, "
"tal como una persona, un escritorio, un programa y otros."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:306
msgid ""
"5. Inside the class, we wrote a method (function) called `script_doBeep`. "
"This is an example of a script, a method that'll be run or executed when you "
"press a command. Inside this script, we wrote `tones.beep(440, 1000)` to "
"tell NVDA to sound a middle A tone for 1 second. In programming, a function "
"can take arguments, or a set or parameters which tells the function what to "
"do based on the given values (we'll meet them later). In fact, many methods "
"you'll be writing, including our doBeep script takes one or more arguments. "
"More on scripts later as we journey through the guide."
msgstr ""
"5. Dentro de la clase, escribimos un método (función) llamado "
"`script_doBeep`. Esto es un ejemplo de un script, un método que va a "
"ejecutarse al pulsar una orden. Dentro de este script, escribimos `tones."
"beep(440, 1000)` para decir a NVDA que haga sonar un tono durante 1 segundo. "
"En programación, una funcción puede tomar argumentos, o un conjunto de "
"parámetros que dice a la función qué hacer basándose en los valores "
"dados(nos los encontraremos más adelante). De hecho, muchos métodos que "
"escribirás, incluyendo nuestro script  doBeep toma uno o más argumentos. Más "
"sobre los scripts más tarde en el viaje a través de la guía."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:307
msgid ""
"6. Lastly, we wrote a simple dictionary (a collection) to store our command "
"(script) bindings for our doBeep script. Here, we told NVDA to assign NVDA+A "
"command for doBeep script. Later you will learn a handy trick that will let "
"you specify script bindings and other information at the same time as the "
"script itself."
msgstr ""
"6. Por último, escribimos un diccionario simple (una colección) para "
"almacenar enlaces a nuestra orden (script) para nuestro script doBeep. Aquí, "
"le dijimos a NVDA que asignase la orden NVDA+A para el script doBeep. Más "
"tarde aprenderás un truco útil que te permitirá especificar los gestos del "
"script y otra información al mismo tiempo que el propio script."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:308
msgid ""
"Save this file, then restart NVDA. Now whenever you press NVDA+A, you'll "
"hear a middle A tone for 1 second. Once you are comfortable with the add-on "
"code and how it is laid out, you can delete the newly created .py file."
msgstr ""
"Guarda este fichero, después reinicia NVDA. Ahora, cada vez que se pulse NVDA"
"+A, se escucha un tono durante 1 segundo. Una vez que te sientas cómodo con "
"el código del complemento y de cómo se presenta, Puedes eliminar el fichero ."
"py recién creado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:309
msgid "### I don't understand those above terms"
msgstr "### No entiendo los términos anteriores"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:310
msgid ""
"For some, the terms \"class\", \"method\" and so on might be new. Let's go "
"over what these terms are, as they are fundamental for add-on development:"
msgstr ""
"Para algunos, los términos \"clase\", \"método\" y demás podrían ser nuevos. "
"Vamos a repasar lo que son estos términos, ya que son fundamentales para el "
"desarrollo de complementos:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:311
msgid ""
"* Class: a class describes an object. It could describe anything, such as a "
"person, a desk, an NVDA add-on and others. Classes are fundamental to NVDA "
"and other programs - in fact, a number of programmers are skilled at coming "
"up with classes."
msgstr ""
"* Clase: una clase describe un objeto. Podría describir cualquier cosa, tal "
"como una persona, una mesa, un complemento de NVDA y otros. Las clases son "
"fundamentales para NVDA y otros programas - de hecho, un buen número de "
"programadores son expertos por conocer las clases."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:312
msgid ""
"* Method: A method is a short program or a routine that a program runs for "
"doing something, such as generating tones, calculating huge numbers, loading "
"NVDA add-ons and so on. Some people call them \"functions.\""
msgstr ""
"* Método: un método es un pequeño programa o una rutina que ejecuta un "
"programa para hacer algo, tal como generar tonos, calcular números grandes, "
"cargar complementos de NVDA y así sucesivamente. Algunas personas los llaman "
"\"funciones.\""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:313
msgid ""
"* Script: A script is a method which runs when the user performs commands "
"such as pressing certain keys on a keyboard. For example, when you press NVDA"
"+F12, NVDA runs dateTime script, located in one of the NVDA core modules "
"named Global Commands. A script takes two arguments: where the script would "
"be executed (usually \"self\"; more on that later) and the gesture for the "
"script (see below)."
msgstr ""
"* Script: un script es un método que se ejecuta cuando el usuario realiza "
"órdenes tales como pulsar ciertas teclas en un teclado. Por ejemplo, cuando "
"pulsas NVDA+F12, NVDA ejecuta el script dateTime, localizado en uno de los "
"módulos principales de NVDA llamado Global Commands. Un script toma dos "
"argumentos: dónde se debería ejecutar el script (normalmente \"self\"; lo "
"veremos más adelante) y el gesto para el script (véase más adelante)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:314
msgid ""
"* Variable: A variable is something that can change, such as name of a "
"person, name of the NVDA add-on we're running, version of NVDA you are using "
"and so on. An add-on file may define one or more variables (for example, to "
"store common constants such as strings)."
msgstr ""
"* Variable: una variable es algo que puede cambiar, tal como el nombre de "
"una persona, un nombre del complemento de NVDA en ejecución, la versión de "
"NVDA que estás utilizando y así sucesivamente. En un archivo de complemento "
"pueden definirse una o más variables(Por ejemplo, para almacenar constantes "
"comunes, tales como cadenas)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:315
msgid ""
"* Module: A module is a collection of methods and variables in a file. When "
"we write add-ons, we are in fact writing additional modules that NVDA can "
"use while it is running."
msgstr ""
"* Módulo: un módulo es una colección de métodos y variables en un fichero. "
"Cuando escribimos complementos, de hecho, estamos escribiendo módulos "
"adicionales que NVDA puede utilizar mientras se está ejecutando."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:316
msgid "There are other terms that we'll get to know shortly."
msgstr "Hay otros términos que vamos a llegar a conocer en breve."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:317
msgid "### Example 2: Generate a tone when switching to Notepad"
msgstr "### Ejemplo 2: generar un tono cuando se cambie al Bloc de notas"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:318
msgid "Most of the below code comes from NVDA Developer Guide."
msgstr ""
"La mayor parte del código de abajo viene de la Guía del desarrollador de "
"NVDA."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:319
msgid ""
"NVDA doesn't just let you add global commands, but it also allows writing "
"code to enhance usage of programs through app modules. An app module is also "
"a Python file except that, this time, the name of the .py file is the name "
"of the executable for a program. For example, an app module for Notepad "
"would be named notepad.py."
msgstr ""
"NVDA no sólo te permite agregar comandos globales, sino que también permite "
"la escritura de código para mejorar el uso de los programas a través de "
"módulos de aplicación. Un módulo de aplicación es también un archivo Python, "
"excepto que, esta vez, el nombre del archivo .PY Es el nombre del ejecutable "
"de un programa. Por ejemplo, un módulo de aplicación para el Bloc de notas "
"se llamaría notepad.py."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:320
msgid ""
"The below code, from NVDA developer Guide, gives a short example of a "
"typical app module: play a short beep when switching to Notepad. Put the "
"below code in notepad.py, which in turn should be placed in appModules "
"folder under scratchpad directory (if enabled) in your user configuration "
"folder in order for it to run."
msgstr ""
"El código de abajo, de la Guía del desarrollador de NVDA, da un pequeño "
"ejemplo de un módulo de aplicación típica: reproducir un pitido corto al "
"cambiar al Bloc de notas. Pon el código de abajo en notepad.py, que a su vez "
"se debe colocar en la carpeta appModules del directorio scratchpad (si está "
"activado) en la carpeta de configuración del usuario con el fin de que se "
"ejecute."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:322
msgid "# An example app module."
msgstr "# Un ejemplo de módulo de aplicación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:323
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:455
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:514
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:852
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:869
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:880
msgid "import appModuleHandler"
msgstr "import appModuleHandler"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:324
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:471
msgid "import tones"
msgstr "import tones"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:325
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:458
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:515
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:856
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:870
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:882
msgid "class AppModule(appModuleHandler.AppModule):"
msgstr "class AppModule(appModuleHandler.AppModule):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:326
msgid "\tdef event_gainFocus(self, obj, nextHandler):"
msgstr "\tdef event_gainFocus(self, obj, nextHandler):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:327
msgid "\t\ttones.beep(256, 200)"
msgstr "\t\ttones.beep(256, 200)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:328
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:660
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:674
msgid "\t\tnextHandler()"
msgstr "\t\tnextHandler()"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:330
msgid "### Example 2 code explanation"
msgstr "### Explicación del código del ejemplo 2"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:331
msgid ""
"We're seeing more new code here. Let's go over this, again piece by piece:"
msgstr ""
"Estamos viendo más código nuevo aquí. Vamos a repasar esto, de nuevo pieza "
"por pieza:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:332
msgid ""
"1. Unlike the first example, the crucial module we need is appModuleHandler."
msgstr ""
"1. A diferencia del primer ejemplo, el módulo fundamental que necesitamos es "
"appModuleHandler."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:333
msgid "2. The class that we are using is AppModule."
msgstr "2. La clase que estamos utilizando es appModule."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:334
msgid ""
"3. Unlike last time, we're using events, a method run when certain events "
"occur such as when names of controls change. Events take an object as one of "
"its arguments, the object for which the event needs to be dealt with, or, as "
"many people say, \"fired.\""
msgstr ""
"3. A diferencia de la última vez, estamos utilizando eventos, un método que "
"se ejecuta cuando se producen determinados eventos, como cuando los nombres "
"de los controles cambian. Los eventos reciben un objeto como uno de sus "
"argumentos, el objeto para el que el evento debe ser tratado, o, como mucha "
"gente dice, \"disparado.\""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:335
msgid ""
"4. Inside the event method, we're also seeing a call to `nextHandler`. This "
"method is used in event methods to tell NVDA to pass the event so it can be "
"taken care of, such as saying the name of a control after beeping."
msgstr ""
"4. Dentro del método de evento, también estamos viendo una llamada "
"a`nextHandler`. Este método se utiliza en métodos de evento para decirle a "
"NVDA que pase el evento para que pueda ser atendido, tal como decir el "
"nombre de un control después de sonar."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:336
msgid "### More new terms please"
msgstr "### Más términos nuevos por favor"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:337
msgid "Other terms you may see include:"
msgstr "Otros términos que puedes ver son:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:338
msgid ""
"* Event: An event is a method that'll be run when something occurs, such as "
"when a program is focused, when names of controls change and so on."
msgstr ""
"* Evento: un evento es un método que va a ser ejecutado cuando sucedan "
"algunos hechos, tales como cuando un programa esté enfocado, cuando cambien "
"los nombres de un control y así."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:339
msgid ""
"* Call: We say a function or method \"calls\" another method when we run the "
"second method from the first method. Our first example above demonstrates "
"this, by calling the tones.beep method from our script method."
msgstr ""
"* Llamada: decimos que una función llama a algún otro método cuando corremos "
"el segundo método desde otro método. Por ejemplo, en nuestro primer ejemplo, "
"llamábamos al método tones.beep desde nuestro método de script."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:340
msgid ""
"* Object: An object is an instance of a class - that is, a class coming to "
"life when a program runs. Throughout your add-ons, as you write classes and "
"when you run your add-ons, your classes come to life as objects, commonly "
"abbreviated to obj. In NVDA, an object may refer to controls or parts of a "
"program."
msgstr ""
"* Objeto: un objeto es una instancia de una clase- es decir, una clase que "
"se crea cuando se ejecuta un programa. A lo largo de tus complementos, a "
"medida que escribes las clases y al ejecutar tus complementos, tus clases "
"cobran vida como objetos, comúnmente abreviados como obj. En NVDA, un objeto "
"puede referirse a los controles o partes de un programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:341
msgid ""
"* Self: In Python, the word \"self\" means current class (if we're defining "
"one, such as when writing add-ons), or means the class for which a method is "
"defined. For example, in a class called numbers, the add method would have "
"self as the first argument, reminding us that add method is part of the "
"class of numbers. In NVDA development world, self usually means the current "
"NVDA object (see below), or in the add-on development, the instance of an "
"add-on. Many of your methods will have self as the first argument."
msgstr ""
"* Self: en Python, la palabra\"self\" significa clase actual(si estamos "
"definiendo una, como por ejemplo al escribir complementos), o significa la "
"clase para la que se define un método. Por ejemplo, en una clase llamada "
"numbers, el método añadido tendría a self como su primer argumento, "
"recordándonos que el método añadido es parte de la clase numbers. En el "
"mundo de desarrollo de NVDA, self por lo general significa el objeto actual "
"de NVDA (véase más adelante), o en el desarrollo de complementos, la "
"instancia de un complemento. Muchos de tus métodos tendrán a self como el "
"primer argumento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:342
msgid ""
"Just like example 1, once you're comfortable with app module code, you may "
"wish to delete the Notepad app module code unless you want to keep hearing "
"beeps when you switch to Notepad. The actual differences between global "
"plugins and app modules will become more clear when we talk about them in "
"more detail throughout this guide."
msgstr ""
"Al igual que en el ejemplo 1, una vez te sientas cómodo con el código del "
"módulo de aplicación, es posible que desees eliminar este código para el "
"Bloc de notas,  a menos que desees mantener el oír pitidos cuando se cambie "
"al Bloc de notas. Las diferencias reales entre extensiones globales y "
"módulos de aplicación se harán más claras cuando hablemos de ellos con más "
"detalle en esta guía."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:343
msgid "### A few tips for beginners"
msgstr "### Algunos consejos para principiantes"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:344
msgid "Here are a few useful tips passed on by add-on writers:"
msgstr ""
"Aquí van algunos consejos útiles transmitidos por escritores de complementos:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:345
msgid "* Start with easy add-ons, such as saying a message, tones and so on."
msgstr ""
"* Comienza con complementos sencillos, como decir un mensaje, tonos, etc."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:346
msgid "* Write and test one method at a time."
msgstr "* Escribe y prueba un método por vez."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:347
msgid ""
"* If you are writing app modules or drivers, become familiar with programs, "
"synthesizers or braille displays you wish to support (e.g. read "
"documentation, try using them, etc.)."
msgstr ""
"* Si estás escribiendo módulos de aplicación o controladores, familiarízate "
"con los programas, sintetizadores o pantallas braille a las que desees dar "
"soporte (por ejemplo lee la documentación, trata de usarlos, etc.)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:348
msgid ""
"* When defining commands (especially in global plugins), consult commands "
"used in NVDA and other add-ons first before assigning a new command in your "
"add-on to avoid command conflicts."
msgstr ""
"* En la definición de las órdenes (especialmente en extensiones globales), "
"primero consulta las órdenes utilizadas en NVDA y otros complementos antes "
"de asignar una nueva orden en el complemento para evitar conflictos de "
"órdenes."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:349
msgid "## Useful modules from NVDA core"
msgstr "## Módulos útiles del núcleo de NVDA"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:350
msgid ""
"Throughout the life of add-on development, you'll come across some useful "
"modules from NVDA core that would be helpful in your add-on code. This "
"section explains them and some functions in those modules that would be "
"useful, along with examples that utilize some of them."
msgstr ""
"A lo largo de la vida del desarrollo de un complemento, te encontrarás con "
"algunos módulos útiles del núcleo de NVDA que serían útiles en el código "
"para tu complemento. Esta sección te los explica y también algunas funciones."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:351
msgid ""
"Note: for readers who are scripters for other screen readers, see Appendix D "
"on equivalent functions between screen reader scripting facilities."
msgstr ""
"Nota: para lectores que sean creadores de scripts para otros lectores de "
"pantalla, consultad el Apéndice D sobre las funciones equivalentes entre las "
"herramientas de creación de scripts de lectores de pantalla."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:352
msgid "### List of useful NVDA core modules and methods"
msgstr "### Lista de módulos y métodos básicos útiles de NVDA"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:353
msgid ""
"The following lists available NVDA core modules and some useful methods and "
"classes found in those modules:"
msgstr ""
"A continuación se enumeran los módulos disponibles del núcleo de NVDA y "
"algunos métodos útiles que se encuentran en los módulos:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:354
msgid ""
"* Addon Handler (addonHandler.py): The module which implements the add-on "
"subsystem. The addonHandler.initTranslation() method is used to initialize "
"internationalization support for your add-on."
msgstr ""
"* Addon Handler (addonHandler.py): El módulo que implementa el subsistema de "
"complementos. El método addonHandler.initTranslation() se utiliza para "
"inicializar el soporte de internacionalización para tu complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:355
msgid ""
"* NVDA basic API (api.py): A collection of core methods used throughout "
"NVDA, such as obtaining focus and navigator object, setting focus and so on. "
"Some of the most useful functions are:"
msgstr ""
"* API básica de NVDA (api.py): una colección de los métodos básicos "
"utilizados en NVDA, como la obtención del foco y el navegador de objetos, "
"ajustar el foco, etc. Algunas de las funciones más útiles son:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:356
msgid ""
"    - `api.getFocusObject()`: Retrieves the focused control (returns the "
"object with focus)."
msgstr ""
"    - `api.getFocusObject()`: recupera el control enfocado (devuelve el "
"objeto con el foco)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:357
msgid ""
"    - `api.getNavigatorObject()`: Fetches the current navigator object. If "
"NVDA is set to follow system focus, the focus and navigator object will be "
"the same, otherwise a different object is returned."
msgstr ""
"    - `api.getNavigatorObject()`: obtiene el navegador de objetos actual. Si "
"NVDA está configurado para seguir al foco del sistema, el foco y el "
"navegador de objetos serán lo mismo, de otro modo se devuelve un objeto "
"diferente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:358
msgid ""
"    - `api.getForegroundObject()`: Returns the foreground window of the "
"current application (the parent of this object is the application itself)."
msgstr ""
"    - `api.getForegroundObject()`: devuelve la ventana en primer plano de la "
"aplicación actual (el padre de este objeto es la aplicación misma)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:359
msgid ""
"    - These have a corresponding method to set a certain object as the focus "
"or navigator object. Note that this lets NVDA see the new focus or navigator "
"object but does not actually change system focus."
msgstr ""
"    - Estos tienen un método correspondiente para establecer un objeto "
"determinado como el foco o el navegador de objetos. Ten en cuenta que esto "
"permite a NVDA consultar el foco o el navegador de objetos nuevo pero no "
"cambia el foco actual del sistema."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:360
msgid ""
"    - `api.getDesktopObject()`: returns the shell (topmost level) object."
msgstr ""
"    - `api.getDesktopObject()`: devuelve la shell (objeto del nivel más "
"alto)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:361
msgid ""
"    - `api.copyToClip(text to be copied, optionally notify success or "
"failure)`: copies text to the clipboard and optionally let NVDA notify the "
"user about this operation."
msgstr ""
"    - `api.copyToClip(texto a copiar, notificar éxito o fallo "
"opcionalmente)`: copia texto al portapapeles y, opcionalmente, pide a NVDA "
"que avise al usuario sobre esta operación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:362
msgid ""
"* App Module subsystem (appModuleHandler.py, appModules): The subsystem in "
"charge of handling app modules (see the chapter on app modules for more "
"information)."
msgstr ""
"* Subsistema de módulos de aplicación (appModuleHandler.py, appModules): El "
"subsistema encargado de manejar los módulos de aplicación (véase el capítulo "
"sobre los módulos de aplicación para obtener más información)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:363
msgid ""
"* ARIA support (aria.py): Implements support for Accessible Rich Internet "
"Applications (ARIA)."
msgstr ""
"* Soporte de ARIA (aria.py): implementa el soporte para aplicaciones de "
"Internet enriquecidas accesibles (ARIA)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:364
msgid ""
"* Base object collection (baseObject.py): Contains useful base objects such "
"as scriptable objects (see the chapter on NVDA objects and overlay objects "
"for more information)."
msgstr ""
"* Colección de objetos base (baseObject.py): contiene objetos base útiles "
"tales como  objetos scriptables (consulta el capítulo sobre objetos de NVDA "
"y superposición de objetos para más información)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:365
msgid ""
"* Braille input and output subsystem (braille.py, brailleInput.py): Controls "
"braille output to and input from braille displays, needed by braille display "
"driver add-ons."
msgstr ""
"* Subsistema de entrada y salida braille (braille.py, brailleInput.py): "
"controla la salida y la entrada braille de las pantallas braille, necesario "
"para complementos de controladores de pantallas braille."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:366
msgid ""
"* Built-in modules (builtin.py): Allows access to builtin modules when "
"working with add-ons."
msgstr ""
"* Módulos integrados (builtin.py): permite el acceso a módulos integrados "
"cuando se trabaja con complementos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:367
msgid ""
"* Configuration (config): Manages configuration and profiles (profiles are "
"available in 2013.3 or later)."
msgstr ""
"* Configuración (config): gestiona la configuración y los perfiles (los "
"perfiles están disponibles en 2013.3 o posterior)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:368
msgid ""
"* Content recognition engines (contentRecog packages): adds ability to use "
"OCR and other methods to recognize content in various scenarios. NVDA ships "
"with Windows 10 OCR engine."
msgstr ""
"* Motores de reconocimiento de contenido (paquetes contentRecog): añade la "
"capacidad de utilizar OCR y otros métodos para reconocer contenido en "
"diversos escenarios. NVDA incorpora un motor de OCR para Windows 10."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:369
msgid ""
"* Controls and states collection (controlTypes.py): Includes dictionaries on "
"control types (roles) and possible states that a control can be in."
msgstr ""
"* Colección de controles y estados (controlTypes.py): incluye diccionarios "
"sobre los tipos de control (roles) y posibles estados."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:370
msgid ""
"* Events (eventHandler.py): Handles various events such as gaining focus. "
"One function in particular is useful in app modules:"
msgstr ""
"* Eventos (eventHandler.py): maneja varios eventos como la optención del "
"foco. Una función en particular es útil en los módulos de aplicación:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:371
msgid ""
"    - `eventHandler.requestEvents(event to be requested, process ID, window "
"class name for the control)`: Allows NVDA to listen to specific events for "
"certain controls while using another app."
msgstr ""
"    - `eventHandler.requestEvents(evento a solicitar, id del proceso, nombre "
"de clase de ventana del control)`: Permite a NVDA escuchar eventos "
"específicos para ciertos controles mientras se utiliza otra aplicación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:372
msgid ""
"* Extension points (extensionPoints): provides a way to let add-ons and "
"other modules define and respond to specific action such as profile "
"switches, actions in an add-on and so on. The following extension points are "
"defined:"
msgstr ""
"* Puntos de extensión (extensionPoints): proporciona una forma de permitir "
"que los complementos y otros módulos definan y respondan a acciones "
"específicas como cambios de perfil, acciones en un complemento, etc. Se "
"definen los siguientes puntos de extensión:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:373
msgid ""
"    - `extensionPoints.Action`: notifies when something happens e.g. profile "
"switches."
msgstr ""
"    - `extensionPoints.Action`; notifica cuando algo ocurre, por ejemplo: el "
"perfil cambia."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:374
msgid ""
"    - `extensionPoints.Decider`: decides whether to process something "
"further e.g. processing keyboard input from a remote system."
msgstr ""
"    - `extensionPoints.Decider`: decide si procesar algo más, por ejemplo: "
"procesar la entrada del teclado desde un sistema remoto."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:375
msgid ""
"    - `extensionPoints.Filter`: modifies a given text for further processing "
"e.g. advanced speech sequences."
msgstr ""
"    - `extensionPoints.Filter`: modifica un texto determinado para su "
"procesamiento posterior, por ejemplo, secuencias avanzadas de voz."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:376
msgid ""
"* Global Commands collection (globalCommands.py): A list of global commands "
"available while using NVDA (see section on script scope for more "
"information)."
msgstr ""
"* Colección de Comandos globales (globalCommands.py): Una lista de las "
"órdenes globales disponibles durante el uso de NVDA (véase la sección  sobre "
"el alcance de un script para más información)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:377
msgid ""
"* Global Plugin subsystem (globalPluginHandler.py): The module needed for "
"controlling global plugins."
msgstr ""
"* Subsistema de extensiones globales (globalPluginHandler.py): El módulo "
"necesario para controlar las extensiones globales."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:378
msgid ""
"* NVDA GUI (gui): A collection of classes used by NVDA to display its "
"messages graphically. Includes GUI's for NVDA menu, add-on manager and "
"others."
msgstr ""
"* GUI de NVDA (gui): Una colección de clases utilizadas por NVDA para "
"mostrar sus mensajes de forma gráfica. Incluye la interfaz gráfica de "
"usuario para el menú de NVDA, el administrador de complementos y otros."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:379
msgid ""
"* Hardware port utilities and input/output management (hwPortUtils.py, hwIo."
"py): A set of utilities for communicating over serial and other hardware "
"ports, useful during driver add-on development."
msgstr ""
"* Utilidades de los puertos Hardware y gestión de la entrada y la salida "
"(hwPortUtils.py, hwIo.py): Un conjunto de utilidades para la comunicación a "
"través de los puertos serie de hardware y otros, útil durante el desarrollo "
"de un complemento de controlador."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:380
msgid ""
"* IAccessible support (IAccessibleHandler, IAccessible objects): Used for "
"supporting Microsoft Active Accessibility (MSAA)/IAccessible controls."
msgstr ""
"* Soporte para IAccessible (IAccessibleHandler, objetos IAccessible): Se "
"utilizan para dar soporte a los controles Microsoft Active Accessibility "
"(MSAA) / IAccessible."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:381
msgid "* Input management (inputCore.py): Manages input from the user."
msgstr "* Gestión de entrada (inputCore.py): Gestiona la entrada del usuario."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:382
msgid ""
"* Java support (JABHandler.py, JAB objects): A collection of methods used "
"for supporting JAB (Java Access Bridge) subsystem used for Java applications."
msgstr ""
"* Soporte Java (JABHandler.py, objetos JAB): Una colección de los métodos "
"utilizados para soportar el subsistema JAB (Java Access Bridge) utilizado "
"por las aplicaciones Java."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:383
msgid ""
"* Keyboard input (keyboardHandler.py): Supports entering commands from the "
"keyboard."
msgstr ""
"* Entrada de teclado (keyboardHandler.py): Soporta la introducción de "
"órdenes desde el teclado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:384
msgid ""
"* Logging facility (logHandler.py): Allows a module to write logs to be "
"viewed by a developer or a user via Log Viewer. It includes the following "
"class:"
msgstr ""
"* Función de registro (logHandler.py): Permite a un módulo escribir "
"registros para ser vistos por un desarrollador o por un usuario a través del "
"visualizador de registro. Incluye la siguiente clase:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:385
msgid "    - `logHandler.Log`: The class which implements logging facility."
msgstr ""
"    - `logHandler.Log`: la clase que implementa la utilidad de registro."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:386
msgid ""
"* Math content presentation (MathPress packages): allows NVDA to recognize "
"and interact with various math content and markup. NVDA ships with MathML "
"support package and support for Math Player is included in 2015.2 or later."
msgstr ""
"* Presentación de contenido matemático (paquetes de MathPress): permite a "
"NVDA reconocer e interactuar con diversos contenidos matemáticos y lenguajes "
"de marcado. NVDA incluye el paquete de soporte MathML y el soporte para Math "
"Player, que viene incorporado en 2015.2 o posterior."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:387
msgid "* Mouse support (mouseHandler.py): Supports mouse commands."
msgstr "* Soporte de ratón (mouseHandler.py): Soporta órdenes de ratón."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:388
msgid ""
"* NVDA objects collection (NVDAObjects): A collection of NVDA objects or "
"controls used in many applications and standards such as UIA (User Interface "
"Automation). Some objects require special actions to be performed, and these "
"are specified in behaviors module in NVDA objects package. Some of the "
"common ones include:"
msgstr ""
"* Colección de objetos de NVDA (NVDAObjects): Una colección de objetos o "
"controles de NVDA que se utilizan en muchas aplicaciones y estándares como "
"la UIA (User Interface Automation). Algunos objetos requieren que se "
"realicen acciones especiales y éstas se especifican en el módulo de "
"comportamientos del paquete de objetos NVDA. Entre los más comunes se "
"incluyen:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:389
msgid ""
"    - `NVDAObjects.NVDAObject`: the base class for NVDA objects that define "
"events, properties and so on."
msgstr ""
"    - `NVDAObjects.NVDAObject`: la clase base para objetos de NVDA donde se "
"definen eventos, propiedades, etcétera."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:390
msgid ""
"    - `NVDAObjects.behaviors`: a collection of behaviors for specific "
"controls, such as edit fields with or without selection detection, "
"terminals, tool tips, help balloons, a way to simulate table commands in "
"various controls and others."
msgstr ""
"    - `NVDAObjects.behaviors`: una colección de comportamientos para "
"controles específicos, tales como editar campos con o sin detección de "
"selección, terminales, consejos, globos de ayuda, una forma de simular "
"órdenes de tabla en varios controles y otros."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:391
msgid ""
"    - `NVDAObjects.IAccessible`: a collection of MSAA/IAccessible objects, "
"such as working with SysListView32 list views and others."
msgstr ""
"    - `NVDAObjects.IAccessible`: una colección de objetos MSAA/IAccessible, "
"tales como la que funciona con vistas de listas SysListView32 y otros."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:392
msgid ""
"    - `NVDAObjects.JAB`: a collection of classes used when interfacing with "
"Java applications and Java Access Bridge."
msgstr ""
"    - `NVDAObjects.JAB`: una colección de clases utilizadas al interactuar "
"con aplicaciones Java y Java Access Bridge."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:393
msgid ""
"    - `NVDAObjects.UIA`: various classes for objects powered by UI "
"Automation. Since 2016, it is also the home of a collection of controls used "
"in legacy (not Chromium) Microsoft Edge and objects powered by EdgeHTML "
"rendering engine."
msgstr ""
"    - `NVDAObjects.UIA`: diversas clases para objetos impulsados por UI "
"Automation. Desde 2016, también es el sitio de una colección de controles "
"usados en el antiguo Microsoft Edge (no Chromium) y objetos promovidos por "
"el motor de renderizado EdgeHTML."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:394
msgid ""
"    - `NVDAObjects.Window`: generic windows and other custom objects such as "
"those found in Microsoft Excel."
msgstr ""
"    - `NVDAObjects.Window`: ventanas genéricas y otros objetos "
"personalizados como los que se encuentran en Microsoft Excel."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:395
msgid "* Review facility (review.py): assists with working with review cursor."
msgstr ""
"* Facilidad de revisión (review.py): ayuda a trabajar con el cursor de "
"revisión."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:396
msgid ""
"* Scripts support (scriptHandler.py): Handles scripts, methods executed due "
"to the user pressing keyboard commands and other input."
msgstr ""
"* Soporte de Scripts (scriptHandler.py): Maneja scripts, métodos ejecutados "
"debido a la pulsación de las órdenes de teclado y otras entradas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:397
msgid ""
"    - scriptHandler.script: a decorator that allows information about the "
"bound script to be defined while defining the script itself, including "
"description (input help message), gesture/gestures (commands, the latter "
"used for a list of gestures), and script category."
msgstr ""
"    - scriptHandler.script: un decorador que permite definir información "
"sobre el script asociado mientras se define el propio script, incluyendo "
"descripción (mensaje de ayuda de entrada), gesto o gestos (una orden o lista "
"de órdenes), y la categoría del script."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:398
msgid "* Speech output (speech): Controls speech output."
msgstr "* Salida de voz(speech): Controla la salida de voz."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:399
msgid ""
"* Synthesizer driver support (synthDriverHandler.py): This is the core "
"module needed for speech synthesizer add-ons."
msgstr ""
"* Soporte para controladores de Sintetizador (synthDriverHandler.py): Este "
"es el módulo principal necesario para complementos de sintetizador de voz."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:400
msgid ""
"* Widget text access (textInfos): Allows access to text for widget and "
"documents."
msgstr ""
"* Acceso al texto de los Widgets (textInfos): Permite el acceso al texto de "
"widgets y documentos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:401
msgid ""
"* Touchscreen support (touchHandler.py): Provides support for touchscreen "
"input (installed versions only)."
msgstr ""
"* Soporte de pantalla táctil (touchHandler.py): Proporciona soporte para la "
"entrada de la pantalla táctil (sólo versiones instaladas)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:402
msgid ""
"    - `touchHandler.touchSupported()`: returns if the system supports touch "
"interaction."
msgstr ""
"    - `touchHandler.touchSupported()`: indica si el sistema soporta "
"interacción táctil."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:403
msgid ""
"* Tone output (tones.py): Allows the user to hear tones. The following "
"function is defined:"
msgstr ""
"* Salida de tonos (tones.py): Permite al usuario escuchar tonos. Se definió "
"la siguiente función:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:404
msgid ""
"    - `tones.beep(pitch in hertz, duration in milliseconds, left channel "
"volume, right channel volume)`: Plays a tone of specified pitch for "
"specified duration. The first two arguments are mandatory, while the other "
"two are optional."
msgstr ""
"    - `tones.beep(tono en hercios, duración en milésimas de segundo, volumen "
"del canal izquierdo, volumen del canal derecho)`: Reproduce un sonido de un "
"tono específico durante un tiempo determinado. Los dos primeros argumentos "
"son obligatorios, mientras que los otros dos son opcionales."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:405
msgid ""
"* User interface messages (ui.py): Includes various functions for speech and/"
"or braille output, including:"
msgstr ""
"* Mensajes de la interfaz de usuario (ui.py): Incluye varias funciones para "
"la salida de voz y/o braille, incluyendo:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:406
msgid ""
"    - `ui.message(message to be spoken/brailled, speech priority, optional "
"braille message)`: Speaks or brailles the message (a string surrounded by "
"quotes). Optionally, speech priority can be specified to interrupt what the "
"speech synthesizer is saying when announcing the message, as well as output "
"a different message on braille displays."
msgstr ""
"    - `ui.message(mensaje que se verbaliza o se muestra en Braille, "
"prioridad de la voz, mensaje Braille opcional)`: verbaliza o muestra en "
"Braille el mensaje (una cadena encerrada entre comillas). Opcionalmente, se "
"puede especificar la prioridad de la voz para interrumpir lo que verbaliza "
"el sintetizador de voz cuando se anuncia el mensaje, así como emitir un "
"mensaje diferente en las pantallas Braille."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:407
msgid ""
"    - `ui.browseableMessage(message to be shown, title, HTML or not)`: "
"displays some text and an optional title in a web browser window. If you "
"want to use HTML markup, set isHTML argument to True."
msgstr ""
"    - `ui.browseableMessage(mensaje a ser mostrado, título, HTML o no)`: "
"muestra algún texto y un título opcional en una ventana de navegador web. Si "
"deseas utilizar el marcado HTML, define el argumento isHTML como True."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:408
msgid ""
"* UIA support (UIAHandler.py, UIA objects): Used for supporting UIA (User "
"Interface Automation) controls (Windows 7 and later)."
msgstr ""
"* Soporte UIA (UIAHandler.py, objetos UIA): Usado para soportar controles "
"UIA (User Interface Automation) (Windows 7 y posteriores)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:409
msgid ""
"* Virtual buffers (virtualBuffers): Handles virtual buffer documents such as "
"web sites."
msgstr ""
"* Mmodos virtuales(virtualBuffers): Maneja documentos del modo virtual, "
"tales como sitios web."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:410
msgid ""
"* Windows version specifications and checks (winVersion.py): provides "
"constants representing Windows releases and comparing Windows releases."
msgstr ""
"* Especificación de la versión de Windows y comprobaciones (winVersion.py): "
"proporciona constantes que representan y comparan versiones de Windows."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:411
msgid ""
"    - winVersion.getWinVer(): returns the current Windows release (Windows "
"release name, major.minor.build, installation type, and service pack if "
"any). This data can be compared with other Windows releases such as "
"detecting specific Windows 10 release such as October 2018 Update e.g. "
"winVersion.getWinVer() >= winVersion.WIN10_1809."
msgstr ""
"    - winVersion.getWinVer(): devuelve la versión actual de Windows (nombre "
"de la versión, principal.menor.revisión, tipo de instalación, y service pack "
"si lo hay). Estos datos se pueden comparar con otras versiones de Windows, "
"por ejemplo para detectar una versión de Windows 10 concreta como la "
"actualización de octubre de 2018. Ejemplo: winVersion.getWinVer() >= "
"winVersion.WIN10_1809."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:412
msgid ""
"* Windows API wrappers: the following modules are thin wrappers around "
"Windows API libraries. You can use the below modules or call Windows API "
"directly via ctypes.windll.dllname (e.g. ctypes.windll.user32):"
msgstr ""
"* Capas de la API de Windows: los siguientes módulos son capas delgadas de "
"las bibliotecas de la API de Windows. Puedes utilizar los módulos siguientes "
"o llamar a la API de Windows directamente a través de ctypes.windll.dllname "
"(por ejemplo, ctypes.windll.user32):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:413
msgid ""
"    - `winKernel`: Wraps some constants, structures and functions from "
"kernel32.dll that are commonly encountered in NVDA."
msgstr ""
"    - `winKernel`: abarca algunas constantes, estructuras y funciones de "
"kernel32.dll que se encuentran comúnmente en NVDA."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:414
msgid ""
"    - `winUser`: wraps around constants, structures and functions defined in "
"user32.dll that are used by NVDA."
msgstr ""
"    - `winUser`: abarca las constantes, estructuras y funciones definidas en "
"user32.dll que utiliza NVDA."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:415
msgid ""
"The modules without .py extension are directories, containing specialist "
"modules. There are other useful methods out there in addition to the list "
"above, but the above are the most useful ones. See the NVDA source code "
"documentation for other methods, or see the examples below on how these "
"methods and others are used throughout the life of an add-on."
msgstr ""
"Los módulos sin extensión .py son directorios que contienen módulos "
"especializados. Hay otros métodos útiles por ahí, además de la lista "
"anterior, pero los anteriores son los más útiles. Consulta la documentación "
"del código fuente de NVDA para ver otros métodos, o mira los ejemplos que "
"aparecen a continuación para ver cómo se utilizan estos métodos y otros "
"durante la vida de un complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:416
msgid "### Some real-life examples"
msgstr "### Algunos ejemplos de la vida real"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:417
msgid ""
"Let's go through some simplified real-life examples demonstrating how the "
"components listed above are used in common add-on writing scenarios."
msgstr ""
"Veamos algunos ejemplos simplificados de la vida real que demuestran cómo se "
"utilizan los componentes listados más arriba en escenarios comunes de "
"desarrollo de complementos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:418
msgid "#### Example 1: am I on the right app where the focus is located?"
msgstr ""
"#### Ejemplo 1: ¿Estoy en la aplicación correcta donde se encuentra el foco?"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:419
msgid ""
"The below code checks whether the navigator object is located somewhere on "
"the same app or not."
msgstr ""
"El siguiente código verifica si el navegador de objetos e encuentra en algún "
"lugar de la misma aplicación o no."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:421
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:513
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:853
msgid "import api"
msgstr "import api"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:422
msgid "def sameApp(obj=None):"
msgstr "def sameApp(obj=None):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:423
msgid "\tif obj is None:"
msgstr "\tif obj is None:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:424
msgid "\t\tobj = api.getNavigatorObject()"
msgstr "\t\tobj = api.getNavigatorObject()"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:425
msgid "\treturn api.getFocusObject().appModule == obj.appModule"
msgstr "\treturn api.getFocusObject().appModule == obj.appModule"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:427
msgid ""
"The `api.getNavigatorObject()` function returns the current navigator "
"object, the object you are interested in as opposed to focused object. Each "
"NVDA object includes `appModule` member which records on which app an object "
"is located."
msgstr ""
"La función `api.getNavigatorObject ()` devuelve el objeto del navegador "
"actual, el objeto que te interesa en lugar del objeto enfocado. Cada objeto "
"de NVDA incluye un miembro `appModule` que registra en qué aplicación se "
"encuentra un objeto."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:428
msgid "#### Example 2: Display a message in a browse mode document"
msgstr "#### Ejemplo 2: Mostrar un mensaje en un documento en modo exploración"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:429
msgid ""
"In NVDA 2015.2 and later, it became possible to display a message in a "
"browse mode window so people can use browse mode commands to review the "
"message content. The below code displays \"Hello world\" in a document "
"window."
msgstr ""
"Desde NVDA 2015.2 y posterior, fue posible mostrar un mensaje en una ventana "
"del modo de exploración para que la gente pueda utilizar las órdenes del "
"modo de exploración para revisar el contenido del mensaje. El siguiente "
"código muestra\"Hola mundo\" en la ventana de un documento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:431
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:438
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:854
msgid "import ui"
msgstr "import ui"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:432
msgid "ui.browseableMessage(\"Hello World!\", isHtml=False)"
msgstr "ui.browseableMessage(\"¡Hola Mundo!\", isHtml=False)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:434
msgid "The isHtml flag tells NVDA whether to treat the message as HTML text."
msgstr ""
"La bandera isHtml indica a NVDA que trate el mensaje como un texto HTML."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:435
msgid "#### Example 3: Announce the automation ID of a UIA object"
msgstr "#### Ejemplo 3: Anunciar el ID de automatización de un objeto UIA"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:436
msgid ""
"In UI Automation, automation ID is used to identify different screen "
"elements. The following code displays this information in a browsable window."
msgstr ""
"En UI Automation, el ID de automatización se utiliza para identificar "
"diferentes elementos de pantalla. El siguiente código muestra esta "
"información en una ventana navegable."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:439
msgid "from NVDAObjects.UIA import UIA"
msgstr "from NVDAObjects.UIA import UIA"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:440
msgid "def announceUIAId():"
msgstr "def announceUIAId():"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:441
msgid "\tobj = api.getFocusObject()"
msgstr "\tobj = api.getFocusObject()"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:442
msgid "\tif isinstance(obj, UIA):"
msgstr "\tif isinstance(obj, UIA):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:443
msgid "\t\tui.browseableMessage(obj.UIAAutomationId, isHtml=True)"
msgstr "\t\tui.browseableMessage(obj.UIAAutomationId, isHtml=True)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:445
msgid "#### Example 4: Send keystrokes"
msgstr "#### Ejemplo 4: Enviar pulsaciones de teclas"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:446
msgid ""
"You can ask NVDA to send specific keystrokes by instantiating a keyboard "
"gesture object."
msgstr ""
"Puedes pedirle a NVDA que envíe pulsaciones de teclas específicas "
"instanciando un objeto de gesto de teclado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:448
msgid "import keyboardHandler"
msgstr "import keyboardHandler"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:449
msgid "def sendApplicationsKey():"
msgstr "def sendApplicationsKey():"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:450
msgid ""
"\tkeyboardHandler.KeyboardInputGesture.fromName(\"applications\").send()"
msgstr ""
"\tkeyboardHandler.KeyboardInputGesture.fromName(\"applications\").send()"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:452
msgid ""
"#### Example 5: Stop speech whenever screen content changes if dynamic "
"content change announcement is off"
msgstr ""
"#### Ejemplo 5: Detener la voz cada vez que cambie el contenido de la "
"pantalla si el anuncio de cambio de contenido dinámico está desactivado"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:453
msgid ""
"The below code is a handler for a name change event that stops speech "
"whenever screen content changes if dynamic content change announcement is "
"off."
msgstr ""
"El código que aparece a continuación es un controlador para un evento de "
"cambio de nombre que detiene la voz siempre que el contenido de la pantalla "
"cambie si el anuncio de cambio de contenido dinámico está desactivado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:456
msgid "import config"
msgstr "import config"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:457
msgid "import speech"
msgstr "import speech"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:459
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:672
msgid "\tdef event_nameChange(self, obj, nextHandler):"
msgstr "\tdef event_nameChange(self, obj, nextHandler):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:460
msgid ""
"\t\tif not config.conf[\"presentation\"][\"reportDynamicContentChanges\"]:"
msgstr ""
"\t\tif not config.conf[\"presentation\"][\"reportDynamicContentChanges\"]:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:461
msgid "\t\t\tspeech.cancelSpeech()"
msgstr "\t\t\tspeech.cancelSpeech()"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:463
msgid "#### Example 6: using script decorator"
msgstr "#### Ejemplo 6: uso del decorador script"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:464
msgid ""
"A decorator is a function that wraps and returns another function while "
"performing internal operations. For example, a decorator can make changes to "
"the internals of a function or check something on behalf of another function "
"without the wrapped function being aware of what's happening."
msgstr ""
"Un decorador es una función que envuelve y devuelve otra función tras "
"realizar operaciones internas. Por ejemplo, un decorador puede hacer cambios "
"en el interior de una función o comprobar algo en nombre de otra función sin "
"que la función envuelta sea consciente de lo que está ocurriendo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:465
msgid ""
"In NVDA 2018.3, a special decorator named scriptHandler.script was "
"introduced to make it easier to define information about a script. A "
"script's description (input help mode message), gesture or gestures "
"(commands bound to this script), and script category can be assigned as you "
"define the script."
msgstr ""
"En NVDA 2018.3, se introdujo un decorador especial llamado scriptHandler."
"script para facilitar la definición de información de un script. Mientras se "
"define el script, se pueden asignar su descripción (mensaje en el modo Ayuda "
"de entrada), gesto o gestos (órdenes asociadas al script), y categoría."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:466
msgid ""
"Recall the first example where a beep was heard when NVDA+A was pressed. The "
"drawback is that the actual script and the command (gesture) associated with "
"it were defined in different places. You can group them by using script "
"decorator (scriptHandler.script) as shown below."
msgstr ""
"Recuerda el primer ejemplo, donde se oía un pitido cada vez que se pulsaba "
"NVDA+a. La desventaja es que el script real y su orden (gesto) asociada se "
"encuentran definidos en lugares distintos. Se pueden agrupar utilizando el "
"decorador script (scriptHandler.script) como se muestra a continuación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:468
msgid ""
"# Add-on development first example global plugin, now edited to use script "
"decorator"
msgstr ""
"# Primer ejemplo de extensión global en el desarrollo de complementos, ahora "
"editado para usar el decorador script"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:470
msgid "import scriptHandler"
msgstr "import scriptHandler"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:473
msgid "\t@scriptHandler.script(gesture=\"kb:NVDA+A\")"
msgstr "\t@scriptHandler.script(gesture=\"kb:NVDA+A\")"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:477
msgid ""
"Throughout this guide, whenever script examples are shown, script decorator "
"will be used unless noted otherwise."
msgstr ""
"A lo largo de esta guía, cada vez que se muestren scripts de ejemplo, se "
"utilizará el decorador script a menos que se indique lo contrario."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:478
msgid ""
"This is just a sample of things you can encounter as you write add-ons and "
"how you can use various NVDA components to achieve what you want. We'll tour "
"add-on components and meet more functions throughout this guide."
msgstr ""
"Esto es sólo una muestra de lo que te puedes encontrar al escribir "
"complementos y de cómo puedes usar diversos componentes de NVDA para lograr "
"lo que quieras. Recorreremos los componentes de un complemento y conoceremos "
"más funciones a lo largo de esta guía."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:479
msgid "## Add-on module components and development tips"
msgstr "## Componentes del módulo de un complemento y consejos de desarrollo"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:480
msgid ""
"An add-on module consists of a number of components. This includes handling "
"input and output, working with different NVDA objects, reacting to events, "
"storing configuration and more."
msgstr ""
"Un módulo de complemento se compone de una serie de componentes. Esto "
"incluye el manejo de la entrada y de la salida, el trabajo con diferentes "
"objetos de NVDA, la reacción a eventos, el almacenamiento de configuración y "
"más."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:481
msgid ""
"This chapter introduces key components and concepts that are used in add-on "
"development, such as NVDA objects, scripts, event handling and additional "
"topics with examples."
msgstr ""
"Este capítulo presenta los componentes y conceptos clave que se utilizan en "
"el desarrollo de complementos, tales como objetos de NVDA, scripts, gestión "
"de eventos y temas adicionales con ejemplos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:482
msgid ""
"Note that the [NVDA core development guide][NVDA Developer Guide] introduces "
"the below concepts. This chapter is intended as an extension of that "
"document. Consult the NVDA developer guide for a brief introduction."
msgstr ""
"Ten en cuenta que la [guía de desarrollo básico de NVDA][guía del "
"desarrollador de NVDA] presenta los siguientes conceptos. Este capítulo "
"pretende ser una extensión de ese documento. Consulta la guía de desarrollo "
"de NVDA para una breve introducción."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:483
msgid ""
"Note for scripters of other screen readers: you might be familiar with some "
"of the concepts introduced in this section. Please read this section if you "
"want a better understanding of how some of them are used in NVDA."
msgstr ""
"Nota para creadores de scripts de otros lectores de pantalla: es posible que "
"estés familiarizado con algunos de los conceptos introducidos en esta "
"sección. Por favor, lee esta sección si deseas conocer mejor cómo se "
"utilizan algunos de ellos en NVDA."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:484
msgid "### The Python Console"
msgstr "### La consola Python"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:485
msgid ""
"This guide sometimes suggests that you use the [Python Console]. The console "
"is a feature of NVDA which can be very useful to developers. It is described "
"in more detail in chapter 5 of the [NVDA Developer Guide]."
msgstr ""
"Esta guía sugiere que en ocasiones utilices la [consola Python]. La consola "
"es una característica de NVDA que puede ser muy útil para los "
"desarrolladores. Se describe con más detalle en el capítulo 5 de la [guía "
"del desarrollador de NVDA]."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:486
msgid ""
"You can activate it by going to the NVDA Tools menu, or by pressing NVDA"
"+control+z."
msgstr ""
"Puedes activarla yendo al menú Herramientas de NVDA, o pulsando NVDA+ctrl+z."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:487
msgid "### Working with objects on screen"
msgstr "### Trabajando con objetos en pantalla"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:488
msgid ""
"An object is an instance of a class - that is, a class coming to life while "
"a program is running. For example, if a class called button has been "
"defined, the button on a screen is the object of this button class."
msgstr ""
"Un objeto es una instancia de una clase - es decir, una clase activa "
"mientras un programa se está ejecutando. Por ejemplo, si se ha definido una "
"clase llamada botón, el botón en una pantalla es el objeto de esta clase "
"botón."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:489
msgid ""
"In NVDA, an object is a representation of a control or part of a program. "
"This includes buttons, check boxes, edit fields, toolbars, sliders and even "
"the application window. These are organized into hierarchies, or parent-"
"child relationships where an object may contain child objects - for example, "
"a list object in Windows Explorer may contain one or more list items, and "
"the parent of this list might be the Windows Explorer window. The object "
"that you're examining right now is termed \"navigator object.\""
msgstr ""
"En NVDA, un objeto es la representación de un control o partes de un "
"programa. Esto incluye botones, casillas de verificación, campos de edición, "
"barras de herramientas, deslizadores e incluso la ventana de la aplicación. "
"Estos se organizan en jerarquías, o relación padre-hijo donde un objeto "
"podrá contener objetos hijos - por ejemplo, un objeto lista en Windows "
"Explorer podrá contener uno o más elementos de lista, y el padre de esta "
"lista podría ser la ventana de Windows Explorer. El objeto que estás "
"examinando en este momento se denomina \"navegador de objetos.\""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:490
msgid ""
"The NVDA object (or simply called object) contains a number of useful "
"properties or attributes. These include the object's name, its value "
"(checked, text of the edit window, etc.), role (check box, window, embedded "
"object, etc., location (screen coordinates) and more. NVDA objects also "
"contain useful methods for manipulating them, such as changing the value of "
"the object, reacting to events for the object (gains focus, value has "
"changed, etc.) and so on."
msgstr ""
"Los objetos de NVDA (o simplemente llamados objetos) contienen una serie de "
"propiedades o atributos útiles. Estos incluyen el nombre del objeto, su "
"valor (seleccionado, el texto de la ventana de edición, etc), rol (casilla "
"de verificación, ventana, objeto incrustado, etc.), posición (coordenadas de "
"la pantalla) y más. Los objetos de NVDA también contienen métodos útiles "
"para su manipulación, tales como cambiar el valor del objeto, reaccionar a "
"los eventos para el objeto (recepción del foco, el valor ha cambiado, etc) y "
"demás."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:491
msgid ""
"In many situations, an NVDA object may belong to a class of related objects. "
"For each object class, NVDA provides ways of handling it. These classes "
"include IAccessible, JAB, UIA and so forth. These classes and behaviors for "
"each class of objects is defined in NVDAObjects directory in the NVDA source "
"code, and to use them in your add-on, import the appropriate object class "
"handler for the object you're using (e.g. if you're working with an "
"IAccessible object, import NVDAObjects.IAccessible.)."
msgstr ""
"En muchas situaciones, un objeto NVDA puede pertenecer a una clase de "
"objetos relacionados. Para cada una de las clases de objetos, NVDA "
"proporciona formas de manipularlos. Estas clases incluyen IAccessible, JAB, "
"UIA y así. Estas clases y comportamientos para cada clase de objetos se "
"definen en el directorio NVDAObjects en el código fuente de NVDA, y para "
"utilizarlos en tu complemento, importa el controlador de clase de objeto "
"adecuado para el objeto que estás utilizando(por ejemplo si estás trabajando "
"con un objeto IAccessible, importa NVDAObjects.IAccessible.)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:492
msgid ""
"Two of these object classes merit special mention: virtual buffers and tree "
"interceptors. A tree interceptor allows NVDA to work with a \"tree\" of "
"objects as though they are just one object. A special case of tree "
"interceptor is virtual buffer, which allows NVDA to work with complex "
"documents such as PDF documents. These objects contain a special mechanism "
"to determine whether a given keyboard command will be passed to the "
"application or handled by NVDA (for instance, browse mode where first letter "
"navigation is used to move between elements)."
msgstr ""
"Dos de estas clases de objetos merecen especial mención: los modos virtuales "
"y los interceptores de árbol. Un interceptor de árbol permite a NVDA "
"funcionar con un \"árbol\" de objetos como si fuesen sólo un objeto. un caso "
"especial de interceptor de árbol es el modo virtual, que permite a NVDA "
"trabajar con documentos complejos, como documentos PDF. Estos objetos "
"contienen un mecanismo especial para determinar si una orden de teclado dada "
"será pasada a la aplicación o manejada por NVDA (por ejemplo, el modo de "
"exploración donde se usa la primera letra de navegación para moverse entre "
"elementos)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:493
msgid "### Examining object hierarchy"
msgstr "### Examinando la jerarquía de objetos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:494
msgid ""
"There are a number of ways which you can use to see the hierarchy of an "
"object for a given program:"
msgstr ""
"Hay varias alternativas que puedes utilizar para ver la jerarquía de un "
"objeto de un determinado programa:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:495
msgid ""
"1. Using object navigation commands (NVDA+Numpad 2/4/5/6/8) with simple "
"review mode turned off."
msgstr ""
"1. utilizando las órdenes de navegación de objetos(NVDA+2/4/5/6/8 del "
"teclado numérico) con el modo simple de revisión desactivado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:496
msgid ""
"2. Using [Python Console], use obj.next/previous/parent/firstChild/lastChild "
"attributes. If you want to see all available properties, from Python "
"Console, type dir(obj)."
msgstr ""
"2. Utilizando la [consola Python], usa los atributos obj.next/previous/"
"parent/firstChild/lastChild. Si quieres ver todas las propiedades "
"disponibles, desde la consola Python , escribe dir(obj)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:497
msgid ""
"If you wish to see a more detailed description about the navigator object, "
"while the navigator object is located at the object you're interested in, "
"press NVDA+F1 to launch log viewer and examine the developer info shown. The "
"root of all objects in Windows is the desktop, or shell object."
msgstr ""
"Si deseas ver una descripción más detallada sobre el navegador de objetos, "
"mientras que el navegador de objetos se encuentre en el objeto en que estés "
"interesado, pulsa NVDA+F1 para lanzar el visualizador del registro. La raíz "
"de todos los objetos de Windows es el escritorio, objeto shell."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:498
msgid "### Focus vs. navigator object"
msgstr "### Foco vs. navegador de objetos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:499
msgid ""
"In your add-on, you might wish to work with various objects and manipulate "
"them. These may include changing the focused object, synchronizing navigator "
"and focus objects, changing the role of an object and so on."
msgstr ""
"En tu complemento, podrías querer trabajar con varios objetos y "
"manipularlos. Esto puede incluír cambiar el objeto enfocado, sincronizar el "
"navegador de objetos y el foco, cambiar la función de un objeto y así "
"sucesivamente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:500
msgid ""
"A focus object is the currently focused control. These are linked to "
"keyboard focus - that is, it follows the highlighted control. In contrast, a "
"navigator object is the object you're interested in. Since navigator objects "
"can move anywhere, you can examine two objects at once: the focused object "
"and the navigator object. For instance, you might be focused on an edit "
"field while examining the title bar as the navigator object. We already saw "
"an example above where we can check if we're on two different apps by "
"checking for app modules for focus versus navigator object."
msgstr ""
"Un objeto en el foco es el control enfocado actualmente. Este está "
"relacionado con el foco del teclado- es decir, sigue al control resaltado. "
"En contraste, un navegador de objetos es el objeto de tu interés. Dado que "
"el navegador de objetos se puede mover en cualquier lugar, puedes examinar "
"dos objetos a la vez: el objeto enfocado y el navegador de objetos. Por "
"ejemplo, podrías enfocar sobre un campo de edición mientras examinas la "
"barra de título con el navegador de objetos. Ya hemos visto un ejemplo más "
"arriba donde podemos comprobar si estamos en dos aplicaciones diferentes "
"mirando los módulos de aplicación del navegador de objetos y del objeto con "
"el foco."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:501
msgid ""
"In your add-on, to fetch the object with focus, write `someObj = api."
"getFocusObject()`. The someObj can be named differently - the convention is "
"to use the name \"obj\". To fetch the navigator object (which might be "
"different from the focused object), use `obj = api.getNavigatorObject()`."
msgstr ""
"En tu complemento, para obtener el objeto con el foco, escribe `someObj = "
"api.getFocusObject()`. el someObj puede ser llamado de forma diferente- la "
"convención es utilizar el nombre \"obj\". Para obtener el navegador de "
"objetos (que podría ser diferente del del objeto enfocado), utiliza `obj = "
"api.getNavigatorObject()`."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:502
msgid "### Other useful object-related goodies"
msgstr "### Otras golosinas útiles relacionadas con objetos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:503
msgid ""
"Here are some other methods which work with NVDA objects, all located in api."
"py module:"
msgstr ""
"Aquí van algunos otros métodos que funcionan con objetos de NVDA, todos "
"ubicados en el módulo api.py:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:504
msgid ""
"* If you wish to obtain the foreground object (useful if you wish to look at "
"some child object of the foreground window), use `obj = api."
"getForegroundObject()`. The name of the foreground object, usually the top-"
"level window of an application is treated as a title by NVDA and can be "
"obtained by pressing NVDA+T."
msgstr ""
"* Si deseas obtener el objeto en primer plano (útil si se desea ver algún "
"objeto secundario de la ventana en primer plano), utiliza `obj = api."
"getForegroundObject()`."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:505
msgid ""
"* From [Python Console], to see the number of child objects that an object "
"contains (for instance, the children, or widgets of a foreground window), "
"type `obj.childCount`. The value 0 means that there are no more child "
"objects."
msgstr ""
"* Desde la [consola Python], para ver el número de objetos secundarios que "
"contiene un objeto (por ejemplo, el hijo,  o los widgets de una ventana en "
"primer plano), teclea `obj.childCount`. El valor0 significa que no hay más "
"objetos secundarios."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:506
msgid ""
"* To set some object as the new focus or navigator object, use `api."
"setFocusObject(obj)` or `api.setNavigatorObject(obj)`. These do not change "
"what Windows views as focused object, as these change what NVDA thinks is "
"the focus and navigator object."
msgstr ""
"* Para definir un objeto como el foco nuevo o el navegador de objetos, "
"utiliza `api.setFocusObject(obj)` o `api.setNavigatorObject(obj)`. Esto no "
"cambia la forma que tiene Windows de ver el objeto enfocado, simplemente "
"hace creer a NVDA que el nuevo objeto es el que tiene el foco o el navegador "
"de objetos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:507
msgid ""
"* You can fetch various properties of an object by specifying obj.property "
"where property is the attribute you wish to see (e.g. obj.value). Common "
"properties include name, value, states, role, app module, window class name "
"and so on."
msgstr ""
"* Puedes obtener varias propiedades de un objeto especificando obj.property "
"donde property es el atributo que deseas ver (por ejemplo obj.value). Entre "
"las propiedades más comunes se incluyen name, value, states, role, "
"appModule, windowClassName, etc."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:508
msgid "### Example 1: Finding the value of a slider in a program"
msgstr "### Ejemplo 1: encontrar el valor de un deslizador en un programa"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:509
msgid ""
"Suppose you are asked by a user to give him the value of a slider in a "
"program using an app module. After looking at the object hierarchy and other "
"properties, you know that the toolbar is the last child of the foreground "
"object."
msgstr ""
"Supongamos que un usuario te pide que le des el valor de un deslizador en un "
"programa usando un app module. Después de buscar en la jerarquía de objetos "
"y otras propiedades, sabes que la barra de herramientas es el último hijo "
"del objeto en primer plano."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:510
msgid "Here is the code to implement this feature:"
msgstr "Aquí está el código para implementar esta función:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:512
msgid "# Object example 1"
msgstr "# Ejemplo de objeto 1"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:516
msgid "\tsliderChildIndex = -1 # The variable to store the child index."
msgstr ""
"\tsliderChildIndex = -1 # La variable para almacenar el índice del hijo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:517
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:525
msgid "\tdef getSliderValue(self):"
msgstr "\tdef getSliderValue(self):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:518
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:527
msgid "\t\tfg = api.getForegroundObject()"
msgstr "\t\tfg = api.getForegroundObject()"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:519
msgid "\t\tsliderVal = fg.children[self.sliderChildIndex].value"
msgstr "\t\tsliderVal = fg.children[self.sliderChildIndex].value"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:520
msgid "\t\treturn sliderVal"
msgstr "\t\treturn sliderVal"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:522
msgid ""
"In this code, the method `fg.children[index]` is used to retrieve the child "
"with the given index (here, since we said the toolbar is the last child, the "
"index would be minus 1, or the very last child; we could have used fg."
"lastChild). Alternatively, you can use `fg.getChild(-1) in certain "
"situations (IAccessible, for example).)"
msgstr ""
"En este código, el método `fg.children[index]` se utiliza para recuperar al "
"hijo con el índice dado (aquí, ya dijimos que la barra de herramientas es el "
"último hijo, el índice sería menos 1, o el último hijo; podríamos haber "
"utilizado fg.lastChild). Alternativamente, puedes utilizar `fg.getChild (-1) "
"en ciertas situaciones (IAccesible, por ejemplo)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:523
msgid ""
"However, this code has an issue: what if the slider value is actually within "
"the first child of the actual slider control? One way to fix this is to "
"check the object's role. The modified code looks like this:"
msgstr ""
"Sin embargo, este código tiene un problema: ¿y si el valor del deslizador "
"está en realidad dentro del primer elemento secundario del control "
"deslizador real? Una forma de solucionar este problema es comprobar el rol "
"del objeto. El código modificado quedaría así:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:526
#, fuzzy
#| msgid ""
#| "\t\tfrom controlTypes import ROLE_SLIDER # It is possible to import from "
#| "within a method."
msgid ""
"\t\tfrom controlTypes import Role # It is possible to import from within a "
"method."
msgstr ""
"\t\tfrom controlTypes import ROLE_SLIDER # es posible importar desde dentro "
"de un método."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:528
msgid "\t\tslider = fg.lastChild"
msgstr "\t\tslider = fg.lastChild"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:529
#, fuzzy
#| msgid "\t\tif slider.role == ROLE_SLIDER: return slider.firstChild.value"
msgid "\t\tif slider.role == Role.SLIDER: return slider.firstChild.value"
msgstr "\t\tif slider.role == ROLE_SLIDER: return slider.firstChild.value"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:531
msgid ""
"Thus, when we know for sure that we're dealing with the slider, the method "
"returns the value of the slider's first child (if that is the case). Note "
"the two equals signs for equality, as opposed to just one equals sign for "
"assignment."
msgstr ""
"Así, cuando estemos seguros de que estamos tratando con el control "
"deslizador, el método devuelve el valor del primer hijo del deslizador (Si "
"ese es el caso). Presta atención a los dos signos de igual para la "
"comparación de igualdad, en lugar de sólo uno que es el signo igual para la "
"asignación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:532
msgid ""
"There are other examples you can try to familiarize yourself with object "
"navigation and manipulation:"
msgstr ""
"Hay otros ejemplos que puedes probar para familiarizarte con la navegación y "
"manipulación de objetos:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:533
msgid ""
"* Obtaining the name of an object that is located somewhere else in the "
"program."
msgstr ""
"* Obtener el nombre de un objeto que se encuentre en otro lugar en el "
"programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:534
msgid "* Moving the navigator to the foreground object."
msgstr "* Mover el navegador de objetos al objeto en primer plano."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:535
msgid "* Setting focus to another program."
msgstr "* Poner el foco en otro programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:536
msgid "* Locating the first status bar in a program with multiple status bars."
msgstr ""
"* Localizar la primera barra de estado en un programa con varias barras de "
"estado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:537
msgid ""
"For real-life examples on objects in NVDA, consult the NVDA source code or "
"source codes of various community add-ons."
msgstr ""
"Para ver ejemplos de la vida real sobre los objetos de NVDA, consulta el "
"código fuente de NVDA o los códigos fuente de diversos complementos de la "
"comunidad."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:538
msgid "### Specialist objects and overriding object properties at runtime"
msgstr ""
"### Objetos Especiales y redefinición de las propiedades de objetos en "
"tiempo de ejecución"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:539
msgid ""
"Sometimes, it is not enough to work with default behavior for a control. For "
"example, some parts of a program may need custom gestures, or one may need "
"to change the role of a window to that of a button."
msgstr ""
"A veces, no es suficiente con trabajar con el comportamiento predeterminado "
"de un control. Por ejemplo, algunas partes de un programa pueden necesitar "
"gestos personalizados, o puede que uno tenga que cambiar el rol de una "
"ventana a la de un botón."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:540
msgid ""
"NVDA provides two methods for creating or manipulating specialist, or "
"overlay objects (or classes), each suited for different needs:"
msgstr ""
"NVDA proporciona dos métodos para crear objetos especiales o superpuestos (o "
"clases), cada uno adaptado para diferentes necesidades:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:541
#, fuzzy
#| msgid ""
#| "* `event_NVDAObject_init(self, object we're dealing with)`: If you wish "
#| "to override certain attributes of a control such as its role or label "
#| "(name), you can use this method to ask NVDA to take your \"input\" into "
#| "account when meeting objects for the first time (or initialized). For "
#| "instance, if the control has the window class name of TForm (seen on many "
#| "Delphi applications), you can ask NVDA to treat this control as a "
#| "standard window by assigning obj.role = ROLE_WINDOW (see control types "
#| "dictionary for list of available roles)."
msgid ""
"* `event_NVDAObject_init(self, object we're dealing with)`: If you wish to "
"override certain attributes of a control such as its role or label (name), "
"you can use this method to ask NVDA to take your \"input\" into account when "
"meeting objects for the first time (or initialized). For instance, if the "
"control has the window class name of TForm (seen on many Delphi "
"applications), you can ask NVDA to treat this control as a standard window "
"by assigning obj.role = controlTypes.Role.WINDOW (see control types module "
"for list of available roles)."
msgstr ""
"* `event_NVDAObject_init(self, objeto con el que trabajamos)`: Si deseas "
"sobreescribir ciertos atributos de un control, como su rol o la "
"etiqueta(nombre), puedes utilizar este método para pedirle a NVDA que tome "
"en cuenta tu\"entrada\" cuando se encuentran los objetos por primera vez (o "
"inicializados). Por ejemplo, si el control tiene el nombre de clase de "
"ventana TForm (visto en muchas aplicaciones Delphi), puedes pedir a NVDA que "
"trate a este control como una ventana estándar asignando obj.role = "
"ROLE_WINDOW (ver diccionario tipos de control para lista de roles "
"disponibles)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:542
msgid ""
"* `chooseNVDAObjectOverlayClasses(self, object, list of classes)`: This "
"allows NVDA to use your own logic when dealing with certain objects. For "
"example, this is useful if you wish to assign custom gestures for certain "
"parts of a program in your app module (in fact, many app modules define "
"objects to deal with certain parts of a program, then uses "
"chooseNVDAObjectOverlayClasses to select the correct object when certain "
"conditions are met). These custom objects must be based on a solid object "
"that we wish to deal with (mostly IAccessible is enough, thus most overlay "
"objects inherit from, or is the child or specialist class of IAccessible "
"objects). In certain situations, you can use this method to drop a property "
"from an object, such as telling NVDA to not treat this object as a progress "
"bar by removing progress bar behavior from this object."
msgstr ""
"* `chooseNVDAObjectOverlayClasses(self, object, lista de clases)`: Esto "
"permite a NVDA que utilices tu propia lógica al tratar con ciertos objetos. "
"Por ejemplo, esto es útil si deseas asignar gestos personalizados para "
"determinadas partes de un programa en tu módulo de aplicación (De hecho, "
"muchos módulos de aplicación crean objetos para tratar con determinadas "
"partes de un programa, luego usan chooseNVDAObjectOverlayClasses para "
"seleccionar el objeto correcto cuando se cumplan ciertas condiciones). Estos "
"objetos personalizados se deben basar en un objeto sólido con el que "
"deseamos trabajar (la mayoría de las veces IAccessible es suficiente, por lo "
"tanto los demás objetos superppuestos heredan de, o son los hijos o clases "
"especializadas de los objetos IAccessible). En ciertas situaciones, puedes "
"deshacerte de una propiedad de un objeto usando este método, por ejemplo "
"diciendo a NVDA que no trate a una barra de progreso como tal, eliminando el "
"comportamiento de barra de progreso del objeto en cuestión."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:543
msgid ""
"Note that in case of the second method, the class(s) with the given name "
"must be present in the file, which is/are inherited from a known base object "
"(in Python, the syntax for the inheritance is `childClass(baseClass)`, and "
"is usually read as, \"this child class inherits from this base class\". "
"We'll see code like this later)."
msgstr ""
"Ten en cuenta que en el caso del segundo método, la clase(s) con el nombre "
"dado debe estar presente en el fichero, que es/son heredados de un objeto "
"base conocido (en Python, la sintaxis para la herencia es "
"`claseHija(claseBase)`, y es por lo general leída como, \"esta clase hija "
"hereda de esta clase base\". Veremos un código como éste más tarde)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:544
msgid "### Examples of overlay classes and modified roles"
msgstr "### Ejemplos de sobreescritura de clases y de modificación de roles"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:545
msgid ""
"Below examples illustrate the uses of the two overlay and attribute "
"modification methods we've discussed above:"
msgstr ""
"A continuación los ejemplos que ilustran el uso de los dos métodos de "
"modificación de sobreescritura y de atributos que hemos comentado "
"anteriormente:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:546
msgid "An example of the first case: modifying an attribute."
msgstr "Un ejemplo del primer caso: la modificación de un atributo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:548
msgid "\t# Reassign some Delphi forms as window."
msgstr "\t# Reasignar algunos formularios Delphi como ventana."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:549
#, fuzzy
#| msgid "import tones"
msgid "\timport controlTypes"
msgstr "import tones"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:550
msgid "\tdef event_NVDAObject_init(self, obj):"
msgstr "\tdef event_NVDAObject_init(self, obj):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:551
#, fuzzy
#| msgid "\t\tif obj.windowClassName == \"TForm\": obj.role = ROLE_WINDOW"
msgid ""
"\t\tif obj.windowClassName == \"TForm\": obj.role = controlTypes.Role.WINDOW"
msgstr "\t\tif obj.windowClassName == \"TForm\": obj.role = ROLE_WINDOW"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:553
msgid ""
"This means that whenever we encounter a window with the class name of \"TForm"
"\", NVDA will treat this as a normal window."
msgstr ""
"Esto significa que cada vez que nos encontremos con una ventana con la clase "
"llamada \"TForm\", NVDA la tratará como una ventana normal."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:554
msgid ""
"Example 2 deals with an app module which has two objects for dealing with "
"specific parts of a program, then uses chooseNVDAObjectOverlayClasses to "
"assign the logic for each control."
msgstr ""
"El ejemplo 2 trata de un módulo de aplicación que tiene dos objetos para "
"tratar con partes específicas de un programa, luego usa "
"chooseNVDAObjectOverlayClasses para asignar la lógica para cada control."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:556
msgid "#An example of overlay classes"
msgstr "#Un ejemplo de superposición de clases"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:557
msgid "class enhancedEdit(IAccessible):"
msgstr "class enhancedEdit(IAccessible):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:558
msgid "\t# Some code to be run when window class name is MyEdit."
msgstr ""
"\t# Algún código para ejecutarse cuando el nombre de la clase de la ventana "
"es MyEdit."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:559
msgid "class MainWindow(IAccessible):"
msgstr "class MainWindow(IAccessible):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:560
msgid ""
"\t# Another code, this time adding custom gestures for main window of the "
"program."
msgstr ""
"\t# Otro código, esta vez añadiendo gestos personalizados para la ventana "
"principal del programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:561
msgid "# In the app module:"
msgstr "# En el módulo de aplicación:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:562
msgid "def chooseNVDAObjectOverlayClasses(self, obj, clsList):"
msgstr "def chooseNVDAObjectOverlayClasses(self, obj, clsList):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:563
msgid "\tif obj.windowClassName == \"myEdit\": clsList.insert(0, enhancedEdit)"
msgstr ""
"\tif obj.windowClassName == \"myEdit\": clsList.insert(0, enhancedEdit)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:564
msgid ""
"\telif obj.windowClassName == \"TWindow\": clsList.insert(0, mainWindow)"
msgstr ""
"\telif obj.windowClassName == \"TWindow\": clsList.insert(0, mainWindow)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:566
msgid ""
"In both cases, the object that we wish to check must be inserted as the "
"first element of the clsList. The effect is that these custom objects will "
"take precedence when looking up gestures or code (behavior) for the object, "
"and in the developer info, these custom objects will come first when MRO "
"(Method Resolution Order) for the navigator object is displayed."
msgstr ""
"En ambos casos, el objeto que se desea comprobar debe insertarse como el "
"primer elemento de la clsList. El efecto es que estos objetos personalizados "
"tendrán prioridad cuando se estén buscando gestos o código (comportamiento) "
"para el objeto, y en la información del desarrollador, estos objetos "
"personalizados vendrán por primera vez cuando el MRO (orden de Métodos de "
"Resolución) muestre el navegador de objetos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:567
msgid ""
"Note: You may need to tune these two methods to provide correct overlay "
"classes for very specific controls (such as checking names, specific roles, "
"etc.), otherwise you may find that two or more identical-looking controls "
"are assigned to your custom object when in fact they are very different. "
"Also, the event_NVDAObject_init is only available in app modules."
msgstr ""
"Nota: es posible que tengas que afinar estos dos métodos para proporcionar "
"clases de superposición correctas para controles muy específicos (tales como "
"comprobación de nombres, roles específicos, etc.); de lo contrario, es "
"posible que descubras que se asignan dos o más controles de apariencia "
"idéntica a tu objeto personalizado cuando en realidad son muy diferentes. "
"Además, el event_NVDAObject_init sólo está disponible en módulos de "
"aplicación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:568
msgid "### Input and output: scripts and UI messages"
msgstr "### Entrada y salida: scripts y mensajes IU"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:569
msgid ""
"Another crucial component of add-ons is handling commands from users and "
"displaying what the add-on is doing. These are done via scripts (input) and "
"UI messages (output)."
msgstr ""
"Otro  componente crucial de los complementos es manejar órdenes del usuario "
"y mostrar qué está haciendo el complemento. Esto se realiza a través de "
"scripts (en la entrada) y  mensajes IU (en la salida)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:570
msgid ""
"A script is a method run when the user performs certain commands. For "
"example, when you press NVDA+T, NVDA runs a script in global commands module "
"called SayTitle. In Poedit, for instance, when a translator presses Control"
"+Shift+A, NVDA will read translator comments added by the programmer to help "
"clarify a given translatable string. This command is not a native NVDA "
"command, but it is defined in the Poedit app module to perform this function."
msgstr ""
"Un script es un método que se ejecuta cuando el usuario lleva a cabo ciertas "
"órdenes. Por ejemplo, cuando pulsas NVDA+T, NVDA ejecuta un script en el "
"módulo de órdenes globales llamado SayTitle. En Poedit, por ejemplo, cuando "
"un traductor pulsa Control+Shift+A, NVDA leerá los comentarios para el "
"traductor añadidos por el programador para ayudar a clarificar una cadena "
"traducible dada. Esta orden no es una orden nativa de NVDA, pero se definió "
"en el módulo de aplicación de Poedit para llevar a cabo esta función."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:571
msgid ""
"Typically, an add-on which accepts scripts will have a list of command:"
"function mapped somewhere in the module. The simplest is a gestures "
"(commands) dictionary, a python dictionary (typically named __gestures) "
"which holds commands as keys and scripts as values for these keys (more than "
"one key, or command can be bound to scripts). Alternatively, information "
"about each script such as its description and bound gestures can be "
"specified through script decorator. These dictionaries are loaded when add-"
"on loads and is cleared when either NVDA exits or the app for the app module "
"loses focus (that is, the user has switched to another program)."
msgstr ""
"Normalmente, un complemento  que acepte scripts tendrá un mapa de lista "
"orden:función en algún lugar en el módulo. El más simple es un diccionario "
"de Gestos (órdenes), un diccionario python (llamado normalmente __gestures) "
"que posee órdenes como claves y scripts como valores para estas claves (más "
"de una tecla, u orden que puede vincularse a los scripts). De forma "
"alternativa, la información de cada script, como su descripción o gestos "
"asociados, se puede especificar mediante el decorador script. Estos "
"diccionarios se cargan cuando el complemento se carga y se borran cuando se "
"sale de NVDA o cuando la aplicación para la que es el módulo de aplicación "
"pierde el foco(es decir, el usuario ha cambiado a otro programa)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:572
msgid ""
"Another way to bind scripts is via runtime insertion. This is done by "
"creating another gestures dictionary apart from __gestures dictionary which "
"holds context-sensitive gestures such as manipulating a single control. Then "
"the developer would use inputCore.bindGesture (or inputCore.bindGestures if "
"more than one gestures/scripts are defined) to define certain gestures for a "
"time, then using inputCore.clearGestures then inputCore."
"bindGestures(__gestures) to remove the added gestures. A more elegant way, "
"which involves scripts for specific objects, will be covered when we talk "
"about app modules and assigning gestures to specific parts of a program."
msgstr ""
"Otro modo de enlazar scripts es a través de inserción en tiempo de "
"ejecución. Esto se hace creando otro diccionario de gestos diferente del "
"diccionario __gestures que posea gestos sensibles al contexto tales como la "
"manipulación de un sólo control. Entonces el desarrollador podría utilizar "
"inputCore.bindGesture (o inputCore.bindGestures si se ha definido más de un "
"gesto/script) para definir ciertos gestos a la vez, entonces utilizar "
"inputCore.clearGestures luego inputCore.bindGestures(__gestures) para "
"eliminar los gestos añadidos. Un modo más elegante, que consiste en scripts "
"para objetos específicos, se tratará cuando hablemos sobre módulos de "
"aplicación y cómo asignar gestos a partes específicas de un programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:573
msgid ""
"For most scripts, you don't have to worry about sending the command to the "
"application. However, in case the script performs additional tasks while "
"sending the key to the active application, you can use `gesture.send()` to "
"send the command first before performing additional work."
msgstr ""
"Para la mayoría de los scripts, no tienes que preocuparte por enviar el "
"comando a la aplicación. Sin embargo, en caso de que el script realice "
"tareas adicionales mientras envía la tecla a la aplicación activa, puedes "
"utilizar `gesture.send()` para enviar el comando primero antes de realizar "
"trabajo adicional."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:574
msgid ""
"In a similar manner to scripts, the UI module allows you to say or braille "
"what your add-on is doing. This is done by using `ui.message(something to "
"say)` where `something to say` is replaced by a string for NVDA to say. "
"Alternatively, you can call speech and braille handler methods directly if "
"you want speech to say one thing and the braille display to show something "
"else. We'll not go over `ui.message` here (you'll see examples of those), "
"but what's more important is scripts, so we'll focus on that in this section."
msgstr ""
"De manera similar a los scripts, el módulo UI permite verbalizar o "
"braillificar lo que tu complemento está haciendo. Esto se hace usando el "
"mensaje `ui.message(algo que decir)` donde `algo que decir` se reemplaza por "
"una cadena para que NVDA la diga. Alternativamente, puedes llamar a los "
"métodos de manejo del habla y del braille directamente si deseas que el "
"habla diga una cosa y la pantalla braille muestre otra. No repasaremos `ui."
"message' aquí (verás ejemplos de esos), pero lo más importante son los "
"scripts, así que nos enfocaremos en eso en esta sección."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:575
msgid ""
"As of time of writing, NVDA supports input from the keyboard, braille "
"displays with or without braille keyboard and touchscreens. These input "
"types have a corresponding gesture prefix (kb for keyboard, br for braille "
"and ts for touchscreen) which identifies the type of gesture. Output can be "
"sent via speech and/or braille."
msgstr ""
"En el momento de escritura de esta guía, NVDA soporta entrada desde el "
"teclado, pantallas braille con o sin teclado braille y pantallas táctiles. "
"Estos tipos de entrada tienen un prefijo de gesto correspondiente (kb para "
"teclado, br para braille y ts para pantalla táctil) que identifica el tipo "
"de gesto. La salida puede enviarse vía voz y/o braille."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:576
msgid "### Example 2: A basic script dictionary and message output"
msgstr "### Ejemplo 2: Un diccionario de scripts básico y un mensaje de salida"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:577
msgid ""
"In this example, we'll define two scripts called \"sayHello\" and say"
"\"GoodBye\", then bind them into two separate gestures."
msgstr ""
"En este ejemplo, definiremos dos scripts llamados \"sayHello\" y \"sayGoodBye"
"\", luego los vincularemos a dos gestos separados."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:579
msgid "\t# An example fragment for script assignment from a global plugin."
msgstr ""
"\t# Un fragmento de ejemplo de asignación de un script desde una extensión "
"global."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:580
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:596
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1087
msgid "\timport ui"
msgstr "\timport ui"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:581
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:602
msgid "\tdef script_sayHello(self, gesture):"
msgstr "\tdef script_sayHello(self, gesture):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:582
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:603
msgid "\t\tui.message(\"Hello!\")"
msgstr "\t\tui.message(\"Hello!\")"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:583
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:608
msgid "\tdef script_sayGoodBye(self, gesture):"
msgstr "\tdef script_sayGoodBye(self, gesture):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:584
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:609
msgid "\t\tui.message(\"Good Bye!\")"
msgstr "\t\tui.message(\"Good Bye!\")"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:586
msgid "\t\t\"kb:control+NVDA+1\":\"sayHello\","
msgstr "\t\t\"kb:control+NVDA+1\":\"sayHello\","

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:587
msgid "\t\t\"kb:Control+NVDA+2\":\"sayGoodBye\""
msgstr "\t\t\"kb:Control+NVDA+2\":\"sayGoodBye\""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:590
msgid ""
"Now when you press Control+NVDA+1, NVDA will say, \"Hello\", and when you "
"press Control+NVDA+2, NVDA will say, \"Good bye.\" This is the basic code on "
"receiving commands and sending messages."
msgstr ""
"Ahora cuando pulses Control+NVDA+1, NVDA dirá, \"Hello\", y cuando pulses "
"Control+NVDA+2, NVDA dirá, \"Good bye.\" Este es el código básico al recibir "
"comandos y enviar mensajes."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:591
msgid "### Example 3: script information using script decorator"
msgstr "### Ejemplo 3: información del script usando el decorador script"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:592
msgid ""
"As we have seen with an example above, script decorator can be used to "
"assign gestures to scripts easily. But script decorator can do more than "
"assign gestures: it can be used to provide additional information such as "
"input help message for a script."
msgstr ""
"Como hemos visto en el ejemplo de más arriba, el decorador script se puede "
"usar para asignar gestos a los scripts fácilmente. Sin embargo, el decorador "
"script puede hacer algo más que asignar gestos: se puede usar para "
"proporcionar información adicional, como el mensaje de ayuda de entrada del "
"script."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:593
msgid ""
"In addition to the modified example 2, the below example will add an input "
"help message for both scripts, along with setting Control+NVDA+3 to make "
"NVDA say \"good bye\"."
msgstr ""
"Además del ejemplo 2 modificado, el ejemplo que se muestra a continuación "
"añadirá un mensaje de ayuda de entrada a ambos scripts, junto con la "
"posibilidad de que NVDA diga \"Adiós\" al pulsar NVDA+control+3."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:595
msgid ""
"\t# An example fragment for script decorator usage from a global plugin."
msgstr ""
"\t# Un fragmento de ejemplo del uso del decorador script en una extensión "
"global."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:597
msgid "\tfrom scriptHandler import script"
msgstr "\tfrom scriptHandler import script"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:598
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:604
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:814
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:997
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1021
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1047
msgid "\t@script("
msgstr "\t@script("

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:599
msgid "\t\tdescription=\"Says Hello\","
msgstr "\t\tdescription=\"Dice hola\","

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:600
msgid "\t\tgesture=\"kb:control+NVDA+1\""
msgstr "\t\tgesture=\"kb:control+NVDA+1\""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:601
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:607
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:817
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1000
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1024
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1050
msgid "\t)"
msgstr "\t)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:605
msgid "\t\tdescription=\"Says good bye\","
msgstr "\t\tdescription=\"Dice adiós\","

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:606
msgid "\t\tgestures=[\"kb:Control+NVDA+2\", \"kb:Control+NVDA+3\"]"
msgstr "\t\tgestures=[\"kb:Control+NVDA+2\", \"kb:Control+NVDA+3\"]"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:611
msgid "#### Script decorator arguments"
msgstr "#### Argumentos del decorador script"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:612
msgid ""
"You can pass in the following information about a script to script decorator:"
msgstr ""
"Puedes pasar la siguiente información al decorador script sobre un script:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:613
msgid ""
"* description: short description about a script. This will be presented in "
"input help mode and in input gestures dialog."
msgstr ""
"* description: descripción corta de un script. Se presentará en el modo "
"Ayuda de entrada y en el diálogo Gestos de entrada."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:614
msgid ""
"* category: the category associated with this script, used to group the "
"script under an appropriate category in input gestures dialog."
msgstr ""
"* category: la categoría asociada con el script, usada para agrupar el "
"script bajo la categoría adecuada en el diálogo Gestos de entrada."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:615
msgid "* gesture: a single gesture bound to the script."
msgstr "* gesture: un único gesto asociado al script."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:616
msgid "* gestures: a list of gestures bound to this script."
msgstr "* gestures: una lista de gestos asociados al script."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:617
msgid "### Example 4: Scripts for specific objects"
msgstr "### Ejemplo 4: Scripts para objetos específicos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:618
msgid ""
"As in specialist objects above, scripts can be assigned to certain objects "
"by specifying gestures dictionary for this particular object. Here is an "
"example from an app module which defines scripts for main window of a media "
"player program, defined using script decorator:"
msgstr ""
"Al igual que en los objetos especializados anteriores, los scripts se pueden "
"asignar a ciertos objetos especificando el diccionario de gestos para este "
"objeto en particular. Aquí hay un ejemplo de un módulo de aplicación que "
"define scripts para la ventana principal de un programa reproductor "
"multimedia, utilizando el decorador script:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:620
msgid "# Scripts for objects for a program."
msgstr "# Scripts para objetos para un programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:621
msgid "from NVDAObjects.IAccessible import IAccessible"
msgstr "from NVDAObjects.IAccessible import IAccessible"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:622
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:811
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:855
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:995
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1019
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1043
msgid "from scriptHandler import script"
msgstr "from scriptHandler import script"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:623
msgid "class Player(IAccessible)"
msgstr "class Player(IAccessible):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:624
msgid "\t@script(gesture=\"kb:NVDA+T\")"
msgstr "\t@script(gesture=\"kb:NVDA+T\")"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:625
msgid "\tdef script_saySongName(self, gesture):"
msgstr "\tdef script_saySongName(self, gesture):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:626
msgid ""
"\t\tui.message(self.songTitle_) #Suppose if that variable has been defined."
msgstr ""
"\t\tui.message(self.songTitle_) #Supongamos que se haya definido esa "
"variable."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:627
msgid "\t# And in the main app module:"
msgstr "\t# Y en el módulo de aplicación principal:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:628
msgid "\tdef chooseNVDAObjectOverlayClasses(self, obj, clsList):"
msgstr "\tdef chooseNVDAObjectOverlayClasses(self, obj, clsList):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:629
msgid ""
"\t\tif obj.windowClassName == \"PlayerWindow\": clsList.insert(0, Player)"
msgstr ""
"\t\tif obj.windowClassName == \"PlayerWindow\": clsList.insert(0, Player)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:631
msgid ""
"There is something odd going on with this example: normally, when you press "
"NVDA+T, NVDA says the title of the current window, but in this example, it "
"announces the name of the song instead. This is the result of script lookup "
"(see below) where the script for the current object is run instead of title "
"script from global commands. This is a common way of binding new scripts at "
"runtime."
msgstr ""
"Algo extraño ocurre con este ejemplo: normalmente, cuando se pulsa NVDA+T, "
"NVDA dice el título de la ventana actual, pero en este ejemplo, anuncia el "
"nombre de la canción. Este es el resultado de la búsqueda del script (ver "
"abajo) donde el script para el objeto actual se ejecuta en lugar del script "
"de título de comandos globales. Esta es una forma común de vincular nuevos "
"scripts en tiempo de ejecución."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:632
msgid "### Script lookup order and command conflicts"
msgstr "### Orden de búsqueda de scripts y conflictos de órdenes"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:633
msgid ""
"As you write add-ons with scripts, you need to remember the following script "
"lookup order when trying to assign commands to scripts:"
msgstr ""
"Según escribas tus complementos con scripts, necesitas recordar el siguiente "
"orden de búsqueda de script cuando intentes asignar órdenes a scripts:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:634
msgid "1. Global plugins."
msgstr "1. Extensiones globales."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:635
msgid "2. App modules for the currently focused program."
msgstr "2. Módulos de aplicación para el programa actualmente enfocado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:636
msgid "3. NVDA objects we're dealing with."
msgstr "3. Objetos de NVDA con los que estemos tratando."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:637
msgid "4. Global commands."
msgstr "4. Órdenes globales."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:638
msgid ""
"For example, if you assign the command NVDA+Shift+Y to an app module script, "
"NVDA will run that script from that program since no global plugin is using "
"this command. However, if a global plugin which uses that command is "
"installed, the script from the global plugin will be run instead of the app "
"module script. Similarly, from the above example, when using programs other "
"than that media player, NVDA will run a command from the global commands "
"collection when NVDA+T is pressed; but as long as we're using this media "
"player, NVDA+T will announce the name of the song (NVDA objects in app "
"modules takes precedence)."
msgstr ""
"Por ejemplo, si asignas la orden NVDA+Shift+Y a un script de módulo de "
"aplicación, NVDA ejecutará ese script desde ese programa ya que ninguna "
"extensión global está usando esta orden. Sin embargo, si se instala una "
"extensión global que use esa orden, el script de la extensión global se "
"ejecutará en lugar del script del módulo de aplicación. Del mismo modo, "
"desde el ejemplo anterior, cuando se utilicen programas distintos a ese "
"reproductor multimedia, NVDA ejecutará una orden desde la colección de "
"órdenes globales cuando se pulse NVDA+T; pero mientras utilicemos este "
"reproductor multimedia, NVDA+T anunciará el nombre de la canción (se da "
"prioridad a los objetos de NVDA en los módulos de aplicación)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:639
msgid ""
"Because of the above rule, one should be careful when defining a script for "
"an add-on. To help you with this, keep the following guidelines handy:"
msgstr ""
"Debido a la regla anterior, se debe tener cuidado al definir un script para "
"un complemento. Para ayudarte con esto, mantén las siguientes directrices a "
"mano:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:640
msgid ""
"1. First, consult the NVDA commands quick reference to see if the command "
"you wish to use has been defined in global commands. You should try to "
"minimize conflicts with built-in NVDA commands. An exception is commands for "
"app modules where same command may be used differently from one program to "
"another."
msgstr ""
"1. En primer lugar, consulta la referencia rápida de órdenes de NVDA para "
"ver si la orden que deseas utilizar se ha definido en las órdenes globales. "
"Deberías tratar de minimizar los conflictos con las órdenes de NVDA "
"incorporadas. Una excepción son las órdenes para los módulos de aplicación, "
"donde una misma orden puede ser utilizada de forma diferente de un programa "
"a otro."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:641
msgid ""
"2. Read the documentation for add-ons (especially global plugins) to see if "
"any add-on is using this command, and if so, contact the add-on author to "
"come up with an alternate binding."
msgstr ""
"2. Lee la documentación de los complementos (especialmente las extensiones "
"globales) para ver si algún complemento está utilizando esta orden y, en "
"caso afirmativo, ponte en contacto con el autor del complemento para obtener "
"un vínculo alternativo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:642
msgid "### A few other remarks on scripts"
msgstr "### Otros comentarios sobre scripts"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:643
msgid ""
"* You can use any modifiers as parts of commands for scripts (for example, "
"Alt+NVDA+letter). However, in order to avoid command conflicts, try "
"minimizing use of commands that programs might use such as Control+letter, "
"Alt+Shift+letter and so on."
msgstr ""
"* Puedes utilizar cualquier modificador como parte de las órdenes para "
"scripts (por ejemplo, Alt+NVDA+letra). Sin embargo, para evitar conflictos "
"de órdenes, intenta reducir al mínimo el uso de órdenes que los programas "
"puedan utilizar como Control+letra, Alt+Shift+letra, etcétera."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:644
msgid ""
"* When assigning keyboard commands, keyboard key labels are case insensitive."
msgstr ""
"* Al asignar órdenes de teclado, las etiquetas de las teclas del teclado no "
"distinguen entre mayúsculas y minúsculas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:645
msgid ""
"* You can define a script category to show the user where your add-on script "
"will be used (shown in Input Gestures dialog in NVDA 2013.3 or later). There "
"are two ways of doing this: module level via `scriptCategory` attribute from "
"the add-on module, or designating the category for each script via either "
"`script_name.category` attribute or as part of script decorator by defining "
"the category argument. It is recommended that you name your script category "
"the same as the add-on name."
msgstr ""
"* Puedes definir una categoría de script para mostrar al usuario dónde se "
"utilizará el script de tu complemento (mostrado en el cuadro de diálogo "
"Gestos de entrada en NVDA 2013.3 o posterior). Hay dos maneras de hacerlo: a "
"nivel de módulo mediante el atributo `scriptCategory` del módulo del "
"complemento, o bien designando la categoría para cada script mediante el "
"atributo `script_name.category` o como parte del decorador script definiendo "
"el argumento category. Se recomienda nombrar la categoría de script del "
"mismo modo que el nombre del complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:646
msgid ""
"* You can define the input help mode message for a script by either using "
"`__doc__` attribute (commonly known as docstrings) or by passing in a short "
"description to description argument of script decorator. Script description "
"is also used in Input Gestures dialog to show the description for a script."
msgstr ""
"* Puedes definir el mensaje del modo de ayuda de entrada para un script "
"utilizando el atributo `__doc__` (comúnmente conocido como docstrings) o "
"pasando una breve descripción al argumento description del decorador script. "
"La descripción del script también se utiliza en el diálogo de Gestos de "
"entrada para mostrar información del mismo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:647
msgid ""
"* If you need to leave one or more scripts unassigned (for example, if a "
"gesture conflicts with a global command), do not include the gesture binding "
"for the script in the gestures dictionary or do not define gesture/gestures "
"argument in script decorator. This helps minimize gesture conflicts and "
"allows users to assign custom gestures for scripts."
msgstr ""
"* Si necesitas dejar uno o más scripts sin asignar (por ejemplo, si un gesto "
"entra en conflicto con una orden global), no incluyas el vínculo del gesto "
"para el script en el diccionario de gestos, o no definas los argumentos "
"gesture o gestures en el decorador script. Esto ayuda a minimizar los "
"conflictos de gestos y permite a los usuarios asignar gestos personalizados "
"para los scripts."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:648
msgid ""
"* If there are two objects, A and B and if B inherits from A and both "
"contain same command for a script, you can assign \"None\" to script name in "
"object B (subclass) to bypass a command when dealing with commands from "
"object B. For example, if F10 is defined for both objects and F10 is not "
"used in object B, you can assign object B's F10 command to \"None\" so F10 "
"can be sent to the operating system. This is implemented in some NVDA core "
"modules and in StationPlaylist Studio add-on."
msgstr ""
"* Si hay dos objetos, A y B, y si B hereda de A y ambos contienen la misma "
"orden para un script, puedes asignar \"None\" al nombre del script en el "
"objeto B (subclase) para evitar una orden cuando se trate de órdenes del "
"objeto B. Por ejemplo, si F10 está definido para ambos objetos y F10 no se "
"utiliza en el objeto B, puedes asignar el comando F10 del objeto B a\"None\" "
"para que F10 pueda enviarse al sistema operativo. Esto se implementa en "
"algunos módulos del núcleo de NVDA y en el complemento StationPlaylist "
"Studio."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:649
msgid "### Events"
msgstr "### Eventos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:650
msgid ""
"You can ask NVDA to do something if something happens. For example, you can "
"ask NVDA to say the new name for an object when it's name changes, or say "
"the new item's value when the item gets focused. These conditions, or "
"actions are called events."
msgstr ""
"Puedes pedirle a NVDA que haga algo si ocurre algo. Por ejemplo, puedes "
"pedirle a NVDA que diga el nuevo nombre de un objeto cuando cambie su "
"nombre, o decir el valor del nuevo elemento cuando se enfoque. Estas "
"condiciones o acciones se denominan eventos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:651
msgid "When an event occurs, NVDA does the following:"
msgstr "Cuando se produce un evento, NVDA hace lo siguiente:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:652
msgid "1. Finds out what the event was (for example, a check box gains focus)."
msgstr ""
"1. Encuentra qué fue el evento (por ejemplo, una casilla de verificación "
"obtiene el foco)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:653
msgid ""
"2. Performs actions for the event (e.g. says the name and the checked state "
"of this check box)."
msgstr ""
"2. Realiza acciones para el evento (por ejemplo, indica el nombre y el "
"estado marcado de esta casilla de verificación)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:654
msgid ""
"3. Passes the event down the chain in case other objects may have actions "
"associated with the event."
msgstr ""
"3. Pasa el evento por la cadena en caso de que otros objetos puedan tener "
"acciones asociadas con el evento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:655
msgid ""
"Depending on where the event is defined, you'll need two or four things when "
"defining an event. If it is declared from the add-on module, the required "
"parts are event name, the add-on module (self), object and next handler in "
"case the object has other events associated with it. If it is defined as "
"part of an object, the name of the event and the object (self) is required."
msgstr ""
"Dependiendo de dónde se defina el evento, necesitarás dos o cuatro cosas al "
"definirlo. Si se declara desde el módulo de un complemento, las partes "
"requeridas son el nombre del evento, el módulo en cuestión (self), el objeto "
"y el siguiente manejador en caso de que el objeto tenga otros eventos "
"asociados. Si se define como parte de un objeto, se requiere el nombre del "
"evento y el objeto (self)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:656
msgid "A typical event routine looks like this:"
msgstr "Una rutina típica de eventos se ve así:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:658
msgid "\tdef event_eventName(self, obj, nextHandler):"
msgstr "\tdef event_eventName(self, obj, nextHandler):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:659
msgid "\t\t# Do some action."
msgstr "\t\t# Hace alguna acción."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:662
msgid "For object events, use:"
msgstr "Para eventos de objeto, usa:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:664
msgid "\tdef event_eventName(self):"
msgstr "\tdef event_eventName(self):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:665
msgid "\t\t# Event routine."
msgstr "\t\t# Rutina de evento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:667
msgid ""
"In fact, we have met an actual \"event\" before: `event_NVDAObject_init`. "
"This is a special event (one of many events defined in NVDA) fired when NVDA "
"meets a new object and initializes it according to your input (see the "
"section on overriding object properties for more information). Let's meet "
"other events you may see while writing your add-on."
msgstr ""
"De hecho, hemos conocido un\"evento\" real antes: `event_NVDAObject-Init`. "
"Se trata de un evento especial (uno de los muchos eventos definidos en NVDA) "
"disparado cuando NVDA se encuentra con un nuevo objeto y lo inicializa de "
"acuerdo con tu entrada (consulta la sección sobre sobreescritura de "
"propiedades de un objeto para obtener más información). Veamos otros eventos "
"que puedes encontrar mientras escribes tu complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:668
msgid "### Example 5: Announcing the changed name of a control"
msgstr "### Ejemplo 5: Anunciar el nombre cambiado de un control"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:669
msgid "The below code came from one of the add-on app modules."
msgstr ""
"El siguiente código procede de uno de los complementos de módulos de "
"aplicación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:670
msgid ""
"Below is a routine for an event which tells you the name of some text on the "
"screen when the text changes."
msgstr ""
"A continuación se muestra una rutina para un evento que le indica el nombre "
"de algún texto en la pantalla cuando el texto cambie."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:673
msgid "\t\tif obj.windowClassName == \"TStaticText\": ui.message(obj.name)"
msgstr "\t\tif obj.windowClassName == \"TStaticText\": ui.message(obj.name)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:676
msgid ""
"As you can see, whenever the text object's name changes, NVDA will announce "
"the new name to the user. The \"name change\" event is one of the many "
"events that you can define custom actions for in your add-on (the complete "
"list is below)."
msgstr ""
"Como puedes ver, siempre que el nombre del objeto de texto cambie, NVDA "
"anunciará el nuevo nombre al usuario. El evento\"cambio de nombre\" es uno "
"de los muchos eventos para los que puedes definir acciones personalizadas en "
"tu complemento (la lista completa va a continuación)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:677
msgid ""
"Note: You can define events for any object of your choice, especially "
"controls in a program (where you can define custom actions for events in "
"your app module). If this is the case, you need to make sure that the "
"control meets certain conditions you set, such as name, role and so forth to "
"let NVDA keep an \"eye\" on that specific object."
msgstr ""
"Nota: puedes definir eventos para cualquier objeto de tu elección, "
"especialmente controles en un programa (donde puedes definir acciones "
"personalizadas para eventos en tu módulo de aplicación). Si este es el caso, "
"debes asegurarte de que el control cumpla ciertas condiciones establecidas, "
"como el nombre, la función, etc., para permitir que NVDA mantenga un\"ojo\" "
"en ese objeto específico."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:678
msgid "### List of possible events"
msgstr "### Lista de posibles eventos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:679
msgid ""
"This is a list of common events you may define custom actions for in your "
"add-on:"
msgstr ""
"Esta es una lista de eventos comunes para los que puedes definir acciones "
"personalizadas en tu complemento:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:680
msgid ""
"* gainFocus: The user has moved the focus to a specific control, or the user "
"has just switched to a program."
msgstr ""
"* gainFocus: el usuario ha movido el foco a un control específico, o el "
"usuario acaba de cambiar a un programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:681
msgid "* loseFocus: Opposite of gainFocus."
msgstr "* loseFocus: el contrario a gainFocus."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:682
msgid ""
"* nameChange: The name of a control has changed (see above for an example)."
msgstr ""
"* nameChange: el nombre de un control ha cambiado (mira arriba para ver un "
"ejemplo)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:683
msgid ""
"* valueChange: The value of the control such as text of a field has changed."
msgstr ""
"* valueChange: El valor del control, como por ejemplo el texto de un campo "
"de texto, ha cambiado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:684
msgid ""
"* stateChange: Useful to keep track of whether check boxes, buttons and "
"other control's state (checked, selected, etc.) has changed."
msgstr ""
"* stateChange: Útil para realizar un seguimiento de si las casillas de "
"verificación, los botones y el estado de otros controles (marcados, "
"seleccionados, etc.) han cambiado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:685
msgid ""
"* foreground: the object we're interested in has become the foreground "
"window of the program."
msgstr ""
"* Foreground: el objeto que nos interesa se ha convertido en la ventana de "
"primer plano del programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:686
msgid "Less common events that are used in specific situations include:"
msgstr ""
"Los eventos menos comunes que se utilizan en situaciones específicas "
"incluyen:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:687
msgid "* typedCharacter: the user has entered something on a keyboard."
msgstr "* typedCharacter: el usuario ha introducido algo en un teclado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:688
msgid ""
"* appModule_gainFocus: user has switched to the app where an app module is "
"defined. Common uses include adding touchscreen commands for specific apps, "
"announcing extra info about the current state of the app and so on."
msgstr ""
"* appModule_gainFocus: el usuario ha cambiado a la aplicación donde se "
"define un módulo de aplicación. Los usos comunes incluyen añadir órdenes de "
"pantalla táctil para aplicaciones específicas, anunciar información "
"adicional sobre el estado actual de la aplicación y así sucesivamente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:689
msgid "* appModule_loseFocus: opposite of appModule_gainFocus."
msgstr "* appModule_loseFocus: el contrario a appModule_gainFocus."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:690
msgid ""
"* descriptionChange: the description for a control provided by the "
"accessibility API has changed."
msgstr ""
"* descriptionChange: la descripción de un control ofrecida por la API de "
"accesibilidad ha cambiado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:691
msgid ""
"* suggestionsOpened: used in controls where one can type something and "
"suggestions will be shown based on entered text. The default implementation "
"in NVDA plays a sound to indicate appearance of suggestions."
msgstr ""
"* suggestionsOpened: se utiliza en los controles donde se puede escribir "
"algo y las sugerencias se mostrarán en base al texto introducido. La "
"implementación predeterminada en NVDA reproduce un sonido para indicar la "
"aparición de sugerencias."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:692
msgid ""
"* suggestionsClosed: opposite of suggestionsOpened. The suggestions events "
"requires NVDA 2017.3 and the object must inherit from `NVDAObjects.behaviors."
"EditableTextWithSuggestions` class."
msgstr ""
"* suggestionsClosed: el contrario a suggestionsOpened. Los eventos de "
"sugerencias requieren NVDA 2017.3 y el objeto debe heredar de la clase "
"`NVDAObjects.behaviors.editableTextWithSuggestions`."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:693
msgid "### Events within objects"
msgstr "### Eventos dentro de objetos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:694
msgid ""
"The above section described event routines from an add-on's perspective. "
"This is just one way of defining events. The other way is to define events "
"from within objects, and is same as above except that it only takes one "
"argument (self)."
msgstr ""
"La sección anterior describía las rutinas de eventos desde la perspectiva de "
"un complemento. Esta es sólo una manera de definir los eventos. La otra "
"manera es definir eventos desde dentro de los objetos, y es la misma que la "
"anterior excepto que sólo toma un argumento (self)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:695
msgid "### Other components"
msgstr "### Otros componentes"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:696
msgid ""
"Besides objects, scripts and events, you can add other components in your "
"add-on for working with specific controls. For example, you can use a "
"textInfo module (such as NVDAObjects.NVDAObjectTextInfo) for working with "
"text and text offsets in edit fields and other controls, or use external "
"modules from third-party developers for specialized tasks such as windows "
"registry access (_winreg) and others. You can also use Python's built-in "
"modules (such as time, functools, etc.) for advanced operations."
msgstr ""
"Además de objetos, scripts y eventos, puedes añadir otros componentes en tu "
"complemento para trabajar con controles específicos. Por ejemplo, puedes "
"utilizar un módulo textInfo (como NVDAObjects.NVDAObjectTextInfo) para "
"trabajar con offsets de texto y texto en campos de edición y otros "
"controles, o utilizar módulos externos de desarrolladores externos para "
"tareas especializadas como el acceso al registro de Windows (_winreg) y "
"otras. También puedes utilizar los módulos integrados de Python (time, "
"functools, etc.) para operaciones avanzadas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:697
msgid ""
"One notable component is text infos, a way to let add-ons gain access to "
"text located on objects. You can access text, move around in it (such as via "
"lines and words), and manipulate portions via marking ranges and offsets. "
"For most add-ons, it isn't required to define custom text infos, as the "
"underlying accessibility API will provide suitable information."
msgstr ""
"Un componente notable es text infos, una forma de permitir que los "
"complementos tengan acceso al texto ubicado en los objetos. Puedes acceder "
"al texto, desplazarte por él (por ejemplo, mediante líneas y palabras) y "
"manipular partes mediante intervalos de marcación y desplazamientos. Para la "
"mayoría de los complementos, no es necesario definir un text info "
"personalizado, ya que la API de accesibilidad subyacente proporcionará la "
"información adecuada."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:698
msgid ""
"Another useful component is mathematical text presentation library "
"(mathPres). This is used to allow NVDA to access math content in places such "
"as web browsers, as well as for add-ons to define custom math presentation "
"layers and ways to access math content in various applications. So far, math "
"content retrieval is done on text marked with MathML with MathPlayer "
"installed."
msgstr ""
"Otro componente útil es la biblioteca de presentación de texto matemático "
"(mathPres). Esto se utiliza para permitir que NVDA acceda al contenido "
"matemático en lugares como navegadores web, así como para que los "
"complementos definan capas personalizadas de presentación matemática y "
"formas de acceder al contenido matemático en varias aplicaciones. Hasta "
"ahora, la recuperación de contenido matemático se hace en texto marcado en "
"MathML con MathPlayer instalado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:699
msgid ""
"If you wish to store settings for your add-on, use ConfigObj or NVDA's built-"
"in configuration manager to store configuration files and settings. "
"ConfigObj defines settings as a collection of dictionaries that can be "
"updated in real time. You can also pass in validation map to allow NVDA's "
"configuration manager (config.conf)to validate settings for your add-on and "
"let add-on settings become profile-specific settings."
msgstr ""
"Si deseas almacenar los ajustes para tu complemento, utiliza ConfigObj o el "
"gestor de configuración integrado de NVDA para almacenar los archivos de "
"configuración y los ajustes. ConfigObj define los ajustes como una colección "
"de diccionarios que se pueden actualizar en tiempo real. También puedes "
"pasar un mapa de validación para permitir al gestor de configuración (config."
"conf) de NVDA validar los ajustes para tu complemento y dejar que los "
"ajustes adicionales se conviertan en ajustes específicos del perfil."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:700
msgid ""
"Finally, you can ask NVDA to perform some routines while the add-on is "
"loading or being terminated. This is done by defining `__init__` and "
"`terminate` method for the add-on. Depending on the plugin type, use:"
msgstr ""
"Finalmente, puedes pedirle a NVDA que realice algunas rutinas mientras el "
"complemento se esté cargando o finalizando. Esto se hace definiendo el "
"método `__init__` y `terminate` para el complemento. Dependiendo del tipo de "
"extensión, utiliza:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:701
msgid "* For global plugin:"
msgstr "* Para extensiones globales:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:702
msgid "  ```python"
msgstr "  ```python"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:703
msgid "\t  def __init__(self):"
msgstr "\t  def __init__(self):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:704
msgid "  \t\t# The routine to do when the global plugin loads."
msgstr "  \t\t# La rutina a hacer cuando la extensión global se cargue."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:705
msgid ""
"  \t\t# Warning! You should always call super method first in order to "
"initialize various foundations correctly."
msgstr ""
"  \t\t# ¡Precaución! siempre deberías llamar al método super primero para "
"inicializar la clase padre correctamente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:706
msgid "  \t\tsuper(GlobalPlugin, self).__init__()"
msgstr "  \t\tsuper(GlobalPlugin, self).__init__()"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:707
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:709
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:713
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:715
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:719
msgid "  ```"
msgstr "  ```"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:708
msgid "* For app modules:"
msgstr "* Para módulos de aplicación:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:710
msgid "  \tdef __init__(self, *args, **kwargs):"
msgstr "  \tdef __init__(self, *args, **kwargs):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:711
msgid "  \t\tsuper(AppModule, self).__init__(*args, **kwargs)"
msgstr "  \t\tsuper(AppModule, self).__init__(*args, **kwargs)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:712
msgid "  \t\t# What NVDA should do when the app module loads."
msgstr ""
"  \t\t# Lo que debería hacer NVDA cuando el módulo de aplicación se cargue."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:714
msgid "* For terminating, regardless of the add-on type:"
msgstr "* Para terminar, independientemente del tipo de complemento:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:716
msgid "  \tdef terminate(self):"
msgstr "  \tdef terminate(self):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:717
msgid "  \t\t# Do something when the add-on terminates."
msgstr "  \t\t# Hacer algo cuando el complemento termine."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:718
msgid ""
"  \t\t# Warning! Never initialize ANY core module such as GUI in terminate "
"method as doing so will prevent NVDA from exiting properly."
msgstr ""
"  \t\t# ¡Precaución! nunca inicializes cualquier módulo del núcleo tal como "
"GUI en el método terminate, ya que al hacerlo evitarás que NVDA salga "
"correctamente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:720
msgid "### Let's build an add-on"
msgstr "### Construyamos un complemento"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:721
msgid ""
"Now that we have a basic overview of components of add-ons, we're ready to "
"build some simple add-ons. But first, let's go over the actual add-on "
"development process, debugging tips, do's and don'ts and other tips."
msgstr ""
"Ahora que tenemos una visión general básica de los componentes de los "
"complementos, estamos listos para crear algunos complementos sencillos. Pero "
"primero, repasemos el proceso real de desarrollo de complementos, consejos "
"de depuración, lo que se debe hacer y lo que no se debe hacer y otras cosas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:722
msgid "### Add-on planning and development tips"
msgstr "### Consejos para planificación y desarrollo de complementos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:723
msgid ""
"Over the years, the NVDA community built a number of powerful add-ons for "
"NVDA users. Over the course of these years, the add-on writers gathered some "
"useful tips when it comes to writing your own add-ons. Here are a number of "
"them:"
msgstr ""
"A lo largo de los años, la comunidad de NVDA ha creado una serie de potentes "
"complementos para los usuarios. Durante estos años, los redactores de "
"complementos recopilaron algunos consejos útiles cuando se trata de escribir "
"sus propios complementos. He aquí algunos de ellos:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:724
msgid ""
"* Get to know NVDA: it is important that you become familiar with NVDA "
"commands, concepts and tips. Subscribe to NVDA users groups to learn more "
"about NVDA and how NVDA works, as you'll be extending it via your add-ons."
msgstr ""
"* Conocer a NVDA: es importante que te familiarices con las órdenes, "
"conceptos y consejos de NVDA. Suscríbete a los grupos de usuarios de NVDA "
"para aprender más sobre NVDA y conocer cómo funciona, ya que lo ampliarás a "
"través de tus complementos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:725
msgid ""
"* Get to know the product at hand: as noted earlier, it is important that "
"you get to know the software you're writing the app module for, synthesizers "
"and braille displays you'll be writing the driver for and so on."
msgstr ""
"* Conocer el producto que tienes a mano: como se mencionó anteriormente, es "
"importante que conozcas el software para el que estás escribiendo el módulo "
"de aplicación, los sintetizadores y las pantallas braille para los que vas a "
"escribir el controlador, etcétera."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:726
msgid ""
"* Plan ahead: if you know you'll be maintaining your add-on for a number of "
"months or years, it is useful to have a plan and write the add-on code to "
"prepare for future extensions. For example, working on features that you "
"need to implement now, dividing parts of a program to objects and so on."
msgstr ""
"* Planificar con anticipación: si sabes que mantendrás tu complemento "
"durante varios meses o años, es útil tener un plan y escribir el código del "
"complemento para prepararte para futuras extensiones. Por ejemplo, "
"trabajando en las características que necesitas implementar ahora, "
"dividiendo partes de un programa en objetos y así sucesivamente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:727
msgid ""
"* Ready to debug and test your add-on: writing your add-on code is just one "
"part of the overall add-on development. The other part is testing and "
"debugging your add-on to make sure that users use your add-on with minimal "
"errors. As you write your add-ons, be sure to test your code regularly."
msgstr ""
"* Listo para depurar y probar tu complemento: escribir tu código de "
"complemento es sólo una parte del desarrollo global del complemento. La otra "
"parte es probar y depurar tu complemento para asegurarte de que los usuarios "
"lo utilizan con errores mínimos. A medida que escribas tus complementos, "
"asegúrate de probar tu código con regularidad."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:728
msgid "* Most importantly, have fun."
msgstr "* Lo más importante, diviértete."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:729
msgid "### Do's and don'ts"
msgstr "### Qué hacer y qué no"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:730
msgid ""
"Here are a few things you should do and not do throughout add-on development:"
msgstr ""
"Éstas son algunas cosas que deberías hacer y no hacer durante el desarrollo "
"de un complemento:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:731
msgid ""
"1. Do talk with users: it is important to remember that your add-ons will be "
"used by NVDA users around the world, so it is important to keep in touch "
"with your users to gather bug reports and suggestions."
msgstr ""
"1. Habla con los usuarios: es importante recordar que tus complementos serán "
"utilizados por los usuarios de NVDA de todo el mundo, por lo que es "
"importante mantenerte en contacto con ellos para recopilar informes de "
"errores y sugerencias."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:732
msgid ""
"2. Do ask for help if needed: If you're stuck, you can ask other add-on "
"writers anytime for solutions or tips, or if you need to, ask for "
"collaboration from other add-on developers."
msgstr ""
"2. Pide ayuda si es necesario: Si estás atascado, puedes pedir ayuda a otros "
"desarrolladores de complementos en cualquier momento para obtener soluciones "
"o consejos, o si lo necesitas, solicita la colaboración de otros "
"desarrolladores de complementos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:733
msgid ""
"3. Do test your add-on on more than one computer: sometimes, a bug in one "
"computer may help you solve problems on your add-on on your computer later."
msgstr ""
"3. Prueba tu complemento en más de un equipo: a veces, un error en un equipo "
"puede ayudarte a resolver problemas en tu complemento en el equipo más "
"adelante."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:734
msgid ""
"4. Don't use fancy code without understanding your intentions: a typo or "
"forgotten indentation can become troublesome when you debug an add-on."
msgstr ""
"4. No utilices código imaginativo sin entender tus intenciones: un error "
"tipográfico o una indentación olvidada puede convertirse en un problema "
"cuando depuras un complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:735
msgid ""
"5. Do keep up to date with NVDA core changes: sometimes, you may find that "
"your add-on might not work due to NVDA core code changes. Be sure to read "
"\"changes for developers\" section in NVDA's What's New document to keep up "
"to date with code changes that may affect your add-on."
msgstr ""
"5. Mantente al día con los cambios básicos de NVDA: a veces, puede que "
"descubras que tu complemento no funcione debido a los cambios en el código "
"del núcleo de NVDA. Asegúrate de leer la sección \"Cambios para "
"desarrolladores\" en el documento Novedades de NVDA para mantenerte al día "
"con los cambios de código que puedan afectar a tu complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:736
msgid "### Frequently Asked Questions about add-on components and development"
msgstr ""
"### Preguntas frecuentes sobre componentes de complementos y desarrollo"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:737
msgid ""
"Q. When I try to obtain an object using an index, it fetches an object one "
"after the index I wrote.  "
msgstr ""
"P. Cuando trato de obtener un objeto usando un índice, éste obtiene uno "
"después del índice que escribí.  "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:738
msgid "This is the side effect of zero-based indexing (count starts at 0)."
msgstr ""
"Este es el efecto colateral de la indexación basada en cero (el recuento "
"comienza en 0)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:739
msgid "Q. When importing a module, NVDA says it cannot locate the module.  "
msgstr ""
"P. Al importar un módulo, NVDA dice que no puede localizar el módulo.  "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:740
msgid ""
"Did you type the correct name of the module? Did you extract the module "
"files in the correct location? Try fixing the typo, look at the import path "
"and try importing again."
msgstr ""
"¿Escribiste el nombre correcto del módulo? ¿Extrajiste los archivos del "
"módulo en la ubicación correcta? Intenta corregir el error tipográfico, "
"observa la ruta de importación y vuelve a intentar importar."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:741
msgid ""
"Q. What is the difference between simple review and normal review and which "
"one should I use?  "
msgstr ""
"P. ¿Cuál es la diferencia entre la revisión simple y la revisión normal y "
"cuál debería usar?  "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:742
msgid ""
"Simple review excludes layout objects such as windows, grouping and so on "
"which are placed for layout purposes. Normal review includes these as well. "
"The choice of using simple review versus normal review depends on your "
"situation."
msgstr ""
"La revisión simple excluye los objetos de diseño como ventanas, "
"agrupaciones, etc. que se colocan para propósitos de diseño. La revisión "
"normal también incluye esto. La elección de usar la revisión simple versus "
"la revisión normal depende de tu situación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:743
msgid ""
"Q. The command for my app module does not work in my app module; instead, "
"NVDA does something else.  "
msgstr ""
"P. La orden para mi app module no funciona en mi app module, sino que NVDA "
"hace otra cosa.  "

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:744
msgid ""
"Check if a global plugin which uses the command is installed. First, disable "
"the global plugin and try again."
msgstr ""
"Comprueba si está instalada una extensión global que utilice la orden. "
"Primero, quita la extensión global e inténtalo de nuevo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:745
msgid "Q. How can I use Win32 API in my add-on or object?"
msgstr "P. ¿Cómo puedo utilizar Win32 API en mi complemento u objeto?"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:746
msgid ""
"There is a document written by an add-on developer which talks about using "
"Win32 API in your add-on. Select [this link][Using Win32 API] to view this "
"document."
msgstr ""
"Existe un documento escrito por un desarrollador de complementos que habla "
"sobre el uso de Win32 API en su complemento. Selecciona [este enlace][Using "
"Win32 API] para ver este documento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:747
msgid "Q. How can I create dialogs in my add-on?"
msgstr "P. ¿Cómo puedo crear diálogos en mi complemento?"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:748
msgid ""
"See the [Interactive Dialogs](#user-content-interactive-dialogs) section."
msgstr "Consulta la sección [Diálogos interactivos](#dialogos-interactivos)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:749
msgid ""
"Q. Can I create functions and assign variables outside the module classes?"
msgstr ""
"P. ¿Puedo crear funciones y asignar variables fuera de las clases de módulo?"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:750
msgid ""
"Yes. This is useful if you need to reference them from inside the add-on "
"class. For example, you may have a function that's defined outside your "
"class that you'll need to use from more than one method in a global plugin "
"class."
msgstr ""
"Sí. Esto es útil si necesitas hacer referencia a ellos desde dentro de la "
"clase del complemento. Por ejemplo, es posible que tengas una función "
"definida fuera de tu clase que necesitarás utilizar desde más de un método "
"en una clase de extensión global."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:751
msgid "Q. I want to save user settings for my add-on. Can this be done?"
msgstr ""
"P. Quiero guardar la configuración de usuario para mi complemento. ¿Se puede "
"hacer esto?"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:752
msgid ""
"Yes. You'll need to use a library that allows persistence, such as ConfigObj "
"library (configObj), JSON, or pickle to manage configuration. Some add-ons "
"(such as OCR) which uses configuration files store their configuration as an "
"ini file in NVDA's user configuration folder. For global plugins, you can "
"load and save user configuration from the add-on when the add-on is created "
"(__init__) or finished (terminate), respectively. You cannot do this easily "
"with app modules. Also, you'll need to provide a facility (commands, "
"dialogs, etc.) where users can configure add-on settings."
msgstr ""
"Sí. Deberás utilizar una biblioteca que permita persistencia, como la "
"biblioteca ConfigObj(configObj), JSON o Pickle para administrar la "
"configuración. Algunos complementos (como OCR) que utilizan archivos de "
"configuración almacenan su configuración como un archivo ini en la carpeta "
"de configuración de usuario de NVDA. En el caso de las extensiones globales, "
"puedes cargar y guardar la configuración de usuario desde el complemento "
"cuando se crea el complemento (__init__) o se finaliza (terminate), "
"respectivamente. Esto no se puede hacer fácilmente con los módulos de "
"aplicación. Además, tendrás que proporcionar una alternativa (órdenes, "
"diálogos, etc.) en la que los usuarios puedan configurar las opciones del "
"complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:753
msgid ""
"Q. I have a script which calls a function that runs for a long time, and I "
"cannot run NVDA commands when my script runs."
msgstr ""
"P. Tengo un script que llama a una función que se ejecuta durante mucho "
"tiempo, y no puedo ejecutar órdenes de NVDA cuando se ejecuta mi script."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:754
msgid ""
"One way to fix this is using threads (separate, independent  operations in a "
"program) via Python's threading module. In order to do this, create a method "
"which you know will run for a long time, then from the script which calls "
"this method, create a new thread (see Python's threading module "
"documentation) that'll be in charge of running this method. This way other "
"NVDA commands can be performed while the add-on method does its work (see "
"Google Speech Recognition module for an example code)."
msgstr ""
"Una forma de solucionar esto es usando hilos (operaciones separadas e "
"independientes en un programa) a través del módulo de hilos de Python. Para "
"ello, crea un método que sepas que se ejecutará durante mucho tiempo y, a "
"partir del script que llama a este método, crea un nuevo hilo (ver la "
"documentación del módulo de hilos de Python) que se encargará de ejecutarlo. "
"De esta forma, se pueden ejecutar otras órdenes de NVDA mientras el método "
"adicional realiza su trabajo (consulta el módulo de reconocimiento de voz de "
"Google para obtener un código de ejemplo)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:755
msgid ""
"Q. I would like to port a module written in Python 2 syntax for use as an "
"NVDA add-on."
msgstr ""
"P. Me gustaría portar un módulo escrito en la sintaxis de Python 2 para "
"utilizarlo como un complemento de NVDA."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:756
msgid ""
"This cannot be done easily. One handy module for this purpose is six, which "
"allows running Python 2 and 3 code. NVDA 2019.3 and later is strictly a "
"Python 3 release."
msgstr ""
"Esto no se puede hacer fácilmente. Un módulo práctico para este propósito es "
"six, que permite ejecutar el código Python 2 y 3. NVDA 2019.3 y las "
"versiones posteriores utilizan estrictamente Python 3."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:757
msgid ""
"Q. My add-on uses GUI facility, and after installing NVDA 2018.3, I get "
"errors related to wxPython."
msgstr ""
"P. Mi complemento usa componentes de interfaz gráfica, y después de instalar "
"NVDA 2018.3, obtengo errores relacionados con WXPython."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:758
msgid ""
"NVDA 2018.3 uses wxPython 4, whereas earlier versions use older wxPython "
"releases. If you want to support older NVDA releases, you need to use "
"conditional statements (if/else) and version checks so the appropriate code "
"path can be used."
msgstr ""
"NVDA 2018.3 usa WXPython 4, mientras que las versiones anteriores usan una "
"versión más antigua de WXPython. Si quieres dar soporte a versiones "
"anteriores de NVDA, debes emplear sentencias condicionales (if/else) y "
"comprobaciones de versión, de tal forma que se elija el camino correcto al "
"ejecutar el código."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:759
msgid ""
"Q. After installing NVDA 2019.1, users say my add-ons are not compatible."
msgstr ""
"P. Tras instalar NVDA 2019.1, los usuarios dicen que mis complementos no son "
"compatibles."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:760
msgid ""
"NVDA 2019.1 introduces add-on compatibility flags (sometimes called "
"compatibility range) that tells NVDA the following information:"
msgstr ""
"NVDA 2019.1 introduce indicadores de compatibilidad (en ocasiones llamados "
"rango de compatibilidad) de complementos que le dan la siguiente información:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:761
msgid ""
"* Minimum NVDA version (minimumNVDAVersion): an add-on can specify minimum "
"NVDA version required for the add-on. This is useful if you need to use "
"features introduced or changed in a given NVDA release without supporting "
"older NVDA releases."
msgstr ""
"* Versión mínima de NVDA (minimumNVDAVersion): un complemento puede "
"especificar la versión mínima de NVDA necesaria para funcionar. Esto viene "
"bien si necesitas utilizar funciones introducidas o modificadas en una "
"versión dada de NVDA sin dar soporte a versiones de NVDA más antiguas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:762
msgid ""
"* Last tested NVDA version (lastTestedNVDAVersion): tells NVDA the highest "
"tested release for the add-on. Without this flag being set, NVDA will treat "
"your add-ons as incompatible with the latest release."
msgstr ""
"* Última versión de NVDA donde se ha probado (lastTestedNVDAVersion): indica "
"a NVDA la versión más alta probada con el complemento. Si no se establece "
"este indicador, NVDA tratará tus complementos como incompatibles con la "
"versión más reciente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:763
msgid ""
"Words in parentheses are manifest keys. Starting in NVDA 2019.1, these "
"compatibility flags are mandatory for all add-ons."
msgstr ""
"Las palabras entre paréntesis son claves de manifest. Con la llegada de NVDA "
"2019.1, estos indicadores de compatibilidad son obligatorios en todos los "
"complementos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:764
msgid ""
"Q. My app module that was stored under appModules folder in user "
"configuration folder isn't working in NVDA 2019.1."
msgstr ""
"P. Mi módulo de aplicación que estaba alojado en la carpeta appModules de la "
"configuración de usuario no funciona en NVDA 2019.1."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:765
msgid ""
"This is because NVDA 2019.1 will not load custom extension code stored in "
"subfolders of user configuration folder anymore. See the section on "
"scratchpad for details."
msgstr ""
"Esto se debe a que NVDA 2019.1 ya no carga código de extensión personalizado "
"situado en carpetas del directorio de configuración de usuario. Lee la "
"sección de scratchpad para más detalles."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:766
msgid ""
"Q. Should I convert gestures dictionary and script docstring attribute to "
"script decorator?"
msgstr ""
"P. ¿Debería sustituir el diccionario de gestos y el atributo docstring de "
"los scripts por el decorador script?"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:767
msgid ""
"It is up to you whether or not you wish to use older gestures dictionary and "
"script docstring or the newer script decorator to define script information. "
"For new add-ons, script decorator is preferred for easily defining script "
"information on the spot."
msgstr ""
"Es decisión tuya utilizar el antiguo diccionario de gestos y el docstring "
"del script o el nuevo decorador script para definir su información. Se "
"recomienda el decorador script para los complementos nuevos, ya que permite "
"definir la información fácilmente sobre el terreno."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:768
msgid "Q. What is the recommended coding style for add-ons?"
msgstr "P. ¿Cuál es el estilo de código recomendado para los complementos?"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:769
msgid ""
"The following is baseline coding style for add-ons, deriving from NVDA "
"screen reader coding style:"
msgstr ""
"El siguiente es el estilo de código para los complementos, que deriva del "
"estilo de código usado en el lector de pantalla NVDA:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:770
msgid "* Use tab for indentation."
msgstr "* Usa tabuladores para la sangría."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:771
msgid "* Use camel case for function and variable names e.g. someFunction."
msgstr ""
"* Usa el estilo camel case para nombres de variable y función. Por ejemplo, "
"unaFunción."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:772
msgid "Q. I noticed that NVDA does not come with all Python libraries."
msgstr ""
"P. Me he dado cuenta de que NVDA no viene con todas las bibliotecas de "
"Python."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:773
msgid ""
"Most notably, NVDA does not ship with asyncio. You must include additional "
"libraries inside your add-on component folder."
msgstr ""
"En particular, NVDA no viene con asyncio. Debes incluir bibliotecas "
"adicionales en la carpeta de componentes de tu complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:774
msgid "Q. I need to manipulate environment variables such as system path."
msgstr ""
"P. Necesito manipular variables de entorno, como las rutas del sistema."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:775
msgid ""
"An effective way to do this is prepending a desired string (such as the path "
"to an executable you need to run) to existing environment variable value. "
"This allows your add-on to work with modified values without breaking NVDA "
"and/or Windows components while NVDA is running."
msgstr ""
"Una forma eficaz de hacerlo es anexar la cadena deseada (tal como la ruta a "
"un ejecutable que necesitas arrancar) al valor existente de la variable de "
"entorno. Esto permite que tu complemento funcione con los valores "
"modificados sin romper NVDA y/o los componentes de Windows mientras NVDA "
"está en ejecución."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:776
msgid ""
"We did not include programming or Python-related FAQ's, as there are sites "
"which answer questions about Python such as coding style. Consult these "
"documents if you have issues with Python code."
msgstr ""
"No incluimos preguntas frecuentes de programación o relacionadas con Python, "
"ya que hay sitios que responden a preguntas sobre Python, tales como las "
"relacionadas con el estilo de codificación. Consulta estos documentos si "
"tienes problemas con el código Python."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:777
msgid ""
"Now that we have covered basic add-on components, let's learn about how to "
"package what you know in your add-on modules themselves: global plugins, app "
"modules, drivers, and enhancers."
msgstr ""
"Ahora que hemos cubierto los componentes básicos de un complemento, vamos a "
"aprender acerca de cómo empaquetar lo que sabes en tus propios módulos de "
"complemento: extensiones globales, módulos de aplicación, controladores y "
"potenciadores."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:778
msgid "## Introduction to global plugins"
msgstr "## Introducción a las extensiones globales"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:779
msgid ""
"A global plugin adds features available everywhere. For example, if there is "
"a control that will be used in many applications, then you can write a "
"global plugin to handle them throughout NVDA. Another example is adding "
"additional features to NVDA that can be used in all programs, such as OCR "
"capability, place marker management and so on."
msgstr ""
"Una extensión global añade características disponibles en todas partes. Por "
"ejemplo, si hay un control que se utilizará en muchas aplicaciones, puedes "
"escribir una extensión global para manejarlas en NVDA. Otro ejemplo es la "
"adición de funciones adicionales a NVDA que se puedan utilizar en todos los "
"programas, como la capacidad de OCR, la gestión de marcadores de ubicación, "
"etc."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:780
msgid ""
"A global plugin is a Python source code (.py) file with the name of your "
"plugin. For example, if you're adding support for rich edit fields in many "
"applications, you can name your plugin as richEditSupport.py. When naming "
"them, try be brief so you can see what your plugin does."
msgstr ""
"Una extensión global es un archivo de código fuente de Python (.py) con el "
"nombre de tu plugin. Por ejemplo, si estás añadiendo soporte para campos de "
"edición enriquecidos en muchas aplicaciones, puedes nombrar la extensión "
"como richEditSupport.py. Cuando los nombres, trata de ser breve para que "
"puedas ver lo que hace tu extensión."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:781
msgid ""
"IMPORTANT: although enhancers may appear to be identical with global plugins "
"(and several enhancers were created as global plugins in the past), they are "
"not the same. See Enhancers section for details."
msgstr ""
"Importante: aunque los potenciadores puedan parecer idénticos a las "
"extensiones globales (y se crearon potenciadores como extensiones globales "
"en el pasado), no son lo mismo. Mira la sección de potenciadores para más "
"detalles."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:782
msgid "### Typical development plan for global plugins"
msgstr "### Plan de desarrollo típico para extensiones globales"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:783
msgid "Typically, a global plugin is developed thus:"
msgstr "Normalmente, una extensión global se desarrolla así:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:784
msgid ""
"1. You or someone suggests a feature or support for a particular control "
"across different programs."
msgstr ""
"1. Tú o alguien sugiere una característica o soporte para un control en "
"particular a través de diferentes programas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:785
msgid ""
"2. You plan your global plugin (see the section on when to write or not "
"write global plugins)."
msgstr ""
"2. Planificas tu extensión global (consulta la sección sobre cuándo escribir "
"o no escribir extensiones globales)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:786
msgid ""
"3. You write your global plugin and test it. Once it is done and tested, you "
"release the plugin."
msgstr ""
"3. escribes tu extensión global y la pruebas. Una vez hecha y probada, "
"liberas la extensión."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:787
msgid ""
"Since global plugins are Python files, you can use the full power of python "
"in your add-on code. Also, since global plugins have access to full power of "
"NVDA code such as events, scripts and objects, you can use the concepts you "
"learned from previous sections."
msgstr ""
"Dado que las extensiones globales son archivos Python, puedes utilizar toda "
"la potencia de python en el código de tu complemento. Además, dado que las "
"extensiones globales tienen acceso a toda la potencia del código NVDA, como "
"eventos, scripts y objetos, puedes utilizar los conceptos aprendidos en las "
"secciones anteriores."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:788
msgid "### The global plugin code"
msgstr "### El código de la extensión global"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:789
msgid ""
"As shown earlier, the procedure for writing global plugins is same as "
"writing any Python program, except that you import globalPluginHandler and "
"put your add-on code in a class called `GlobalPlugin` which inherits from "
"`globalPluginHandler.GlobalPlugin` (see the example in the first intro "
"chapter). If you need to use third-party modules, you need to place the "
"package in the same folder as the global plugin file and import the external "
"module(s). Then define objects (usually overlay objects), methods and so on "
"in your code."
msgstr ""
"Como se ha mostrado anteriormente, el procedimiento para escribir "
"extensiones globales es el mismo que para escribir cualquier programa "
"Python, excepto que importas globalPluginHandler y colocas tu código de "
"complemento en una clase llamada `GlobalPlugin` que hereda de "
"`globalPluginHandler.GlobalPlugin` (consulta el ejemplo en el capítulo "
"introductorio). Si necesitas utilizar módulos de terceros, debes colocar el "
"paquete en la misma carpeta que el archivo de extensión global e importar "
"los módulos externos. A continuación, define los objetos (normalmente "
"objetos de superposición), métodos, etc. en tu código."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:790
msgid "### When to write or not write global plugins"
msgstr "### Cuándo escribir o no escribir extensiones globales"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:791
msgid ""
"Since global plugins are used everywhere, you might be tempted to write "
"support for a single application using global plugin alone. However, this is "
"not the case. There are other guidelines to keep in mind when deciding "
"whether to write a global plugin or not:"
msgstr ""
"Dado que las extensiones globales se utilizan en todas partes, es posible "
"que tengas la tentación de escribir soporte para una sola aplicación "
"utilizando solamente una extensión global. Sin embargo, este no es el caso. "
"Existen otras pautas a tener en cuenta a la hora de decidir si escribir una "
"extensión global o no:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:792
msgid "You might consider writing a global plugin if:"
msgstr "Podrías considerar la posibilidad de escribir una extensión global si:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:793
msgid "1. You or a user wishes to use a certain feature everywhere."
msgstr ""
"1. Tú o un usuario deseais utilizar una cierta característica en todas "
"partes."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:794
msgid ""
"2. You need to support same controls across different applications, provided "
"that the control behaves the same in these programs."
msgstr ""
"2. Necesitas soportar los mismos controles en diferentes aplicaciones, "
"siempre que el control se comporte igual en estos programas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:795
msgid "You should not write a global plugin if:"
msgstr "No deberías escribir una extensión global si:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:796
msgid "1. If you wish to enhance support for a single application."
msgstr "1. Si deseas mejorar el soporte para una sola aplicación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:797
msgid "2. You are writing support for speech synthesizers or braille displays."
msgstr ""
"2. Estás escribiendo soporte para sintetizadores de voz o pantallas braille."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:798
msgid "### A Few more things to remember about global plugins"
msgstr "### Algunas cosas más que recordar sobre las extensiones globales"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:799
msgid ""
"* When you write scripts in your global plugin, the commands you assign to "
"them will take precedence (they are looked up first). Therefore it is "
"important to consult the NVDA user guide and help for other add-ons to "
"minimize command conflicts."
msgstr ""
"* Cuando escribes scripts en tu extensión global, las órdenes que les "
"asignes tendrán prioridad (buscadas primero). Por lo tanto, es importante "
"consultar la guía del usuario de NVDA y la ayuda de otros complementos para "
"minimizar los conflictos de órdenes."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:800
msgid ""
"* Each global plugin must be placed in globalPlugins directory in your add-"
"on folder structure."
msgstr ""
"* Cada extensión global debe estar ubicado en el directorio globalPlugins en "
"la estructura de carpetas del complemento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:801
msgid ""
"* It is possible to use more than one Python file in your global plugin. If "
"this is the case, you need to put them in a folder (name must be the name of "
"the plugin) inside globalPlugins folder, with the main plugin file named "
"__init__.py."
msgstr ""
"* Es posible usar más de un archivo Python en tu extensión global. Si este "
"es el caso, necesitas ponerlos en una carpeta (el nombre debe ser el nombre "
"de la extensión) dentro de la carpeta globalPlugins, con el archivo "
"principal de la extensión llamado __init__.py."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:802
msgid ""
"* If you need to do something when the global plugin is loaded (such as "
"loading the user configuration), you need to write an __init__ method in "
"your plugin class. In this method, you need to call the __init__ method in "
"the super (globalPluginHandler.GlobalPlugin) first before doing other "
"startup work. Also, if you need to do something when the global plugin ends, "
"define terminate method."
msgstr ""
"* Si necesitas hacer algo cuando la extensión global esté cargada (como por "
"ejemplo, cargar la configuración de usuario), debes escribir un método "
"__init__ en tu clase de extensión. En este método, debes llamar primero al "
"método __init__ en super (globalPluginHandler.GlobalPlugin) antes de hacer "
"otro trabajo de inicialización. Además, si necesitas hacer algo cuando la "
"extensión global termine, define el método terminate."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:803
msgid "Let's go through some examples and exercises."
msgstr "Repasemos algunos ejemplos y ejercicios."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:804
msgid "### Example 1: Writing computer braille using QWERTY keyboard"
msgstr ""
"### Ejemplo 1: Escribir braille computerizado utilizando el teclado QWERTY"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:805
msgid ""
"You are meeting with a client who uses Duxbury braille translator (a popular "
"braille document production program). This client is working with another "
"user of NVDA who wishes to write computer braille from his computer keyboard "
"everywhere. Based on this, you decide to write a global plugin, and found a "
"module that allows the computer keyboard to act like a braille keyboard "
"using a function."
msgstr ""
"Te vas a reunir con un cliente que utiliza el traductor braille de Duxbury "
"(un popular programa de producción de documentos braille). Este cliente está "
"trabajando con otro usuario de NVDA que desea escribir braille desde el "
"teclado de su computadora en cualquier lugar. Basado en esto, decides "
"escribir una extensión global, y encontraste un módulo que permite al "
"teclado del ordenador actuar como un teclado braille usando una función."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:806
msgid "The global plugin, named brailleWrite.py, would look like this:"
msgstr "La extensión global, llamada brailleWrite.py, se vería así:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:808
msgid "# An example global plugin."
msgstr "# Un ejemplo de extensión global."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:809
msgid "import qtbrl # The braille entry module."
msgstr "import qtbrl # El módulo de entrada braille."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:813
msgid "\tbrlentry = False # Braille entry is not active."
msgstr "\tbrlentry = False # La entrada braille no está activa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:815
msgid "\t\tdescription=\"Toggles braille entry on or off.\","
msgstr "\t\tdescription=\"Enciende o apaga la entrada Braille.\","

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:816
msgid "\t\tgesture=\"kb:NVDA+X\""
msgstr "\t\tgesture=\"kb:NVDA+X\""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:818
msgid "\tdef script_toggleBrailleEntry(self, gesture):"
msgstr "\tdef script_toggleBrailleEntry(self, gesture):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:819
msgid ""
"\t\tself.brlentry = True if not self.brlentry else False # Toggle braille "
"entry mode."
msgstr ""
"\t\tself.brlentry = True if not self.brlentry else False # alternar modo de "
"entrada Braille."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:821
msgid "With this background in mind, try some of the short exercises below."
msgstr ""
"Con estos antecedentes en mente, prueba algunos de los ejercicios cortos que "
"se presentan a continuación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:822
msgid "### Exercises"
msgstr "### Ejercicios"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:823
msgid ""
"1. Write a global plugin named nvdaVersion.py to say the current NVDA "
"version when NVDA+Shift+V is pressed."
msgstr ""
"1. Escribe una extensión global llamada nvdaVersion.py para decir la versión "
"actual de NVDA cuando se pulse NVDA+Shift+V."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:824
msgid ""
"2. A user wants to hear the time announced every minute. Using the clock on "
"the system tray, write a global plugin to announce when the time changes "
"(hint: you need to use an event and check the role of the clock object)."
msgstr ""
"2. Un usuario quiere oír la hora anunciada cada minuto. Usando el reloj en "
"la bandeja del sistema, escribe una extensión global para anunciar cuándo "
"cambia la hora (pista: es necesario usar un evento y comprobar la función "
"del objeto reloj)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:825
msgid "## Introduction to app modules"
msgstr "## Introdución a los módulos de aplicación"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:826
msgid ""
"An app module enhances support for a particular program. For example, you "
"can write an app module which adds convenience commands for reading various "
"parts of the screen, or you can define how a particular control should "
"behave in a program."
msgstr ""
"Un módulo de aplicación mejora el soporte para un programa en particular. "
"Por ejemplo, puedes escribir un módulo de aplicación que agregue órdenes de "
"conveniencia para leer varias partes de la pantalla, o puedes definir cómo "
"debe comportarse un control particular en un programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:827
msgid ""
"An app module is a Python (.py) file with the name corresponding to the "
"executable name of a program. For example, an app module for Winamp is named "
"winamp.py since Winamp's executable name is winamp.exe."
msgstr ""
"Un módulo de aplicación es un archivo Python (.py) con el nombre "
"correspondiente al nombre ejecutable de un programa. Por ejemplo, un módulo "
"de aplicación para Winamp se llama winamp.py ya que el nombre ejecutable de "
"Winamp es winamp.exe."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:828
msgid ""
"NVDA itself comes with several app modules, such as Winamp, Adobe Reader, "
"Microsoft Office programs and so on."
msgstr ""
"El mismo NVDA viene con varios app modules, como Winamp, Adobe Reader, "
"programas de Microsoft Office y así sucesivamente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:829
msgid "### Differences between app modules and global plugins"
msgstr "### Diferencias entre módulos de aplicación y extensiones globales"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:830
msgid ""
"At first glance, app modules may look the same as any global plugin. "
"However, app modules have additional properties that global plugins lack, "
"including:"
msgstr ""
"A primera vista, los módulos de aplicación pueden tener el mismo aspecto que "
"cualquier extensión global. Sin embargo, los módulos de aplicación tienen "
"propiedades adicionales de las que carecen las extensiones globales, "
"incluyendo:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:831
msgid ""
"* Instead of `globalPluginHandler`, you need to import `appModuleHandler`. "
"The class to implement is `AppModule(appModuleHandler.AppModule)`."
msgstr ""
"* En lugar de `globalPluginHandler`, necesitas importar `appModuleHandler`. "
"La clase a implementar es `AppModule(appModuleHandler.AppModule)`."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:832
msgid ""
"* App modules are stored in appModules folder in your add-on directory "
"structure and is named the same as the executable name of the program."
msgstr ""
"* Los módulos de aplicación se almacenan en la carpeta appModules de la "
"estructura de directorios del complemento y reciben el mismo nombre que el "
"nombre ejecutable del programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:833
msgid ""
"* You can ask NVDA to enter sleep mode in a program where NVDA will not "
"speak or braille anything while using the program, and any keyboard commands "
"you press will be handled by the program directly. This is done by setting "
"`sleepMode` attribute in the AppModule class to True."
msgstr ""
"* Puedes pedir a NVDA que entre en el modo de suspensión en un programa "
"donde NVDA no hable o no tenga nada en braille mientras estés utilizando el "
"programa, y cualquier orden de teclado que pulses será manejado directamente "
"por el programa. Esto se hace estableciendo el atributo `sleepMode` en la "
"clase AppModule a True."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:834
msgid ""
"* Some apps present information in the form of a webpage, and if this "
"happens, browse mode can be used. However, in NVDA 2019.2 and later, this "
"ability is disabled for apps such as Skype. To restore browse mode "
"functionality, you need to set disableBrowseModeByDefault to False."
msgstr ""
"* Algunas aplicaciones presentan información en forma de página web, y si "
"esto ocurre, se puede usar el modo exploración. Sin embargo, en NVDA 2019.2 "
"y versiones posteriores, esta capacidad se desactiva en aplicaciones como "
"Skype. Para restaurar la funcionalidad del modo exploración, es necesario "
"establecer disableBrowseModeByDefault a False."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:835
msgid "* The `event_NVDAObject_init` routine is only available in app modules."
msgstr ""
"* La rutina `event_NVDAObject_init` sólo está disponible en los módulos de "
"aplicación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:836
msgid ""
"* You can ask NVDA to keep an eye on an object to handle events for them "
"even if the user is using another app."
msgstr ""
"* Puedes pedir a NVDA que vigile un objeto para manejar eventos aunque el "
"usuario esté usando otra aplicación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:837
msgid "### App module development process and strategies"
msgstr "### Proceso y estrategias de desarrollo de módulos de aplicación"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:838
msgid "A typical app module is developed thus:"
msgstr "Así se desarrolla un módulo de aplicación típico:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:839
msgid "1. You or a user requests enhanced support for a program."
msgstr "1. Tú o un usuario solicitais soporte mejorado para un programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:840
msgid ""
"2. If possible, contact the app vendor (programmer) to ask accessibility "
"improvements for the program from their end."
msgstr ""
"2. Si es posible, ponte en contacto con el proveedor de la aplicación "
"(programador) para solicitar mejoras de accesibilidad para el programa por "
"su parte."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:841
msgid ""
"3. With or without cooperation from app vendor, you would examine how the "
"program works and areas on the screen that needs to be read out."
msgstr ""
"3. Con o sin la cooperación del proveedor de aplicaciones, examinarías cómo "
"funciona el programa y las áreas de la pantalla que necesitan ser leídas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:842
msgid ""
"4. Write and test the app module (with users) until the app module is ready "
"for release."
msgstr ""
"4. Escribe y prueba el módulo de aplicación (con usuarios) hasta que esté "
"listo para su lanzamiento."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:843
msgid "As you write app modules, try these tips:"
msgstr "A medida que escribas app modules, prueba estos consejos:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:844
msgid ""
"1. Use objects to represent parts of a program. This is done in two steps: "
"define the control for parts of a program via objects (inheriting from some "
"object such as IAccessible), then use `chooseNVDAObjectOverlayClasses` "
"routine to tell NVDA to work with your custom object when working with that "
"control. See overlay classes section for tips."
msgstr ""
"1. Utiliza objetos para representar partes de un programa. Esto se hace en "
"dos pasos: define el control para las partes de un programa a través de "
"objetos (heredando de algún objeto como IAccessible), luego utiliza la "
"rutina `chooseNVDAObjectOverlayClasses` para decirle a NVDA que trabaje con "
"tu objeto personalizado cuando trabaje con ese control. Mira la sección de "
"clases de superposición para consejos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:845
msgid ""
"2. If possible, test your app module using two or more versions of the "
"program to make sure your app module works with those versions."
msgstr ""
"2. Si es posible, prueba tu app module utilizando dos o más versiones del "
"programa para asegurarte de que tu módulo de aplicación funciona con esas "
"versiones."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:846
msgid ""
"3. You should not incorporate all desired features in version 1.0 - leave "
"some of them for a future release."
msgstr ""
"3. No deberías incorporar todas las características deseadas en la versión "
"1.0 - deja algunas de ellas para una futura versión."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:847
msgid "### Example 2: Simple app module in Notepad"
msgstr "### Ejemplo 2: Módulo de aplicación simple en el Bloc de notas"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:848
msgid ""
"Suppose you wish to find out which line you're editing in Notepad. Assuming "
"that Notepad will show status bar at all times, you wish to assign a key "
"combination to read the current line number."
msgstr ""
"Supongamos que deseas averiguar qué línea estás editando en el Bloc de "
"notas. Asumiendo que el Bloc de notas mostrará la barra de estado en todo "
"momento, deseas asignar una combinación de teclas para leer el número de "
"línea actual."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:849
msgid "The app module for Notepad would look like this:"
msgstr "El módulo de aplicación para el Bloc de notas se vería así:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:851
msgid "# Example app module for Notepad, notepad.py."
msgstr "# Módulo de aplicación de ejemplo para bloc de notas, notepad.py."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:857
msgid "\t@script(gesture=\"kb:NVDA+S\")"
msgstr "\t@script(gesture=\"kb:NVDA+S\")"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:858
msgid "\tdef script_sayLineNumber(self, gesture):"
msgstr "\tdef script_sayLineNumber(self, gesture):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:859
msgid "\t\t# Suppose line number is in the form \"  ln 1\"."
msgstr "\t\t# Supongamos que el número de línea sigue el formato \"  ln 1\"."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:860
msgid "\t\tlineNumList = api.getStatusBar().getChild(1).name.split()"
msgstr "\t\tlineNumList = api.getStatusBar().getChild(1).name.split()"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:861
msgid "\t\tlineNum = lineNumList[0]+lineNumList[1]"
msgstr "\t\tlineNum = lineNumList[0]+lineNumList[1]"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:862
msgid "\t\tui.message(lineNum)"
msgstr "\t\tui.message(lineNum)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:864
msgid ""
"So whenever you run Notepad, when you press NVDA+S, NVDA will say line "
"number."
msgstr ""
"Por lo tanto, cada vez que ejecutes el Bloc de notas, cuando pulses NVDA+S, "
"NVDA dirá el número de línea."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:865
msgid "### Example 3: Silencing NVDA in Openbook"
msgstr "### Ejemplo 3: Silenciar NVDA en Openbook"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:866
msgid ""
"Openbook is a scanning and reading program from Freedom scientific. Since "
"Openbook provides speech, you can tell NVDA to enter sleep mode while "
"Openbook (openbook.exe) is running using the below app module:"
msgstr ""
"Openbook es un programa de lectura y escaneo de Freedom scientific. Como "
"Openbook proporciona voz, puedes decir a NVDA que entre en modo latente "
"mientras Openbook (openbook.exe) se ejecute usando el módulo de aplicación "
"siguiente:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:868
msgid "# Silencing NVDA in openbook, openbook.py."
msgstr "# Silenciar a NVDA en openbook, openbook.py."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:871
msgid "\tsleepMode = True"
msgstr "\tsleepMode = True"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:873
msgid ""
"With that single line of code, NVDA will enter sleep mode in that program "
"(you should do this only if the program provides speech and/or braille "
"support on its own)."
msgstr ""
"Con esa única línea de código, NVDA entrará en modo latente en ese programa "
"(sólo debes hacerlo si el programa proporciona soporte de voz y/o braille "
"por sí solo)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:874
msgid ""
"### Example 4: Announcing control property changes while using another app"
msgstr ""
"### Ejemplo 4: Anunciar cambios de propiedad de control mientras se usa otra "
"aplicación"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:875
msgid ""
"You can ask NVDA to handle specific events while focused on another app. "
"This is done by calling eventHandler.requestEvents in app module's __init__ "
"method. In order to invoke this, you need process ID (PID) for the "
"application, window class name for the object and the name of the event to "
"be handled."
msgstr ""
"Puedes pedir a NVDA que gestione eventos específicos mientras se concentra "
"en otra aplicación. Esto se hace llamando a eventHandler.requestEvents en el "
"método __init__ del módulo de aplicación. Para poder invocar esto, necesitas "
"el ID de proceso (PID) para la aplicación, el nombre de clase de ventana "
"para el objeto y el nombre del evento a tratar."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:876
msgid ""
"The below code allows NVDA to announce value changes while focused on "
"another application."
msgstr ""
"El siguiente código permite a NVDA anunciar los cambios de valor mientras se "
"centra en otra aplicación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:878
msgid "# Example app module for a messenger app."
msgstr "# Ejemplo de módulo de aplicación para un programa de mensajería."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:879
msgid ""
"# The object we wish to track has window class name of \"MessengerWindow\"."
msgstr ""
"# El objeto que deseamos rastrear tiene el nombre de la clase de ventana "
"\"MessengerWindow\"."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:881
msgid "import eventHandler"
msgstr "import eventHandler"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:883
msgid "\tdef __init__(self, *args, **kwargs):"
msgstr "\tdef __init__(self, *args, **kwargs):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:884
msgid "\t\tsuper(AppModule, self).__init__(*args, **kwards)"
msgstr "\t\tsuper(AppModule, self).__init__(*args, **kwards)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:885
msgid ""
"\t\teventHandler.requestEvents(\"valueChange\", self.processID, "
"\"MessengerWindow\")"
msgstr ""
"\t\teventHandler.requestEvents(\"valueChange\", self.processID, "
"\"MessengerWindow\")"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:887
msgid ""
"Once defined, even if focused in another app, new messages (values) will be "
"announced."
msgstr ""
"Una vez definidos, aunque estén enfocados en otra aplicación, se anunciarán "
"nuevos mensajes (valores)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:888
msgid "### Useful app module properties and methods"
msgstr "### Propiedades y métodos útiles de los módulos de aplicación"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:889
msgid ""
"`sleepMode` and `processID` are just two of many attributes that app modules "
"have. Other useful properties and methods used in app modules include the "
"following:"
msgstr ""
"`sleepMode` y `processID` son sólo dos de los muchos atributos que tienen "
"los módulos de aplicación. Otras propiedades y métodos útiles utilizados en "
"los módulos de aplicación incluyen los siguientes:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:890
msgid "* appName: the name of the app (usually the name of the executable)."
msgstr ""
"* appName: el nombre de la aplicación (normalmente el nombre del ejecutable)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:891
msgid "* productName: Records the actual product name for the app."
msgstr ""
"* productName: Registra el nombre real del producto para la aplicación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:892
msgid "* productVersion: Records the version of the app."
msgstr "* productVersion: Registra la versión de la aplicación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:893
msgid ""
"* is64BitProcess: if true, the app is a 64-bit process (only true if you're "
"using a 64-bit app under 64-bit Windows versions)."
msgstr ""
"* is64BitProcess: si es true, la aplicación es un proceso de 64 bits (sólo "
"true si se está usando una aplicación de 64 bits en versiones Windows de 64 "
"bits)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:894
msgid ""
"* dumpOnCrash: if you are debugging apps that crashes often, you can call "
"this function to let NVDA save a crash dump of this app in the temp files "
"directory so you can retrieve it later."
msgstr ""
"* dumpOnCrash: si estás depurando aplicaciones que se bloquean con "
"frecuencia, puedes llamar a esta función para permitir que NVDA guarde un "
"volcado de esta aplicación en el directorio de archivos temporales para que "
"puedas recuperarlo más tarde."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:895
msgid ""
"* disableBrowseModeByDefault: some apps are essentially web documents, and "
"as such, browse mode will be invoked. You must set this value to True if you "
"want to force NVDA to treat this application as a proper aplication i.e. "
"disable browse mode."
msgstr ""
"* disableBrowseModeByDefault: algunas aplicaciones son, en esencia, "
"documentos web y, como tales, harán que se active el modo exploración. Debes "
"configurar este valor a True si quieres forzar a NVDA a que trate la "
"aplicación adecuadamente como una aplicación. En otras palabras, esto "
"desactiva el modo exploración."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:896
msgid "* appPath: records the path to the app executable."
msgstr "* appPath: registra la ruta al ejecutable de la aplicación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:897
msgid ""
"* appArchitecture: the intended processor architecture for the app e.g. x86, "
"AMD64, ARM64."
msgstr ""
"* appArchitecture: la arquitectura de procesador prevista para la "
"aplicación. Por ejemplo, x86, AMD64, ARM64."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:898
msgid ""
"* isWindowsStoreApp: applicable on Windows 8, 8.1, and 10, determines if the "
"app is hosted inside an app container such as a Store app."
msgstr ""
"* isWindowsStoreApp: aplicable en Windows 8, 8.1 y 10. Determina si la "
"aplicación está alojada en un contenedor de aplicaciones, tal y como hacen "
"las aplicaciones de la tienda."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:899
msgid ""
"And other properties. Type dir(obj.appModule) from [Python Console] for the "
"complete list."
msgstr ""
"Y otras propiedades. Escribe dir(obj.appModule) desde la [consola Python] "
"para obtener la lista completa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:900
msgid "### Other remarks on app modules"
msgstr "### Otros comentarios sobre los módulos de aplicación"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:901
msgid "Here are other remarks regarding app modules:"
msgstr "Aquí hay otras observaciones sobre los módulos de aplicación:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:902
msgid ""
"* If you find that different versions of the program are laid out "
"differently e.g. locations for controls are different, then you can write "
"code which can handle these cases. There are a number of options you can "
"choose from: adding some constants in your app module to handle different "
"object locations, writing code for these controls (one per version) in "
"custom objects which will be chosen in overlay class method and so on."
msgstr ""
"* Si encuentras que las diferentes versiones del programa están dispuestas "
"de forma diferente, por ejemplo, las ubicaciones para los controles son "
"diferentes, entonces puedes escribir código que pueda manejar estos casos. "
"Hay una serie de opciones entre las que puedes elegir: añadir algunas "
"constantes en tu módulo de aplicación para manejar diferentes ubicaciones de "
"objetos, escribir código para estos controles (uno por versión) en objetos "
"personalizados que se seleccionarán en el método de clases de superposición, "
"etc."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:903
msgid ""
"* If possible, try working with services that the app provides, such as COM "
"(Component Object Model) methods (for example, Outlook app module), API's "
"the app provides (such as Winamp) and so on."
msgstr ""
"* Si es posible, intenta trabajar con los servicios que proporciona la "
"aplicación, como los métodos COM (Component Object Model) (por ejemplo, el "
"módulo de aplicación de Outlook), API's que proporciona la aplicación (como "
"Winamp) y así sucesivamente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:904
msgid ""
"* To support an application that works the same as another program "
"(especially if you're writing an app module for a 64-bit version of a 32-bit "
"program for which you also wrote an app module), use the following code "
"fragment (called aliasing):\\"
msgstr ""
"* Para soportar una aplicación que funcione igual que otro programa "
"(especialmente si estás escribiendo un módulo de aplicación para una versión "
"de 64 bits de un programa de 32 bits para el que has escrito un módulo de "
"aplicación), utiliza el siguiente fragmento de código (llamado aliasing):\\"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:905
msgid "  `from appName import *`\\"
msgstr "  `from appName import *`\\"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:906
msgid ""
"  where appName is the name of the app module and * (asterisk or star) means "
"import everything. For an example of this, look at NVDA's app modules for "
"Miranda32 and Miranda64."
msgstr ""
"  donde appName es el nombre del módulo de aplicación y * (asterisco o "
"estrella) significa importarlo todo. Para un ejemplo de esto, mira los "
"módulos de aplicación de NVDA para Miranda32 y Miranda64."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:907
msgid ""
"* If you wish to extend an app module that comes with NVDA, use the "
"following code fragment (this is called overriding the built-in module):\\"
msgstr ""
"* Si deseas ampliar un módulo de aplicación que venga con NVDA, utiliza el "
"siguiente fragmento de código (llamado sobreescritura del módulo "
"incorporado):\\"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:908
msgid "  `from nvdaBuiltin.appModules.appName import *`\\"
msgstr "  `from nvdaBuiltin.appModules.appName import *`\\"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:909
msgid ""
"  Where appName is the app module you wish to extend. For example, if you "
"wish to support different controls in Windows calculator (calc.py), use:\\"
msgstr ""
"  Donde appName es el módulo de aplicación que deseas ampliar. Por ejemplo, "
"si deseas admitir diferentes controles en la calculadora de Windows (calc."
"py), utiliza:\\"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:910
msgid "  `from nvdaBuiltin.appModules.calc import *`\\"
msgstr "  `from nvdaBuiltin.appModules.calc import *`\\"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:911
msgid ""
"* Many app modules (both built-in and third-party ones) use app names as "
"part of the name for a constant (a value that doesn't change). For example, "
"in NVDA's Powerpoint module (powerpnt.py), many constants start with \"PP\". "
"Similarly, in Station Playlist Studio app module, many constants in the app "
"module file (splstudio.py) starts with \"SPL\". This is used to remind you "
"where these constants are used."
msgstr ""
"* Muchos módulos de aplicación (tanto integrados como de terceros) utilizan "
"nombres de applicación como parte del nombre de una constante (un valor que "
"no cambia). Por ejemplo, en el módulo Powerpoint de NVDA (powerpnt.py), "
"muchas constantes comienzan con \"PP\". Del mismo modo, en el módulo de "
"aplicación de Station Playlist Studio, muchas constantes en el archivo del "
"módulo de aplicación (splstudio.py) comienzan con \"SPL\". Esto se usa para "
"recordarte dónde se utilizan estas constantes."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:912
msgid "## Drivers"
msgstr "## Controladores"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:913
msgid ""
"A driver allows software such as NVDA to communicate with hardware or use "
"functionality provided by another software. Typically, when people speak of "
"drivers, they usually refer to a program installed on a computer that allows "
"software to communicate with a specific piece of hardware, such as video "
"cards, keyboards and so on."
msgstr ""
"Un controlador permite que un software como NVDA se comunique con el "
"hardware o utilice la funcionalidad proporcionada por otro software. "
"Normalmente, cuando la gente habla de controladores, usualmente se refiere a "
"un programa instalado en un ordenador que permite que el software se "
"comunique con un componente hardware específico, como tarjetas de vídeo, "
"teclados y demás."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:914
msgid ""
"In NVDA, drivers refer to modules that NVDA can use to communicate with a "
"speech synthesizer or a braille display. For instance, you can write a "
"braille display driver that sends braille output to your braille display, or "
"ask your synthesizer to switch languages and provide configurable settings."
msgstr ""
"En NVDA, los controladores se refieren a módulos que NVDA puede utilizar "
"para comunicarse con un sintetizador de voz o una pantalla braille. Por "
"ejemplo, puedes escribir un controlador de pantalla braille que envíe una "
"salida braille a la pantalla braille, o pedirle a tu sintetizador que cambie "
"de idioma y proporcione opciones configurables."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:915
msgid "### Driver components"
msgstr "### Componentes del controlador"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:916
msgid ""
"All drivers (regardless of target device or software to be supported) import "
"appropriate modules such as `synthDriverHandler`. For most drivers, majority "
"of the driver code deals with communicating with the target device or "
"software, and all drivers must define the driver class (synthDriverHandler."
"SynthDriver or braille.BrailleDisplayDriver)."
msgstr ""
"Todos los controladores (independientemente del dispositivo de destino o "
"software que se admita) importan los módulos apropiados, como "
"`synthDriverHandler`. En muchos controladores, la mayoría del código del "
"controlador trata sobre la comunicación con el dispositivo o software de "
"destino, y todos los controladores deben definir la clase de controlador "
"(synthDriverHandler.SynthDriver o braille.BrailleDisplayDriver)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:917
msgid "All driver classes, at a minimum, must contain:"
msgstr "Todas las clases de controladores, como mínimo, deben contener:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:918
msgid ""
"* Driver identifier: a camel-case string such as \"oneCore\" that uniquely "
"identifies a given driver."
msgstr ""
"* Identificador del controlador: una cadena de caracteres como \"oneCore\" "
"que identifique de forma unívoca a un controlador determinado."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:919
msgid ""
"* Friendly name: the name that'll appear under synthesizer or braille "
"settings dialogs."
msgstr ""
"* Nombre amigable: el nombre que aparecerá en los cuadros de diálogo de "
"sintetizador o de configuración braille."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:920
msgid ""
"* Availability flag: a class method named `check` that tells NVDA that the "
"driver is ready for use."
msgstr ""
"* Indicador de disponibilidad: un método de clase llamado `check` que indica "
"a NVDA que el controlador está listo para su uso."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:921
msgid ""
"* Connection manager: a set of routines that instructs NVDA as to how to "
"locate a given synthesizer or a braille display."
msgstr ""
"* Gestor de conexiones: conjunto de rutinas que indican a NVDA cómo "
"localizar un determinado sintetizador o una pantalla braille."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:922
msgid ""
"* Output handler: a function that'll perform the actual output processing. "
"For synthesizers, `speak` method must be present; for braille displays, "
"`display` method is needed."
msgstr ""
"* Manejador de salida: una función que realiza el procesamiento de salida "
"real. Para los sintetizadores, el método `speak` debe estar presente; para "
"las pantallas braille, se necesita el método `display`."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:923
msgid "For speech synthesizers, they need to have:"
msgstr "Para los sintetizadores de voz, es necesario tener:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:924
msgid ""
"* Synth settings ring options: a list of synthesizer settings users can "
"adjust via synth settings ring."
msgstr ""
"* Opciones de timbre de configuración del sintetizador: una lista de ajustes "
"de los sintetizadores que los usuarios pueden ajustar mediante el timbre de "
"configuración del sintetizador."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:925
msgid "For braille displays:"
msgstr "Para las pantallas braille:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:926
msgid ""
"* Input handlers: if input from the braille display is desirable, the driver "
"author must implement responders for commands such as braille keys, routing "
"buttons and additional hardware."
msgstr ""
"* Manejadores de entrada: si se desea la entrada de la pantalla braille, el "
"autor del controlador debe implementar detectores para órdenes tales como "
"teclas braille, botones de enrutamiento y hardware adicional."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:927
msgid ""
"* Command set: a map that identifies NVDA command assignments for various "
"display hardware buttons."
msgstr ""
"* conjunto de órdenes: un mapa que identifique las asignaciones de órdenes "
"de NVDA para varios botones de hardware de la pantalla."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:928
msgid ""
"### A Few important things to remember before, during and after driver "
"development"
msgstr ""
"### Unas pocas cosas importantes que recordar antes, durante y después del "
"desarrollo de controladores"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:929
msgid ""
"* Before writing a driver, make sure you have the needed software and/or "
"hardware."
msgstr ""
"* Antes de escribir un controlador, asegúrate de tener el software y/o "
"hardware necesarios."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:930
msgid ""
"* Be sure to study protocols and APIs used by a speech synthesizer or a "
"braille display (this is more so for braille displays which may implement "
"different protocols)."
msgstr ""
"* Asegúrate de estudiar los protocolos y las API's utilizadas por un "
"sintetizador de voz o una pantalla braille (esto es más importante para las "
"pantallas braille, que pueden implementar diferentes protocolos)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:931
msgid ""
"* Make sure you know how to communicate with your equipment or software - "
"ports, USB IDs, Bluetooth addresses, serial port settings, DLLs and so on."
msgstr ""
"* Asegúrate de saber cómo comunicarte con el equipo o software: puertos, IDs "
"USB, direcciones Bluetooth, configuración del puerto serie, dlls, etc."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:932
msgid ""
"* Work with another person who happens to use the equipment or software you "
"are writing driver(s) for."
msgstr ""
"* Trabaja con otra persona que utilice el equipo o el software para el que "
"estás escribiendo el (los) controlador (es)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:933
msgid "### Typical driver development steps"
msgstr "### Pasos típicos de desarrollo de un controlador"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:934
msgid ""
"When writing drivers, you may wish to follow the recommended steps for app "
"module development (planning, talking to vendors, user test, etc.). However, "
"since drivers require intimate knowledge of hardware and/or software, you "
"should spend more time on testing your driver. This is more so if you are "
"writing a driver for a braille display which can send arbitrary commands "
"(braille commands, routing buttons, etc.)."
msgstr ""
"Cuando escribas controladores, es posible que desees seguir los pasos "
"recomendados para el desarrollo de módulos de aplicación (planificación, "
"comunicación con los proveedores, pruebas de usuario, etc.). Sin embargo, "
"dado que los controladores requieren un conocimiento íntimo del hardware y/o "
"del software, deberías dedicar más tiempo a probar tu controlador. Esto es "
"más importante si estás escribiendo un controlador para una pantalla braille "
"que puede enviar órdenes arbitrarias (órdenes braille, botones de "
"enrutamiento, etc.)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:935
msgid "## Enhancers"
msgstr "## Potenciadores"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:936
msgid ""
"An enhancer is a module that helps certain groups of users use computers "
"more efficiently. Enhancers may include cursor tracking, magnification, and "
"other enhancements."
msgstr ""
"Un potenciador es un módulo que ayuda a ciertos grupos de usuarios a "
"utilizar ordenadores de una forma más eficiente. Aquí se pueden incluir "
"seguimiento del cursor, ampliación y otras mejoras."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:937
msgid ""
"Currently NVDA can provide assistance through vision enhancement providers. "
"A vision enhancement provider is an enhancer that allows people with low "
"vision or sight use computers effectively by working in tandem with NVDA. "
"Enhancements may include cursor highlighting, screen curtain effect, and "
"magnifying parts of the screen. These enhancers are stored under "
"\"visionEnhancementProviders\" folder and defined as a "
"\"VisionEnhancementProvider\" class which inherits from \"vision."
"providerBase.VisionEnhancementProvider\"."
msgstr ""
"Actualmente NVDA puede proporcionar asistencia mediante proveedores de "
"mejoras de visión. Un proveedor de mejoras de visión es un potenciador que "
"permite a personas con vista o baja visión usar ordenadores de manera "
"efectiva trabajando en tándem con NVDA. Los potenciadores pueden incluir "
"resaltado del cursor, efecto de cortina de pantalla y ampliación de ciertas "
"zonas de la pantalla. Estos potenciadores se alojan bajo la carpeta "
"\"visionEnhancementProviders\"y se definen con la clase "
"\"VisionEnhancementProvider\", que hereda de \"vision.providerBase."
"VisionEnhancementProvider\"."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:938
msgid ""
"Note: because only one enhancer is supported at this time, we will refer to "
"vision enhancement provider in the sections below."
msgstr ""
"Nota: como de momento sólo se soporta un potenciador, nos referiremos al "
"proveedor de mejoras de visión en las siguientes secciones."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:939
msgid "### Enhancer components"
msgstr "### Componentes potenciadores"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:940
msgid ""
"An enhancer such as vision enhancement provider will look similar to a "
"combination of a global plugin and a driver (see above sections for "
"explanations). For the most part, components used for drivers are "
"applicable. These include:"
msgstr ""
"Un potenciador como el proveedor de mejoras de visión se parecerá a una "
"combinación de extensión global y controlador (mira las secciones anteriores "
"para conocer más sobre ellos). En la mayoría de los casos, se pueden aplicar "
"los componentes usados en un controlador. Estos incluyen:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:941
msgid ""
"* Enhancer identifier: a camel-case string such as \"screenCurtain\" that "
"uniquely identifies this enhancer."
msgstr ""
"* Identificador del potenciador: una cadena de caracteres como "
"\"screenCurtain\" que identifique de forma unívoca a este potenciador."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:942
msgid "* Friendly name: the name that'll appear under Vision dialog."
msgstr "* Nombre amigable: el nombre que aparecerá en el diálogo Visión."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:943
msgid ""
"* Supported enhancements: a frozen set of enhancement roles this provider "
"will introduce."
msgstr ""
"* Mejoras soportadas: un conjunto congelado de roles de mejora que "
"introducirá este proveedor."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:944
msgid ""
"* Startup check: a routine that will ensure NVDA is running on a specific "
"environment where the enhancer would be most helpful, such as checking for a "
"specific Windows release."
msgstr ""
"* Comprobación de inicio: un procedimiento que se aseugrará de que NVDA se "
"ejecuta en un entorno específico donde el potenciador sería más útil. Por "
"ejemplo, se puede buscar una versión de Windows específica."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:945
msgid ""
"* Startup and shutdown: a class constructor that instructs the enhancer to "
"come online and a \"terminate\" method that shuts it down."
msgstr ""
"* Inicio y apagado: un constructor de clase que indica al potenciador que se "
"ponga en línea y un método \"terminate\" que lo desactiva."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:946
msgid ""
"* Event registrar: if an enhancer wishes to respond to various actions "
"performed by users, it can specify follow-up actions."
msgstr ""
"* Reacción a eventos: si un potenciador quisiera responder a diversas "
"acciones realizadas por los usuarios, puede especificar acciones como "
"consecuencia."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:947
msgid ""
"### A Few important things to remember before, during and after enhancer "
"development"
msgstr ""
"### Unas pocas cosas importantes que recordar antes, durante y después del "
"desarrollo de potenciadores"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:948
msgid ""
"* Be sure to talk to users planning to use your enhancer. For vision "
"enhancement providers, make sure the enhancements are indeed what users want."
msgstr ""
"* Asegúrate de hablar con los usuarios que planean utilizar tu potenciador. "
"Para los proveedores de mejoras de visión, comprueba que las mejoras son las "
"que los usuarios quieren."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:949
msgid ""
"* Test your enhancers with many users to make sure it is working correctly."
msgstr ""
"* Prueba tus potenciadores con muchos usuarios para asegurarte de que "
"funcionan correctamente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:950
msgid "### Typical enhancer development steps"
msgstr "### Pasos típicos de desarrollo de un potenciador"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:951
msgid ""
"When writing enhancers such as vision enhancement providers, you may wish to "
"follow the recommended steps for driver and global plugin development "
"(planning, talking to users, user test, etc.). As these modules will affect "
"NVDA experience globally (even when switching configuration profiles), make "
"sure the enhancer does not degrade user experience for people not needing it."
msgstr ""
"Cuando escribas potenciadores como los proveedores de mejoras de la visión, "
"puedes querer seguir los pasos recomendados para el desarrollo de "
"controladores y extensiones globales (planear, hablar con usuarios, pruebas "
"con usuarios, etc.). Ya que estos módulos afectarán globalmente a la "
"experiencia con NVDA (incluso al cambiar entre perfiles de configuración), "
"asegúrate de que el potenciador no degrada la experiencia de usuario de la "
"gente que no lo necesite."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:952
msgid "## Sharing your add-on and experience with others"
msgstr "## Compartiendo tu complemento y experiencia con otros"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:953
msgid ""
"Once you've finished developing your add-ons, you might want to share your "
"code with others. Along the way, you might contribute your know-how so "
"others may benefit from your experiences."
msgstr ""
"Una vez que hayas terminado de desarrollar tus complementos, es posible que "
"desees compartir tu código con otros. A lo largo del camino, podrías aportar "
"tu conocimiento para que otros puedan beneficiarse de tus experiencias."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:954
msgid ""
"This chapter is designed to give some guidance on add-on release and "
"maintenance, as well as connecting with your add-on users and other NVDA "
"core and add-on developers around the world."
msgstr ""
"Este capítulo está diseñado para proporcionar orientación sobre la "
"liberación y el mantenimiento de complementos, así como para conectarte con "
"los usuarios de complementos y otros desarrolladores del núcleo y de "
"complementos de NVDA de todo el mundo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:955
msgid "### The NVDA Add-ons list"
msgstr "### La lista de complementos de NVDA"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:956
msgid ""
"If you want to keep in touch with your add-on users or want to learn from or "
"contribute your add-on to others, please subscribe to [NVDA add-ons list]"
"[4]. This is a low traffic list devoted to discussing current and future add-"
"ons, as well as to review other add-ons created by members of the community "
"or have your add-on reviewed by other add-on developers around the world."
msgstr ""
"Si deseas mantenerte en contacto con los usuarios de tu complemento o deseas "
"aprender o contribuir con tu complemento a otros, suscríbete a[la lista de "
"complementos de NVDA][4]. Esta es una lista de poco tráfico dedicada a "
"discutir los complementos actuales y futuros, así como a revisar otros "
"complementos creados por miembros de la comunidad o hacer que otros "
"desarrolladores de complementos revisen sus complementos en todo el mundo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:957
msgid "### The NVDA Community Add-ons web site and code repository"
msgstr ""
"### El sitio web y el repositorio de código de los complementos de la "
"comunidad de NVDA"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:958
msgid ""
"To download or learn more about various add-ons created by NVDA users, visit "
"[NVDA Community Add-ons web site]. You can browse currently available add-"
"ons, view add-ons under development and read add-on development guidelines."
msgstr ""
"Para descargar u obtener más información sobre los diversos complementos "
"creados por los usuarios de NVDA, visita el [sitio web de los complementos "
"de la comunidad de NVDA]. Puedes examinar los complementos actualmente "
"disponibles, ver los complementos en desarrollo y leer las directrices de "
"desarrollo de complementos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:959
msgid ""
"For developers wishing to read the code that powers various add-ons, you can "
"search for add-on repositories stored on [GitHub]. The NVDA community add-on "
"developers use [Git] for version control."
msgstr ""
"Para los desarrolladores que deseen leer el código que impulsa a varios "
"complementos, puedes buscar repositorios de complementos almacenados en "
"[GitHub]. Los desarrolladores de complementos de la comunidad de NVDA "
"utilizan [Git] para el control de versiones."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:960
msgid "Some of the useful and educational add-on repositories are:"
msgstr "Algunos de los repositorios útiles y educativos son:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:961
msgid ""
"* [Add-on Template]: this is the source code repository for the community "
"add-on template."
msgstr ""
"* [add-on template]: este es el repositorio de código fuente para la "
"plantilla de complementos de la comunidad."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:962
msgid ""
"* [Place markers by Noelia Martinez](https://github.com/nvdaes/"
"placeMarkers): adds place marker functionality and provides a good example "
"of using text infos."
msgstr ""
"* [Place markers de Noelia Martínez](https://github.com/nvdaes/"
"placeMarkers): agrega funcionalidad de marcadores de posición y proporciona "
"un buen ejemplo sobre el uso de text infos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:963
msgid ""
"* [Windows 10 App Essentials by Joseph Lee](https://github.com/josephsl/"
"wintenApps): provides improved support for Windows 10 and various universal "
"apps, considered a classic in how global plugins and app modules work "
"together and includes examples of overlay classes and control behaviors that "
"derives from UI Automation objects."
msgstr ""
"* [Windows 10 App Essentials de Joseph Lee](https://github.com/josephsl/"
"wintenApps): proporciona soporte mejorado para Windows 10 y varias "
"aplicaciones universales, considerado un clásico en la forma en que las "
"extensiones globales y módulos de aplicaciones trabajan juntos e incluye "
"ejemplos de clases de superposición y comportamientos de control que se "
"derivan de los objetos UI Automation."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:964
msgid ""
"* [Read Feeds by Noelia Martinez](https://github.com/nvdaes/readFeeds): "
"eases discovery of feeds on various websites and includes a simple example "
"of storing and validating add-on settings."
msgstr ""
"* [Read Feeds de Noelia Martínez](https://github.com/nvdaes/readFeeds): "
"facilita el descubrimiento de feeds en varios sitios web e incluye un "
"ejemplo sencillo de almacenar y validar configuraciones adicionales."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:965
msgid ""
"* [NVDA Remote Support by Christopher Toth and Tyler Spivey](https://github."
"com/nvdaremote/nvdaremote): a popular add-on used for remote troubleshooting "
"and technical support, provides examples of how various external Python "
"libraries are used."
msgstr ""
"* [NVDA Remote Support de Christopher Toth y Tyler Spivey](https://github."
"com/nvdaremote/nvdaremote): un popular complemento utilizado para la "
"solución remota de problemas y soporte técnico, proporciona ejemplos de cómo "
"se utilizan varias bibliotecas externas de Python."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:966
msgid ""
"* [StationPlaylist by Joseph Lee](https://github.com/josephsl/"
"stationPlaylist): improves usage of StationPlaylist Studio, provides "
"interesting examples on overlay classes and app API, use of threads, and add-"
"on dialogs and other user interfaces."
msgstr ""
"* [StationPlaylist de Joseph Lee](https://github.com/josephsl/"
"stationPlaylist): mejora el uso de StationPlaylist Studio, proporciona "
"ejemplos interesantes sobre las clases de superposición y la API de "
"aplicaciones, el uso de hilos y diálogos en un complemento y otras "
"interfaces de usuario."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:967
msgid "### Submitting your add-on for review"
msgstr "### Envío de tu complemento a revisión"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:968
msgid ""
"If you would like to submit your add-on for distribution on community add-"
"ons website, you must request a review from a member of the add-ons "
"community as follows:"
msgstr ""
"Si quieres enviar tu complemento para que se distribuya en el sitio web de "
"complementos, debes solicitar la revisión por parte de un miembro de la "
"comunidad de complementos como se describe:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:969
msgid "1. If you haven't, subscribe to NVDA Add-ons mailing list."
msgstr ""
"1. Si no lo has hecho, suscríbete a la lista de correo de complementos de "
"NVDA."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:970
msgid ""
"2. Ask the community to review your add-on. Be sure to specify name, author, "
"brief description of the add-on, and public code repository if possible."
msgstr ""
"2. Solicita a la comunidad que revise tu complemento. Asegúrate de indicar "
"su nombre, autor, una descripción breve del complemento y el repositorio "
"público con el código si es posible."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:971
msgid ""
"3. Community members will review and comment on your add-on, including "
"license and copyright, user experience, documentation, and security."
msgstr ""
"3. Los miembros de la comunidad revisarán y harán comentarios sobre tu "
"complemento, incluyendo aspectos como licencia y copyright, experiencia de "
"usuario, documentación y seguridad."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:972
msgid ""
"4. If your add-on is accepted for community add-ons website distribution, a "
"maintainer of the community add-ons website will register your add-on. This "
"includes creating a new entry for your add-on and preparing localization "
"support."
msgstr ""
"4. Si tu complemento es aceptado para su distribución en el sitio web de la "
"comunidad de complementos, un responsable de mantenimiento del sitio web de "
"complementos de la comunidad lo registrará. Esto incluye la creación de una "
"nueva entrada para tu complemento y la preparación del soporte de traducción."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:973
msgid ""
"5. Optionally, after your add-on is accepted, you can ask the community for "
"more detailed reviews. These can include improving messages, GUI layout, "
"advanced security audit, compatibility testing, and porting to newer Python "
"versions."
msgstr ""
"5. Opcionalmente, después de que se acepte tu complemento, puedes solicitar "
"a la comunidad que haga revisiones más detalladas. Aquí se pueden incluir la "
"mejora de mensajes, disposición de la interfaz gráfica, auditorías de "
"seguridad avanzadas, pruebas de compatibilidad y migración a versiones de "
"Python más recientes."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:974
msgid "#### Add-on review checklist"
msgstr "#### Lista de comprobación de revisión de complementos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:975
msgid "Your add-on:"
msgstr "Tu complemento:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:976
msgid ""
"1. Must be licensed under GNU General Public license (GPL) version 2 or "
"later or equivalent which allows a GPL software such as NVDA to incorporate "
"your code while it runs."
msgstr ""
"1. Debe estar liberado bajo la licencia GNU General Public License (GPL), "
"versión 2 o posterior, o una equivalente que permita a un software GPL, como "
"NVDA, incorporar tu código mientras se ejecuta."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:977
msgid ""
"2. Must be written in Python 3. Compatibility with Python 2 is optional but "
"not recommended starting with NVDA 2021.1 base API."
msgstr ""
"2. Debe estar escrito en Python 3. La compatibilidad con Python 2 es "
"opcional, pero no se recomienda a partir de la API base de NVDA 2021.1."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:978
msgid ""
"3. Must be compatible with latest base API release (as of May 2021, base API "
"is 2021.1)."
msgstr ""
"3. Debe ser compatible con la última liberación de la API base (en mayo de "
"2021, la API base es 2021.1)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:979
msgid ""
"4. Messages to be presented to users should be made translatable (use _() "
"Gettext function to make messages translatable). Be sure to accompany "
"translatable messages with comments for translators."
msgstr ""
"4. Los mensajes que se presenten a los usuarios deberían hacerse traducibles "
"(usa la función de Gettext _() para hacer que los mensajes sean "
"traducibles). Asegúrate de acompañar los mensajes traducibles con "
"comentarios para traductores."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:980
msgid "## Advanced Code Examples and Features"
msgstr "## Ejemplos avanzados de código y características"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:981
msgid ""
"This chapter is a work in progress. If there is something you would like to "
"see here, or if you have a comment or correction, please contact one of the "
"maintainers, or ask for it on the add-ons mailing list."
msgstr ""
"Este capítulo está en construcción. Si hay algo que desees ver aquí, o "
"tienes un comentario o corrección, contacta con alguno de los autores o "
"solicítalo en la lista de correo de complementos de NVDA."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:982
msgid "### Interactive Dialogs"
msgstr "### Diálogos interactivos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:983
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1062
msgid "#### Introduction"
msgstr "#### Introducción"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:984
msgid ""
"To present straight forward information to your users, ui.message and ui."
"browseableMessage are usually sufficient. However, if the user needs to give "
"information back to your add-on, those aren't going to help. For that, you "
"need dialogs. Creating dialogs and the many considerations around using them "
"are outside the scope of this document, but we can help to get you started."
msgstr ""
"Para presentar información a tus usuarios, ui.message y ui.browseableMessage "
"normalmente son suficientes. Sin embargo, si el usuario necesita enviar "
"información de vuelta a tu complemento, no te van a ayudar. Por este motivo "
"necesitas los diálogos. La creación de diálogos y muchas consideraciones "
"sobre su uso se encuentran fuera del ámbito de este documento, pero podemos "
"ayudarte en tus primeros pasos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:985
msgid ""
"To create and use dialogs, you need to import two modules: GUI (import gui) "
"and WXPython (import wx). Read their documentation for the large number of "
"options available to you."
msgstr ""
"Para crear y usar diálogos, debes importar dos módulos: gui (import gui) y "
"WXPython (import wx). Lee su documentación para conocer la impresionante "
"cantidad de opciones a tu disposición."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:986
msgid "In short:"
msgstr "Para abreviar:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:987
msgid ""
"* gui provides methods for constructing and displaying some standard dialogs."
msgstr ""
"* Gui proporciona métodos para construir y mostrar algunos diálogos estándar."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:988
msgid ""
"* wx provides the actual implementation for those dialogs, and provides many "
"of the constants and extended options you will need to really make use of "
"dialogs effectively."
msgstr ""
"* Wx proporciona la implementación real de esos diálogos, y proporciona "
"muchas de las constantes y opciones extendidas que necesitas realmente para "
"usar de forma eficaz los diálogos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:989
msgid "#### Example 1: A Basic Dialog"
msgstr "#### Ejemplo 1: un diálogo básico"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:990
msgid ""
"The following code will create a basic dialog, providing the user with two "
"very familiar options. See the notes after the code to understand what is "
"going on."
msgstr ""
"El siguiente código creará un diálogo básico, proporcionando al usuario dos "
"opciones muy familiares. Mira las notas que hay después del código para "
"entender qué ocurre."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:992
msgid "import wx  # We need this for working with dialogs and windows"
msgstr "import wx  # Lo necesitamos para trabajar con diálogos y ventanas"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:993
msgid "import gui  # We need this for working with dialogs and windows"
msgstr "import gui  # Lo necesitamos para trabajar con diálogos y ventanas"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:998
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1022
msgid "\t\tgesture=\"kb:nvda+shift+t\",  # Configure the key"
msgstr "\t\tgesture=\"kb:nvda+shift+t\",  # Configura el atajo"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:999
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1023
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1049
msgid "\t\tdescription=\"Run an add-on guide example\"  # NVDA input help"
msgstr ""
"\t\tdescription=\"Ejecuta un ejemplo de la guía de complementos\"  # Ayuda "
"de entrada de NVDA"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1001
msgid ""
"\tdef script_makeSillyWindow(self, gesture):\t# A normal GlobalPlugin script "
"method"
msgstr ""
"\tdef script_makeSillyWindow(self, gesture):\t# Un método script normal de "
"la clase GlobalPlugin"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1002
msgid "\t\tdef showSillyWindow():\t\t\t# Define an internal function"
msgstr "\t\tdef showSillyWindow():\t\t\t# Se define una función interna"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1003
msgid ""
"\t\t\tgui.messageBox(\"Warning! You are about to do nothing. But you will be "
"doing it with an important looking dialog window. Continue?\","
msgstr ""
"\t\t\tgui.messageBox(\"¡Aviso! Estás a punto de no hacer nada. Pero estarás "
"haciéndolo con una ventana de diálogo muy importante. ¿Deseas continuar?\","

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1004
msgid "\t\t\t\t\"Silly Question Window\", wx.OK | wx.CANCEL | wx.ICON_WARNING)"
msgstr ""
"\t\t\t\t\"Ventana de pregunta tonta\", wx.OK | wx.CANCEL | wx.ICON_WARNING)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1005
msgid "\t\twx.CallAfter(showSillyWindow)"
msgstr "\t\twx.CallAfter(showSillyWindow)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1007
msgid ""
"If you save the above as a global plugin and load it in NVDA, then press NVDA"
"+shift+t, you should find yourself in a new window."
msgstr ""
"Si guardas lo anterior como extensión global y la cargas en NVDA, y a "
"continuación pulsas NVDA+shift+t, deberías encontrarte en una nueva ventana."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1008
msgid ""
"The window is generated by the call to gui.messageBox. The first parameter "
"is the text of the window, the second parameter is the title of the window, "
"and the third parameter contains a list of constant flags which wx uses to "
"generate the dialog's buttons and other attributes."
msgstr ""
"La ventana es generada por la llamada a gui.messageBox. El primer parámetro "
"es el texto de la ventana, el segundo parámetro es su título, y el tercero "
"contiene una lista de indicadores constantes que wx usa para generar los "
"botones y otros atributos del diálogo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1009
msgid "* wx.ICON_WARNING, causes the window to behave as a Windows warning."
msgstr ""
"* wx.ICON_WARNING, hace que la ventana se comporte como una advertencia de "
"Windows."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1010
msgid "* wx.OK, causes the window to display the standard OK button."
msgstr "* wx.OK, hace que la ventana muestre el botón Aceptar estándar."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1011
msgid "* And wx.CANCEL is the same for cancel."
msgstr "* Y wx.CANCEL hace lo mismo con Cancelar."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1012
msgid ""
"Unfortunately, if we just call gui.messageBox directly, it will usually "
"cause NVDA to hang, unless it is run from the main thread. To get around "
"that problem, we use wx.CallAfter to queue the dialog for display in the "
"main thread. However, wx.CallAfter can not call gui.messageBox directly: it "
"must do so through some other method or function. In this example we achieve "
"that by using a nested function the only purpose of which is the one-time "
"generation of that dialog."
msgstr ""
"Por desgracia, si llamamos a gui.messageBox directamente, generalmente hará "
"que NVDA se cuelgue, a menos que se ejecute desde el hilo principal. Para "
"resolver ese problema, usamos wx.CallAfter, que mete en cola el diálogo para "
"que se muestre desde el hilo principal. Sin embargo, wx.CallAfter no puede "
"llamar a gui.messageBox directamente: debe hacerlo a través de otro método o "
"función. En este ejemplo lo solucionamos mediante una función anidada cuyo "
"único propósito es generar una sola vez ese diálogo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1013
msgid "#### Example 2: A Three-Way Dialog"
msgstr "#### Ejemplo 2: un diálogo con tres caminos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1014
msgid ""
"Below is a more complex example, that shows how to return information from a "
"dialog, based upon which button was pressed. Note that there are many more "
"constants you can use, and types of dialog other than messageBox. This "
"section is only an introduction to the subject to get you started."
msgstr ""
"A continuación se encuentra un ejemplo más complejo, que muestra cómo "
"devolver información de un diálogo en función del botón que se ha pulsado. "
"Ten en cuenta que existen muchas más constantes que puedes utilizar, y tipos "
"de diálogos distintos a messageBox. Esta sección es sólo una introducción al "
"tema para dar los primeros pasos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1016
msgid "import wx"
msgstr "import wx"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1017
msgid "import gui"
msgstr "import gui"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1025
msgid "\t@script(gesture=\"kb:nvda+shift+t\")\t\t# Configure the key"
msgstr "\t@script(gesture=\"kb:nvda+shift+t\")\t\t# Configura la tecla"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1026
msgid "\tdef script_askPointlessQuestion(self, gesture):"
msgstr "\tdef script_askPointlessQuestion(self, gesture):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1027
msgid "\t\tdef askTheQuestion():\t\t\t# Define an internal function"
msgstr "\t\tdef askTheQuestion():\t\t\t# Definir una función interna"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1028
msgid ""
"\t\t\tresult = gui.messageBox(\"\"\"Warning! You are about to answer a "
"pointless question."
msgstr ""
"\t\t\tresult = gui.messageBox(\"\"\"¡Aviso! Estás a punto de responder una "
"pregunta tonta."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1029
msgid "Fortunately you have this great window to do it in!"
msgstr "¡Por suerte tienes esta fantástica ventana para hacerlo!"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1030
msgid "Do you wish to proceed?\"\"\","
msgstr "¿Deseas continuar?\"\"\","

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1031
msgid "\t\t\t\t\"Silly Question\", wx.YES_NO | wx.NO_DEFAULT | wx.CANCEL)"
msgstr "\t\t\t\t\"Pregunta Tonta\", wx.YES_NO | wx.NO_DEFAULT | wx.CANCEL)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1032
msgid "\t\t\tif result == wx.YES: answer = \"yes\""
msgstr "\t\t\tif result == wx.YES: answer = \"sí\""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1033
msgid "\t\t\telif result == wx.NO: answer = \"no\""
msgstr "\t\t\telif result == wx.NO: answer = \"no\""

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1034
msgid "\t\t\telse: return"
msgstr "\t\t\telse: return"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1035
msgid ""
"\t\t\tgui.messageBox(\"You answered %s to the pointless question.\" "
"%(answer), \"Silly Answer\", wx.OK)"
msgstr ""
"\t\t\tgui.messageBox(\"Has respondido %s a la pregunta tonta.\" %(answer), "
"\"Respuesta Tonta\", wx.OK)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1036
msgid "\t\twx.CallAfter(askTheQuestion)"
msgstr "\t\twx.CallAfter(askTheQuestion)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1038
msgid "### Using The Log"
msgstr "### Usar el registro"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1039
msgid ""
"There are more in-depth things you can do with the log than what will be "
"shown here."
msgstr ""
"Hay más cosas en profundidad que puedes hacer con el registro, y que se "
"mostrarán aquí."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1040
msgid ""
"However, most of the time, all you want to do is write a basic message into "
"the log. To do that, you can import NVDA's log singleton, and call its "
"methods just like any others."
msgstr ""
"Sin embargo, la mayor parte del tiempo, todo lo que querrás hacer es "
"escribir un mensaje básico en el registro. Para hacerlo, puedes importar el "
"objeto instanciado de NVDA log, y llamar a sus métodos como haces con "
"cualquier otro."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1044
msgid "from logHandler import log  # This is what you need for logging"
msgstr "from logHandler import log  # Esto es lo que necesitas para registrar"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1045
msgid "from datetime import date"
msgstr "from datetime import date"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1048
msgid "\t\tgesture=\"kb:nvda+shift+l\",  # Configure the key"
msgstr "\t\tgesture=\"kb:nvda+shift+l\",  # Configura el atajo"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1051
msgid "\tdef script_captainsLog(self, gesture):"
msgstr "\tdef script_captainsLog(self, gesture):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1052
msgid "\t\ttoday = date.today().strftime(\"%Y.%m.%d\")"
msgstr "\t\ttoday = date.today().strftime(\"%Y.%m.%d\")"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1053
#, python-brace-format
msgid "\t\tlog.info(f\"NVDA log. Earth date, {today}.\")"
msgstr "\t\tlog.info(f\"Registro de NVDA. Fecha en la Tierra, {today}.\")"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1054
msgid "\t\tlog.warning(\"These are the add-ons of the screen reader NVDA.\")"
msgstr ""
"\t\tlog.warning(\"Estos son los complementos del lector de pantalla NVDA.\")"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1055
msgid ""
"\t\tlog.debugWarning(\"Its continuing mission. To seek out new opportunities "
"to improve lives!\")"
msgstr ""
"\t\tlog.debugWarning(\"Su misión continua. ¡Buscar nuevas oportunidades para "
"mejorar vidas!\")"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1056
msgid "\t\tlog.debug(\"To empower users!\")"
msgstr "\t\tlog.debug(\"¡Empoderar a los usuarios!\")"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1057
msgid ""
"\t\tlog.error(\"and to boldly access software that no screen reader has made "
"accessible before!\")"
msgstr ""
"\t\tlog.error(\"¡Y acceder a software que ningún otro lector de pantalla "
"había hecho accesible antes!\")"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1059
msgid ""
"If you run the above in the NVDA scratchpad or a global plugin, and call it "
"by pressing the Shift+NVDA+L key sequence, you will receive between zero and "
"five log entries, depending on how your NVDA logging level is configured in "
"general settings. For example, if your log level is set to \"debug\", you "
"will find them all there, but only four of them if your log level is set to "
"\"debug warning\"."
msgstr ""
"Si ejecutas lo anterior en el scratchpad de NVDA o como extensión global, y "
"lo invocas pulsando la secuencia de teclas NVDA+shift+l, recibirás entre 0 y "
"cinco entradas en el registro, dependiendo de la configuración del nivel de "
"registro que tengas en las opciones generales. Por ejemplo, si tu nivel de "
"registro está configurado en \"Depuración\", encontrarás todas, pero sólo "
"cuatro de ellas si el nivel de registro está configurado en \"Aviso de "
"depuración\"."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1060
msgid ""
"Note: while developing add-ons, it is usually wise to have the most "
"debugging that you can, so you can gather information when things go wrong. "
"For that reason, you may want to set your logging level to \"debug\"."
msgstr ""
"Nota: mientras desarrollas complementos, normalmente es deseable disponer de "
"la máxima depuración posible, de tal forma que puedas recopilar información "
"cuando las cosas vayan mal. Por este motivo, puedes querer configurar tu "
"nivel de registro en \"Depuración\"."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1061
msgid "### Threading"
msgstr "### Concurrencia"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1063
msgid ""
"If a routine in an add-on runs for a long time, NVDA would appear to freeze "
"or stop responding altogether. This is where threads come in - running a "
"long-running task with a different thread, allowing NVDA to remain "
"responsive."
msgstr ""
"Si un procedimiento en un complemento se ejecuta durante un largo periodo de "
"tiempo, NVDA podría parecer congelado o dejar de responder. Aquí es donde "
"entran en escena los hilos - ejecutando una tarea de larga duración en un "
"hilo diferente, permitiendo que NVDA siga respondiendo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1064
msgid ""
"Although Python does support threads, it can run one thing at a time due to "
"global interpreter lock (GIL). Thus, on computers with multiple processor "
"cores, it is advised to use processes (via multiprocessing module) to allow "
"Python interpreters to run on all cores. However, this workaround introduces "
"latency and overhead, so for many scenarios, threads are preferred."
msgstr ""
"Aunque Python soporta hilos, sólo puede ejecutar una tarea a la vez debido "
"al bloqueo global del intérprete (GIL). Por tanto, en ordenadores con varios "
"núcleos de procesador, se aconseja el uso de procesos (mediante el módulo "
"multiprocessing) para permitir que los intérpretes de Python se ejecuten en "
"todos los núcleos. Sin embargo, esta solución introduce latencia y "
"sobrecarga, por lo que en muchos escenarios se prefieren los hilos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1065
msgid "#### Threading scenarios"
msgstr "#### Escenarios de concurrencia"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1066
msgid "Threads are useful if"
msgstr "Los hilos son útiles si"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1067
msgid ""
"* You need to work on something while waiting for a result. For example, if "
"a global plugin needs to access the internet for various tasks, a separate "
"thread can be used for obtaining online information while NVDA is busy with "
"something else."
msgstr ""
"* Necesitas trabajar en algo mientras esperas un resultado. Por ejemplo, si "
"una extensión global necesita acceder a Internet para diversas tareas, se "
"puede usar un hilo separado para obtener información en línea mientras NVDA "
"está ocupado con algo más."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1068
msgid ""
"* Monitor things in the background without interrupting NVDA. For example, "
"an overlay class defined in an app module can use a thread to announce "
"screen information as it changes in the background."
msgstr ""
"* Monitorizar tareas en segundo plano sin interrumpir a NVDA. Por ejemplo, "
"una clase superpuesta definida en un módulo de aplicación puede usar un hilo "
"para anunciar información de la pantalla mientras esta cambia en segundo "
"plano."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1069
msgid ""
"* Run tasks periodically. For example, a speech synthesizer can use a timer "
"thread to determine if a hardware synthesizer is ready or not."
msgstr ""
"* Ejecutar tareas periódicamente. Por ejemplo, un sintetizador de voz puede "
"usar un hilo temporizador para determinar si un sintetizador hardware está "
"listo o no."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1070
msgid "#### Threading examples"
msgstr "#### Ejemplos de concurrencia"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1071
msgid "All examples use threading module unless noted otherwise."
msgstr ""
"Todos los ejemplos usan el módulo threading a no ser que se indique lo "
"contrario."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1072
msgid "Download content from a website via a global plugin:"
msgstr "Descargar contenido de un sitio web mediante una extensión global:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1073
#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1086
msgid "\timport threading"
msgstr "\timport threading"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1074
msgid "\timport urllib"
msgstr "\timport urllib"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1075
msgid "\t# Other parts of the global plugin."
msgstr "\t# Otras partes de la extensión global."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1076
msgid "\tdef downloadContent(address):"
msgstr "\tdef downloadContent(address):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1077
msgid "\t\treturn urllib.urlopen(address)"
msgstr "\t\treturn urllib.urlopen(address)"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1078
msgid "\tclass GlobalPlugin(globalPluginHandler.GlobalPlugin):"
msgstr "\tclass GlobalPlugin(globalPluginHandler.GlobalPlugin):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1079
msgid "\t\tdef script_downloadContent(self, gesture):"
msgstr "\t\tdef script_downloadContent(self, gesture):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1080
msgid ""
"\t\t\tdownloadThread = threading.Thread(target=downloadContent, "
"args=(someWebsite,))"
msgstr ""
"\t\t\tdownloadThread = threading.Thread(target=downloadContent, "
"args=(someWebsite,))"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1081
msgid "\t\t\tdownloadThread.start()"
msgstr "\t\t\tdownloadThread.start()"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1082
msgid "\t\t\tdownloadThread.join()"
msgstr "\t\t\tdownloadThread.join()"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1083
msgid ""
"We need to use a separate thread to access web content because urllib "
"(urllib.request in Python 3) blocks, making NVDA appear to freeze."
msgstr ""
"Necesitamos usar un hilo separado para acceder al contenido web porque "
"urllib (urllib.request en Python 3) bloquea, haciendo que NVDA parezca "
"colgarse."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1084
msgid "Announce a message ten seconds after pressing a key from an app:"
msgstr ""
"Anunciar un mensaje diez segundos después de pulsar una tecla en una "
"aplicación:"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1085
msgid ""
"There are two timers you can use: threading.Timer or wx.Timer. The below app "
"module example uses threading.Timer."
msgstr ""
"Hay dos temporizadores que puedes usar: threading.Timer o wx.Timer. El "
"siguiente ejemplo de módulo de aplicación usa threading.Timer."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1088
msgid "\t# Other parts of an app module."
msgstr "\t# Otras partes de un módulo de aplicación."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1089
msgid "\tclass AppModule(appModuleHandler.AppModule):"
msgstr "\tclass AppModule(appModuleHandler.AppModule):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1090
msgid "\t\tdef script_saySomething(self, gesture):"
msgstr "\t\tdef script_saySomething(self, gesture):"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1091
msgid ""
"\t\t\tmessageTimer = threading.Timer(10.0, ui.message, args=(\"this is a "
"timer message\", ))"
msgstr ""
"\t\t\tmessageTimer = threading.Timer(10.0, ui.message, args=(\"este es un "
"mensaje de temporizador\", ))"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1092
msgid "\t\t\tmessageTimer.start()"
msgstr "\t\t\tmessageTimer.start()"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1093
msgid ""
"One limitation with threading.Timer is that it does not support repetitive "
"tasks, and for these, you need to use wx.Timer."
msgstr ""
"Una limitación de threading.Timer es que no soporta tareas repetitivas, para "
"ello deberás usar wx.Timer."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1094
msgid "### Storing and Using Persistent Information Outside Your Add-on"
msgstr ""
"### Almacenar y usar información persistente más allá de tu complemento"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1095
msgid "**Coming Soon**"
msgstr "**Próximamente**"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1096
msgid "## Miscellaneous information"
msgstr "## Información miscelánea"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1097
msgid ""
"Please add additional material to this guide. We at NVDA Add-on Team welcome "
"contributions from other add-on developers and users around the world."
msgstr ""
"Por favor, añade material adicional a esta guía. En el Equipo de "
"Complementos de NVDA agradecemos las contribuciones de otros desarrolladores "
"y usuarios de complementos por todo el mundo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1098
msgid "## Appendices"
msgstr "## Apéndices"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1099
msgid "### Appendix A: add-on terms dictionary"
msgstr "### Apéndice A: Diccionario de términos de complemento"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1100
msgid ""
"The below terms are used throughout this development guide as well as in the "
"add-ons community to refer to add-ons, development processes and so on."
msgstr ""
"Los siguientes términos se utilizan a lo largo de esta guía de desarrollo, "
"así como en la comunidad de complementos para referirse a complementos, "
"procesos de desarrollo, etcétera."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1101
msgid ""
"* Add-on: an extension for a program. In NVDA world, add-ons refer to "
"additional packages users can install to extend NVDA's functionality, "
"improve support for an app, or add new speech synthesizers or braille "
"displays."
msgstr ""
"* Complemento: una extensión para un programa. En el mundo de NVDA, un "
"complemento se refiere a paquetes adicionales que los usuarios pueden "
"instalar para ampliar la funcionalidad de NVDA, mejorar la compatibilidad "
"con una aplicación o añadir nuevos sintetizadores de voz o pantallas braille."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1102
msgid "* Application: synonymous with program."
msgstr "* Aplicación: sinónimo de programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1103
msgid "* App module: a module that adds or improves support for a program."
msgstr ""
"* Módulo de aplicación: un módulo que añade o mejora el soporte para un "
"programa."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1104
msgid "* API: Application Programming Interface."
msgstr ""
"* API: interfaz de programación de aplicaciones. En inglés, Application "
"Programming Interface."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1105
msgid "* Base class: parent class of an object."
msgstr "* Clase base: clase padre de un objeto."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1106
msgid ""
"* Braille display: a hardware or software that outputs text via tactile "
"braille output and/or allows users to enter text via a braille keyboard or "
"other input mechanisms."
msgstr ""
"* Pantalla Braille: un hardware o software que emite texto a través de una "
"salida braille táctil y/o permite a los usuarios ingresar texto a través de "
"un teclado braille u otros mecanismos de entrada."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1107
msgid ""
"* Built-in module: a module that comes with NVDA that add-ons can optionally "
"override or extend."
msgstr ""
"* Módulo integrado: un módulo que viene con NVDA y que puede ser "
"sobreescrito o ampliado por los complementos opcionalmente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1108
msgid ""
"* Caret: cursor shown on screen, usually seen when editing text or "
"navigating documents."
msgstr ""
"* Caret: cursor que se muestra en pantalla, generalmente visto al editar "
"texto o al navegar por documentos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1109
msgid "* Class: definition of an object."
msgstr "* clase: definición de un objeto."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1110
msgid ""
"* Driver: a program that allows another program to talk to other software or "
"hardware."
msgstr ""
"* Controlador: programa que permite que otro programa se comunique con "
"cierto software o hardware."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1111
msgid ""
"* Enhancer: a module that adds usability enhancements in tandem with NVDA."
msgstr ""
"* Potenciador: módulo que añade mejoras de usabilidad en tándem con NVDA."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1112
msgid ""
"* Event: a routine called when certain things happen such as character "
"input, changes to text on screen, a checkbox being checked and so on."
msgstr ""
"* Evento: una rutina llamada cuando suceden ciertas cosas, como la "
"introducción de caracteres, cambios en el texto de la pantalla, una casilla "
"de verificación marcada y así sucesivamente."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1113
msgid ""
"* Function: a piece of code that performs something given one or more input "
"parameters and optionally returns something."
msgstr ""
"* Función: un pedazo de código que realiza algo con uno o más parámetros de "
"entrada y opcionalmente devuelve algo."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1114
msgid ""
"* Gesture: a piece of input such as key presses, touchscreen flicks, braille "
"keys and so on."
msgstr ""
"* Gesto: una entrada como pulsaciones de teclas, gestos en la pantalla "
"táctil, teclas braille, etcétera."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1115
msgid "* Global plugin: a module that adds features everywhere."
msgstr ""
"* Extensión global: un módulo que añade características en todas partes."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1116
msgid ""
"* Module: collection of variables, functions, classes and others inside a "
"file."
msgstr ""
"* Módulo: conjunto de variables, funciones, clases y otros dentro de un "
"fichero."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1117
msgid "* Object: a class definition coming to life."
msgstr "* Objeto: una definición de clase con vida propia."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1118
msgid "* Script: a function that is attached (assigned) to a gesture."
msgstr "* Script: una función que se adjunta (asigna) a un gesto."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1119
msgid ""
"* Speech synthesizer: a software or hardware that converts text and various "
"speech commands sent to it into voice output."
msgstr ""
"* Sintetizador de voz: un software o hardware que convierte texto y varias "
"órdenes de voz enviados a la salida de voz."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1120
msgid "* Variable: a temporary placeholder for some data."
msgstr "* Variable: un marcador de posición temporal para algunos datos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1121
msgid ""
"### Appendix B: Programming and Python concepts every add-on developer needs "
"to know"
msgstr ""
"### Apéndice B: Programación y conceptos de Python que todo desarrollador de "
"complementos necesita saber"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1122
msgid ""
"The below list summarizes concepts all add-on developers will need to know "
"when writing add-ons."
msgstr ""
"La siguiente lista resume los conceptos que todos los desarrolladores de "
"complementos necesitarán conocer cuando escriban complementos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1123
msgid ""
"* API: a set of documentation and code samples used to let a program or "
"hardware interface with other software or hardware."
msgstr ""
"* API: un conjunto de documentación y muestras de código utilizado para "
"permitir que un programa o hardware interactúe con otro software o hardware."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1124
msgid ""
"* Base class: a class that provides base methods, attributes and properties "
"for other objects to inherit and extend. Synonymous with superclass and "
"parent class."
msgstr ""
"* Clase base: una clase que proporciona métodos base, atributos y "
"propiedades para que otros objetos hereden y amplíen. Sinónimo de superclase "
"y clase padre."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1125
msgid ""
"* Child class: a class that derives its power from one or more base classes."
msgstr ""
"* Clase hija: una clase que deriva su poder de una o más clases básicas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1126
msgid ""
"* Class: definition of objects, including methods, attributes and expected "
"behaviors. All Python classes and attributes are public; they can \"become "
"private\" through use of naming conventions such as prefixing a variable "
"name with underscores (_)."
msgstr ""
"* Clase: definición de objetos, incluyendo métodos, atributos y "
"comportamientos esperados. Todas las clases y atributos de Python son "
"públicos; pueden \"llegar a ser privados\" mediante el uso de convenciones "
"de nomenclatura como prefijar un nombre de variable con subrayados (_)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1127
msgid "* Code block: collection of code."
msgstr "* Bloque de código: colección de código."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1128
msgid ""
"* Compiling: translating a high-level programming language into a low-level "
"language suitable for machine execution."
msgstr ""
"* Compilación: traducción de un lenguaje de programación de alto nivel a un "
"lenguaje de programación de bajo nivel apto para la ejecución en máquina."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1129
msgid ""
"* Event-driven programming: a programming paradigm based on following, "
"reacting to and handling events."
msgstr ""
"* Programación dirigida por eventos: un paradigma de programación basado en "
"el seguimiento, la reacción y el manejo de eventos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1130
msgid ""
"* Exception: one or more runtime circumstances that prevent normal operation "
"of a program such as being denied access to a resource, name usage problem "
"in code and other cases."
msgstr ""
"* Excepción: una o más circunstancias en tiempo de ejecución que impiden el "
"funcionamiento normal de un programa, como negarle el acceso a un recurso, "
"problemas de uso del nombre en el código y otros casos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1131
msgid "* GUI: Graphical User Interface."
msgstr "* GUI: Interfaz gráfica de usuario."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1132
msgid ""
"* Handle: an opaque reference to a resource such as a file, TCP socket, "
"window and so on."
msgstr ""
"* Manejador: una referencia opaca a un recurso tal como un archivo, socket "
"TCP, ventana, etcétera."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1133
msgid ""
"* Has versus is relationship: former referring to attributes of a single "
"class, the latter referring to inherited classes."
msgstr ""
"* Relación tiene vs. es: el primero se refiere a atributos de una sola "
"clase, y el segundo a clases heredadas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1134
msgid ""
"* Indentation-based syntax: use of indentations such as tabs to denote code "
"blocks."
msgstr ""
"* Sintaxis basada en la indentación: uso de indentaciones tales como "
"tabulaciones para denotar bloques de código."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1135
msgid ""
"* Inheritance: ability for one or more parent classes to provide base "
"methods and attributes for child classes to override or extend as the need "
"arises."
msgstr ""
"* Herencia: habilidad para que una o más clases padres provean métodos y "
"atributos básicos para que las clases hijas sobreescriban o amplíen según "
"surja la necesidad."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1136
msgid ""
"* Interpreting: running a program written in a high-level language without "
"compiling it first."
msgstr ""
"* Interpretar: ejecutar un programa escrito en un lenguaje de alto nivel sin "
"compilarlo primero."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1137
msgid "* Object: runtime instance of one or more classes."
msgstr "* Objeto: instancia de ejecución de una o más clases."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1138
msgid ""
"* Object hierarchy: how screen elements are organized via parent-child "
"(container-contained) relationship."
msgstr ""
"* Jerarquía de objetos: cómo se organizan los elementos de pantalla mediante "
"la relación padre-hijo (contenedor - contenido)."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1139
msgid ""
"* Object-oriented programming: a programming paradigm that defines solutions "
"to problems or represent real-life things via classes and objects."
msgstr ""
"* Programación orientada a objetos: un paradigma de programación que define "
"soluciones a problemas o representa cosas reales a través de clases y "
"objetos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1140
msgid ""
"* Scope: where variables, functions, classes and objects are defined in code."
msgstr ""
"* Alcance: dónde las variables, funciones, clases y objetos se definen en "
"código."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1141
msgid "### Appendix C: Add-on type comparison"
msgstr "### Apéndice C: Comparación de tipos de complementos"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1142
msgid "The following table compares various add-on types and when to use them."
msgstr ""
"La siguiente tabla compara varios tipos de complementos y cuándo utilizarlos."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1143
msgid "| Task or feature | Global plugin | App module | Driver | Enhancer |"
msgstr ""
"| Tarea o característica | Extensión global | Módulo de aplicación | "
"Controlador | Potenciador |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1144
msgid "| ------- | --------- | -------- | -------- | -------- |"
msgstr "| ------- | --------- | -------- | -------- | -------- |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1145
msgid "| Can be used everywhere | Yes | No | Yes | Yes |"
msgstr "| Puede usarse en todas partes | Sí | No | Sí | Sí |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1146
msgid ""
"| Naming restrictions | No (limited by Windows file naming conventions) | "
"Must be name of the executable | No (limited by Windows file naming "
"conventions) | No (limited by Windows file naming conventions) |"
msgstr ""
"| Restricciones de nombrado | No (limitado por las convenciones de nombrado "
"de ficheros de Windows) | Debe llamarse como el ejecutable | No (limitado "
"por las convenciones de nombrado de ficheros de Windows) | No (limitado por "
"las convenciones de nombrado de ficheros de Windows) |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1147
msgid ""
"| Retrieve various controls, including focused control | Yes | Yes | No | "
"Yes |"
msgstr ""
"| Recupera varios controles, incluyendo el control enfocado | Sí | Sí | No | "
"Sí |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1148
msgid ""
"| Commands can be used everywhere | Yes | No | Braille display drivers only "
"if defined | Yes |"
msgstr ""
"| Las órdenes pueden utilizarse en cualquier lugar | Sí | No | Sólo los "
"controladores de pantalla braille si se definió | Sí |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1149
msgid "| Handle events such as focus changes | Yes | Yes | No | Yes |"
msgstr "| Manejar eventos tales como cambios del foco | Sí | Sí | No | Sí |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1150
msgid "| Define custom objects to represent controls | Yes | Yes | No | No |"
msgstr ""
"| Definir objetos personalizados para representar controles | Sí | Sí | No | "
"No |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1151
msgid ""
"| Define custom actions to be performed when the module loads and unloads | "
"Yes | Yes | Yes | Yes |"
msgstr ""
"| Definir acciones personalizadas al realizarse cuando el módulo se cargue y "
"se descargue | Sí | Sí | Sí | Sí |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1152
msgid ""
"| Perform actions when profile switching occurs and other actions | Yes | "
"Yes | Yes | Yes |"
msgstr ""
"| Definir acciones personalizadas a realizarse cuando ocurran cambios de "
"perfil y otros eventos | Sí | Sí | Sí | Sí |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1153
msgid "| Can modify object attributes at runtime | No | Yes | No | No |"
msgstr ""
"| Puede modificar atributos de objeto en tiempo de ejecución | No | Sí | No "
"| No |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1154
msgid ""
"| Modify speech and other output routines and presentation experience (i.e. "
"speech.cancelSpeech, braille.handler.update, etc.) | Yes | yes | No | "
"Depends on enhancer |"
msgstr ""
"| Modifica rutinas de salida de voz y otras y la experiencia de presentación "
"(Por ejemplo speech.cancelSpeech, braille.handler.update, etc.) | Sí | Sí | "
"No | Depende del potenciador |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1155
msgid "| Include custom settings | Yes | Yes | Yes | Yes |"
msgstr "| Incluir opciones personalizadas | Sí | Sí | Sí | Sí |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1156
msgid ""
"| Can patch NVDA functions, classes and modules at will | Yes | Not advised "
"| No | Not advised |"
msgstr ""
"| Puede parchear funciones de NVDA, classes y módulos a voluntad | Sí | No "
"se aconseja | No | No se aconseja |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1157
msgid "| Subject to configuration profile switches | No | Yes | Yes | Yes |"
msgstr "| Sujeto a cambios de perfil de configuración | No | Sí | Sí | Sí |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1158
msgid ""
"| Can call external libraries written in C and other languages and bundled "
"as DLLs | Yes | Yes | Yes | Yes |"
msgstr ""
"| Puede llamar a bibliotecas externas escritas en C y otros lenguajes y "
"empaquetadas como DLLs | Sí | Sí | Sí | Sí |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1159
msgid ""
"### Appendix D: notes and references for scripters of other screen readers"
msgstr ""
"### Apéndice D: notas y referencias para creadores de scripts de otros "
"lectores de pantalla"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1160
msgid ""
"If you write scripts for screen readers such as JAWS for Windows or Window-"
"Eyes, be sure to go over this section as it introduces you to common tasks "
"you can do with NVDA and other notes."
msgstr ""
"Si escribes scripts para lectores de pantalla como JAWS para Windows o "
"Window-Eyes, asegúrate de repasar esta sección ya que te presenta las tareas "
"comunes que puedes realizar con NVDA y otras notas."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1161
msgid "| Task | NVDA or Python function/class/module | Notes |"
msgstr "| Tarea | función /clase/módulo de NVDA o de Python | Notas |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1162
msgid "| -------- | -------- | -------- |"
msgstr "| -------- | -------- | -------- |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1163
msgid "| Cancel speech | speech.cancelSpeech() | Stops speech. |"
msgstr "| Cancelar voz | speech.cancelSpeech() | Detiene la voz. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1164
msgid ""
"| Speak something | speech.speakMessage(message) or as part of ui."
"message(message) | the ui.message function also performs braille output. |"
msgstr ""
"| Verbalizar algo | speech.speakMessage(mensaje) o como parte de ui."
"message(mensaje) | la función ui.message también realiza la salida braille. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1165
msgid ""
"| Braille something | braille.handler.message(message) or ui."
"message(message) | Same as above. |"
msgstr ""
"| Braillificar algo | braille.handler.message(mensaje) o ui.message(mensaje) "
"| Igual que arriba. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1166
msgid ""
"| Show an HTML window | ui.browseableMessage(message, title, isHTML = True) "
"| Mimics virtual viewer except it'll be shown on screen. |"
msgstr ""
"| Mostrar una ventana HTML | ui.browseableMessage(mensaje, título, isHTML = "
"True) | Imita el visor virtual excepto a la hora de mostrarse en pantalla. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1167
msgid "| Retrieve focused object | something = api.getFocusObject() | |"
msgstr "| Recuperar objeto con el foco | algo = api.getFocusObject() | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1168
msgid ""
"| Retrieve foreground window | foreground = api.getForegroundObject() |  |"
msgstr ""
"| Recuperar ventana en primer plano | primerplano = api."
"getForegroundObject() |  |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1169
msgid "| Title of the active window (if present) | foreground.name | |"
msgstr "| Título de la ventana activa (si está presente) | foreground.name | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1170
msgid ""
"| Find out what object is navigator object | obj = api.getNavigatorObject() "
"| This may or may not be the focused control. |"
msgstr ""
"| Averiguar qué objeto es el navegador de objetos | obj = api."
"getNavigatorObject() | Este podrá ser o no ser el control enfocado. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1171
msgid ""
"| Retrieve window handle for a given object | hwnd = obj.windowHandle | "
"Obtain object via api.get*Object() functions. |"
msgstr ""
"| Recuperar el manejador de ventana para un objeto dado | hwnd = obj."
"windowHandle | Obtiene el objeto a través de las funciones api.get*Object(). "
"|"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1172
msgid ""
"| Check the name of the window class | obj.windowClassName == somename | |"
msgstr ""
"| Comprobar el nombre de la clase de ventana | obj.windowClassName == algo | "
"|"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1173
msgid ""
"| Making sure the parent object has the correct window control ID | if obj."
"parent.windowControlID == something: statement | |"
msgstr ""
"| Asegurarse de que el objeto padre tiene el ID de control de ventana "
"correcto | if obj.parent.windowControlID == algo: instrucciones | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1174
msgid ""
"| The parent object does not provide what I want, but the grandparent does | "
"something = obj.parent.parent.attribute | |"
msgstr ""
"| El objeto padre no proporciona lo que yo quiero, pero el abuelo lo hace | "
"algo = obj.parent.parent.atributo | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1175
msgid ""
"| The label of a list item is the name of its first child object | obj.name "
"= obj.firstChild.name | |"
msgstr ""
"| La etiqueta de un elemento de lista es el nombre de su primer objeto hijo. "
"| obj.name = obj.firstChild.name | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1176
msgid ""
"| I want the control label of the focused object and description of the "
"previous object to be announced when I press NVDA+Tab | In "
"reportFocus(self): obj.name += \" \" + obj.previous.description | |"
msgstr ""
"| Deseo que la etiqueta de control del objeto enfocado y la descripción del "
"objeto anterior se anuncien cuando pulso NVDA+Tab | En reportFocus(self): "
"obj.name += \" \" + obj.previous.description | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1177
#, fuzzy
#| msgid ""
#| "| Announce state changes if and only if the next object is the toolbar "
#| "I'm looking for | In event_stateChange(self): toolbar = obj.next; if "
#| "toolbar.role == controlTypes.ROLE_TOOLBAR and toolbar.attribute = "
#| "whatYouAreLookingFor and additional conditions ...: statement | For "
#| "better readability, place each statement on separate lines with correct "
#| "indents applied. |"
msgid ""
"| Announce state changes if and only if the next object is the toolbar I'm "
"looking for | In event_stateChange(self): toolbar = obj.next; if toolbar."
"role == controlTypes.Role.TOOLBAR and toolbar.attribute = "
"whatYouAreLookingFor and additional conditions ...: statement | For better "
"readability, place each statement on separate lines with correct indents "
"applied. |"
msgstr ""
"| Anunciar si el estado cambia si y sólo si el siguiente objeto es la barra "
"de herramientas que estoy buscando. | In event_stateChange(self): toolbar = "
"obj.next; if toolbar.role == controlTypes.ROLE_TOOLBAR and toolbar.attribute "
"= loqueestoybuscando y condiciones adicionales ...: instrucciones | Para una "
"mejor legibilidad, coloca cada declaración en líneas separadas con "
"indentaciones correctas. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1178
msgid ""
"| Announcing the name of an object on screen (provided that object "
"navigation can be used) | obj = api.getForegroundObject().route...; ui."
"message(obj.name) | Try placing each statement on its own line with correct "
"indents applied. Route refers to obj.next/previous/parent/firstChild/"
"lastChild/children[index]/getChild(index) and so on. |"
msgstr ""
"| Anunciar el nombre de un objeto en pantalla (siempre que se pueda utilizar "
"la navegación por objeto) | obj = api.getForegroundObject().ruta...; ui."
"message(obj.name) | Trata de colocar cada sentencia en su propia línea con "
"las indentaciones correctas aplicadas. La ruta se refiere a obj.next/"
"previous/parent/firstChild/lastChild/children[index]/getChild(index) y así "
"sucesivamente. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1179
#, fuzzy
#| msgid ""
#| "| Check if the object's role is what you want | obj.role == controlTypes."
#| "ROLE_* | ROLE_* can be any role you are looking for. |"
msgid ""
"| Check if the object's role is what you want | obj.role == controlTypes."
"Role.* | Role.* can be any role you are looking for. |"
msgstr ""
"| Comprueba si el rol del objeto es el que deseas | obj.role == controlTypes."
"ROLE_* | ROLE_* puede ser cualquier rol que estés buscando. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1180
msgid ""
"| Looking for a specific text in the object's name | sometext in obj.name | "
"This is a typical string membership task. |"
msgstr ""
"| Búsqueda de un texto específico en el nombre del objeto | textobuscado in "
"obj.name | Esta es una tarea típica de los miembros de una cadena de texto. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1181
msgid ""
"| Does the control's label start with a specific text | obj.name."
"startswith(sometext) | |"
msgstr ""
"| ¿Empieza la etiqueta del control con un texto específico? | obj.name."
"startswith(textobuscado) | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1182
msgid ""
"| Length of a text field with easily retrievable value | len(obj.value) | "
"This works if the value of the field can be found. |"
msgstr ""
"| Longitud de un campo de texto con valor fácilmente recuperable | len(obj."
"value) | Esto funciona si se puede encontrar el valor del campo. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1183
#, fuzzy
#| msgid ""
#| "| Is a checkbox checked | controlTypes.STATE_CHECKED in obj.states | obj."
#| "states is a set. First, verify that the role is a checkbox. |"
msgid ""
"| Is a checkbox checked | controlTypes.State.CHECKED in obj.states | obj."
"states is a set. First, verify that the role is a checkbox. |"
msgstr ""
"| Es una casilla marcada | controlTypes.STATE_CHECKED in obj.states | obj."
"states es un conjunto. En primer lugar, verifica que el rol es de una "
"casilla de verificación. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1184
msgid ""
"| How many items are in a list | someList.childCount | Provided that the "
"list provides correct underlying implementation to obtain item count. |"
msgstr ""
"| Cuántos elementos hay en una lista | algunaLista.childCount | Siempre que "
"la lista proporcione una correcta implementación subyacente para obtener el "
"recuento de elementos. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1185
msgid ""
"| Where the object is located on screen | obj.location | This returns a "
"tuple of four elements, namely x and y coordinates of the top-left corner of "
"the object, as well as length and width. For example, on the Shell (desktop) "
"object with screen resolution of 1920 by 1080 pixels, the return value will "
"be (0, 0, 1920, 1080. |"
msgstr ""
"| Dónde se encuentra el objeto en la pantalla | obj.location | Esto devuelve "
"una tupla de cuatro elementos, es decir, coordenadas x e y de la esquina "
"superior izquierda del objeto, así como longitud y anchura. Por ejemplo, en "
"el objeto Shell (escritorio) con una resolución de pantalla de 1920 por 1080 "
"píxeles, el valor de retorno será (0,0,1920,1080). |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1186
msgid ""
"| Is this an MSAA control | isinstance(obj, NVDAObjects.IAccessible."
"IAccessible) | A typical implementation is to import IAccessible from "
"NVDAObjects.IAccessible and doing isinstance(obj, IAccessible). |"
msgstr ""
"| ¿Es este un control MSAA? | isinstance(obj, NVDAObjects.IAccessible."
"IAccessible) | Una implementación típica es importar IAccessible desde "
"NVDAObjects.IAccessible y hacer isinstance(obj, IAccessible). |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1187
msgid ""
"| Position of a MSAA list item | item.IAccessibleChildID | Provided that "
"this is properly implemented. The default for controls other than list "
"items, treeview items and what not is 0. |"
msgstr ""
"| Posición de un elemento de lista MSAA | item.IAccessibleChildID | Siempre "
"y cuando esto se implemente correctamente. El valor predeterminado para los "
"controles que no sean elementos de lista o elementos de vista de árbol es 0. "
"|"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1188
msgid ""
"| I need to work with IAccessible object methods directly | obj."
"IAccessibleObject.method | First, find out how to use the given MSAA method "
"for a control, then retrieve the IAccessible object itself and call the "
"needed method. |"
msgstr ""
"| Necesito trabajar con métodos de un objeto IAccessible directamente | obj."
"IAccessibleObject.method | primero, descubre cómo usar el método MSAA dado "
"para un control, y después recupera el propio objeto IAccessible y llama al "
"método. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1189
msgid ""
"| Give me the UIA element that powers a certain UIA control | obj.UIAElement "
"| Useful if you wish to perform UIA client operations on this element. |"
msgstr ""
"| Dame el elemento UIA que proporciona un control UIA | obj.UIAElement | "
"útil si quieres realizar operaciones de cliente UIA en este elemento. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1190
msgid ""
"| Automation ID for a UIA element | obj.UIAAutomationID | First, check if "
"the object is a UIA control. |"
msgstr ""
"| ID de automatización para un elemento UIA | obj.UIAAutomationID | Primero, "
"comprueba si el objeto es un control UIA. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1191
msgid ""
"| Framework used to generate this UIA object | obj.UIAElement."
"cachedFrameworkID | The GUI framework used to program this object. Commonly "
"encountered frameworks are Direct UI, Windows Presentation Foundation (WPF) "
"controls with UIA enabled, XAML (eXtensible Application Markup Language) and "
"Microsoft Edge. |"
msgstr ""
"| Framework utilizado para generar este objeto UIA | obj.UIAElement."
"cachedFrameworkID | El framework GUI utilizado para programar este objeto. "
"Los frameworks más comunes son Direct UI, Windows Presentation Foundation "
"(WPF) con controles UIA habilitados, XAML (lenguaje extensible de "
"programación de aplicaciones) y Microsoft Edge. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1192
msgid ""
"| I want to ask UIA about values of a specific property | obj."
"_getUIACacheablePropertyValue(propertyID) | Provided that the object is a "
"UIA control, pass in the property ID you wish to know as an argument to this "
"function. If the property is supported, a valid value will be returned, "
"otherwise a COM error exception will be thrown. |"
msgstr ""
"| Quiero pedirle a UIA los valores de una propiedad específica | obj."
"_getUIACacheablePropertyValue(propertyID) | asumiendo que el objeto es un "
"control UIA, pásale el identificador de la propiedad que quieres conocer "
"como argumento de esta función. Si la propiedad está soportada, se devolverá "
"un valor válido. Si no, se lanzará un error COM. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1193
msgid ""
"| Executable name of any object | obj.appModule.appName | appModule is the "
"attribute of any object that can be represented within an app such as "
"focused control. |"
msgstr ""
"| Nombre ejecutable de cualquier objeto | obj.appModule.appName | appModule "
"es el atributo de cualquier objeto que se pueda representar dentro de una "
"aplicación como el control enfocado. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1194
msgid ""
"| Path to the executable for the foreground object | api."
"getForegroundObject().appModule.appPath | Obtains the path to the executable "
"for any object. |"
msgstr ""
"| Ruta al ejecutable del objeto en primer plano | api.getForegroundObject()."
"appModule.appPath | Obtiene la ruta al ejecutable de cualquier objeto. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1195
msgid ""
"| Provide information about a script in one go | scriptHandler."
"script(description, one or more gestures, category) | This is a decorator. "
"Typically you would write: @scriptHandler.script followed by the script "
"information. Gestures can be a single gesture (gesture=string) or a list "
"(gestures=[gestures]). |"
msgstr ""
"| Proporcionar información sobre un script en un solo paso | scriptHandler."
"script(descripción, uno o más gestos, categoría) | Este es un decorador. "
"Normalmente escribirías: @scriptHandler.script seguido de la información del "
"script. Gestos puede ser un único gesto (gesture=cadena) o una lista "
"(gestures=[gestos]). |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1196
msgid ""
"| Assign a keyboard command to a script | @scriptHandler."
"script(gesture=keyboardCommand) | Keyboard gestures start with a \"kb:\". |"
msgstr ""
"| Asignar un atajo de teclado a un script | @scriptHandler."
"script(gesture=atajoDeTeclado) | Los atajos de teclado empiezan por \"kb:\". "
"|"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1197
msgid ""
"| Send keystrokes | gesture.send() | This is to be called from a script with "
"the desired keystroke bound to it. |"
msgstr ""
"| Enviar combinaciones de teclas | gesture.send() | Se debe llamar desde un "
"script asociado a la combinación de teclas deseada. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1198
msgid ""
"| Handling multiple presses of a keystroke | scriptHandler."
"getLastScriptRepeatCount() | 0 means the command was pressed once. |"
msgstr ""
"| Manejo de múltiples pulsaciones de teclas | scriptHandler."
"getLastScriptRepeatCount() | 0 significa que la orden se ha pulsado una vez. "
"|"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1199
#, python-brace-format
msgid ""
"| I want to assign Control+Alt+number row to a script | @scriptHandler."
"script(gestures=[f\"kb:control+alt+{i}\" for i in range(10)]) | This uses a "
"combination of a decorator and formatted string literals (f strings) defined "
"inside a list comprehension. |"
msgstr ""
"| Quiero asignar control+alt+fila numérica a un script | @scriptHandler."
"script(gestures=[f\"kb:control+alt+{i}\" for i in range(10)]) | Se utiliza "
"una combinación de decorador y literales en cadena con formato (cadenas f) "
"definidos dentro de una lista comprimida. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1200
msgid ""
"| providing input help message | @scriptHandler."
"script(description=inputHelpMessage) | Effectively, a script's description "
"(assigned to its docstring) is treated as its input help message. |"
msgstr ""
"| proporcionar un mensaje de ayuda de entrada | @scriptHandler."
"script(description=mensajeDeAyudaDeEntrada) | Efectivamente, la descripción "
"del script (asignada a su cadena de documentación) se trata como su mensaje "
"de ayuda de entrada. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1201
msgid ""
"| Handle name changes | event_nameChange(self, obj, nextHandler) | The body "
"should consist of what should be done, ending with a call -to nextHandler() "
"function. |"
msgstr ""
"| Manejar los cambios de nombre | event_nameChange(self, obj, nextHandler) | "
"El cuerpo debe consistir en lo que se debe hacer, terminando con una llamada "
"a la función nextHandler (). |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1202
msgid ""
"| Live region change announcements | event_liveRegionChange(self, obj, "
"nextHandler) | By default, new text will be spoken and/or brailled. |"
msgstr ""
"| Anuncios de cambio de región viva | event_liveRegionChange(self, obj, "
"nextHandler) | De forma predeterminada, el nuevo texto será hablado y/o "
"braillificado. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1203
msgid ""
"| Instantly transform a window into a dialog | In "
"chooseNVDAObjectOverlayClasses(self, obj, clsList): if you found the window "
"you want: clsList.insert(0, NVDAObjects.Behaviors.Dialog) | Be sure to "
"identify this window that is really a dialog. If done correctly, contents of "
"this \"dialog\" will be announced automatically. |"
msgstr ""
"| Transformar instantáneamente una ventana en un diálogo | En "
"chooseNVDAObjectOverlayClasses(self, obj, clsList): si encuentras la ventana "
"que quieres: clsList.insert(0, NVDAObjects.Behaviors.Dialog) | Asegúrate de "
"identificar que esta ventana es realmente un diálogo. Si se hace "
"correctamente, los contenidos de este\"diálogo\" se anunciarán "
"automáticamente. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1204
msgid ""
"| I'm working with a terminal window | Inherit from NVDAObjects.behaviors."
"Terminal | |"
msgstr ""
"| Estoy trabajando con una ventana de terminal | Hereda de NVDAObjects."
"behaviors.Terminal | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1205
msgid ""
"| I want to add table navigation commands for an object that is not shown as "
"a table yet | Inherit from NVDAObjects.behaviors.RowWithFakeNavigation | "
"This class defines input help mode message and a base implementation for "
"table navigation commands (Control+Alt+arrows). |"
msgstr ""
"| Deseo añadir órdenes de navegación de tabla para un objeto que todavía no "
"se muestra como tabla | Hereda de NVDAObjects.behaviors."
"RowWithFakeNavigation | Esta clase define el mensaje del modo de ayuda de "
"entrada y una implementación básica para las órdenes de navegación de tabla "
"(Control+Alt+flechas). |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1206
msgid ""
"| I need pointers for providing improved support for a Java application | "
"NVDAObjects.JAB and JABHandler module | Java Access Bridge (32-bit and 64-"
"bit) should be installed (installed in 2019.3). |"
msgstr ""
"| Necesito punteros para proporcionar soporte mejorado para una aplicación "
"Java | NVDAObjects.JAB y módulo JABHandler | Java Access Bridge (de 32 y 64 "
"bits) debería instalarse (instalado en 2019.3). |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1207
msgid ""
"| Adding support for an app that has similar functionality as another app | "
"Import contents of the source app module via from appModuleName import * | "
"Commonly called \"aliasing\". |"
msgstr ""
"| Añadir soporte para una aplicación con funcionalidad similar a la de otra "
"aplicación | Importar contenidos del módulo de aplicación fuente a través de "
"from nombremódulo import * | Se conoce con el nombre de \"Aliasing\". |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1208
msgid ""
"| Play a tone | tones.beep(hertz, duration) | Duration in milliseconds. |"
msgstr ""
"| Reproducir un tono | tones.beep(hertz, duration) | Duración en milésimas "
"de segundo. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1209
msgid ""
"| Play a tone on the left speaker | tones.beep(hertz, duration, "
"leftVolume=100, rightVolume=0) | |"
msgstr ""
"| Reproducir un tono en el altavoz izquierdo | tones.beep(hertz, duration, "
"leftVolume=100, rightVolume=0) | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1210
msgid ""
"| Play a wave file | nvwave.playWaveFile(path) | For example, nvwave."
"playWaveFile(r\"test.wav\") |"
msgstr ""
"| Reproducir un fichero de sonido wav | nvwave.playWaveFile(path) | Por "
"ejemplo, nvwave.playWaveFile(r\"test.wav\") |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1211
msgid ""
"| Obtain text info for a given object | obj.TextInfo | Note the uppercase \"T"
"\". |"
msgstr ""
"| Obtener información de texto para un objeto determinado | obj.TextInfo | "
"Observa la \"T\" mayúscula. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1212
msgid ""
"| Check if keyboard echo (typed characters) is on | config.conf[\"keyboard\"]"
"[\"speakTypedCharacters\"] | |"
msgstr ""
"| Comprobar si el eco de teclado (caracteres tecleados) está activado | "
"config.conf[\"keyboard\"][\"speakTypedCharacters\"] | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1213
msgid ""
"| turn speak command keys on without opening a settings dialog | config."
"conf[\"keyboard\"][\"speakCommandKeys\"] = True | The user should toggle "
"this on via keyboard settings dialog. |"
msgstr ""
"| activar la verbalización de las teclas de órdenes sin abrir el cuadro de "
"diálogo de configuración | config.conf[\"keyboard\"][\"speakCommandKeys\"] = "
"True | El usuario debe activar esto a través del diálogo de opciones de "
"teclado. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1214
msgid ""
"| Is focus mode/forms mode active | obj.treeInterceptor.passThrough | If "
"True, focus/forms mode is on while using browse mode documents. |"
msgstr ""
"| El Modo foco/modo formularios está activo | obj.treeInterceptor."
"passThrough | Si es true, el modo foco/modo formularios está activado "
"mientras se utilizan los documentos del modo exploración. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1215
msgid ""
"| Is touchscreen support available | touchHandler.touchSupported() | If "
"true, touch support is active and available. |"
msgstr ""
"| Dispone de soporte para pantalla táctil | touchHandler.touchSupported() | "
"Si devuelve True, el soporte táctil está activo y disponible. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1216
msgid "| Get NVDA version | versionInfo.version | |"
msgstr "| Obtener la versión de NVDA | versionInfo.version | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1217
msgid ""
"| I wish to do something whenever configuration profiles are changed | "
"config.post_configProfileSwitch | You need to register a function to listen "
"to this action, then let this function do something when profiles are "
"changed. |"
msgstr ""
"| Quiero hacer algo cada vez que cambien los perfiles de configuración | "
"config.post_configProfileSwitch | debes registrar una función que escuche "
"esta acción, y hacer que haga algo cada vez que los perfiles cambien. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1218
msgid ""
"| Let me know if this is a snapshot build | __debug__ | If yes (True), this "
"is a snapshot build, otherwise this is a release version. |"
msgstr ""
"| Hazme saber si esta es una versión de desarrollo | __debug__ | Si esta "
"variable es True, la versión actual es de desarrollo. En cualquier otro "
"caso, es una liberación oficial. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1219
msgid ""
"| I need certain features in order for my code to work better | "
"hasattr(module, something) | This allows you to check for existence of a "
"feature/attribute you need, as it then allows you to support old and new "
"code paths. |"
msgstr ""
"| Necesito ciertas características para que mi código funcione mejor | "
"hasattr(módulo, algo) | esto te permite comprobar la existencia de una "
"característica o atributo que puedas necesitar, de tal forma que puedas dar "
"soporte a versiones antiguas y nuevas del código. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1220
msgid ""
"| Windows version | winVersion.getWinVer() | This returns current Windows "
"version (Windows release name, major.minor.build, installation type "
"(workstation, server, domain controller), and service pack if any). You can "
"also compare the version returned against a specific Windows release from "
"winVersion module e.g. winVersion.getWinVer() >= winVersion.WIN81. |"
msgstr ""
"| Versión de Windows | winVersion.getWinVer() | Devuelve la versión actual "
"de Windows (nombre de la versión, principal.menor.revisión, tipo de "
"instalación (estación de trabajo, servidor o controlador de dominio) y "
"service pack si lo hay). Se puede comparar la versión devuelta con una "
"versión de Windows concreta del módulo winVersion. Por ejemplo, winVersion."
"getWinVer() >= winVersion.WIN81. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1221
msgid ""
"| Is 64-bit Windows | os.environ[\"PROCESSOR_ARCHITEW6432\"] in (\"AMD64\", "
"\"ARM64\") or os.path.exists(r\"C:\\Program Files (X86) | The environment "
"variable method is more reliable. Starting from 2017.4, both AMD64 or ARM64 "
"must be checked, especially when supporting Windows 10 on ARM. |"
msgstr ""
"| ¿Es Windows de 64 bits? | os.environ(\"PROCESSOR_ARCHITEW6432\") in "
"[\"AMD64\", \"ARM64\"] o también os.path.exists(r\"C:\\Program Files "
"(X86)\") | El método variable de entorno es más fiable. A partir de 2017.4, "
"se debe comprobar tanto AMD64 como ARM64, especialmente cuando se admite "
"Windows 10 en ARM. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1222
msgid "| Registry access | winreg module | \"_winreg\" in Python 2. |"
msgstr "| Acceso al registro | Módulo winreg | \"_winreg\" en Python 2. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1223
msgid "| Open a website with the default web browser | os.startfile(URL) | |"
msgstr ""
"| Abrir un sitio web con el navegador web predeterminado | os.startfile(URL) "
"| |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1224
msgid ""
"| Download headers for a file on the web | resource = urllib.urlopen(URL) | |"
msgstr ""
"| Descargar cabeceras para un archivo en la web | resource = urllib."
"urlopen(URL) | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1225
msgid "| Work with JSON data | json module | |"
msgstr "| Trabajar con datos JSON | Módulo json | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1226
msgid ""
"| Allocate some memory somewhere | ctypes.windll.kernel32.VirtualAllocEx() | "
"The faster way to do this is winKernel.virtualAllocEx function. |"
msgstr ""
"| Reservar algo de memoria en algún lugar | ctypes.windll.kernel32."
"VirtualAllocEx() | La forma más rápida de hacerlo es la función winKernel."
"virtualAllocEx. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1227
msgid ""
"| Send a message to another process | ctypes.windll.user32.SendMessageW() | "
"The shorter way is winUser.sendMessage() function. |"
msgstr ""
"| Enviar un mensaje a otro proceso | ctypes.windll.user32.SendMessageW() | "
"El camino más corto es la función winUser.sendMessage(). |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1228
msgid ""
"| Current time in seconds | time.time() | This returns seconds elapsed from "
"January 1, 1970 at midnight. |"
msgstr ""
"| Hora actual en segundos | time.time() | Devuelve segundos transcurridos "
"desde el 1 de enero de 1970 a medianoche. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1229
msgid ""
"| Create a message box | gui.messageBox | A thin wrapper around wx."
"MessageBox class. |"
msgstr ""
"| Crear un cuadro de mensaje | gui.messageBox | Una fina envoltura alrededor "
"de la clase wx.MessageBox. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1230
msgid "| Create a custom dialog | wx.Dialog | |"
msgstr "| Crear un diálogo personalizado | wx.Dialog | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1231
msgid ""
"| Run multiple background tasks at once | threading.Thread | In reality, due "
"to internal issues, Python will run one thread after another. This approach "
"is useful if you want to run a background task while making NVDA remain "
"responsive. |"
msgstr ""
"| Ejecutar varias tareas en segundo plano a la vez | threading.Thread | En "
"realidad, debido a problemas internos, Python ejecutará un hilo tras otro. "
"Este enfoque es útil si deseas ejecutar una tarea en segundo plano mientras "
"haces que NVDA siga respondiendo. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1232
msgid "| Run something periodically | wx.PyTimer or threading.Timer | |"
msgstr "| Ejecutar algo periódicamente | wx.PyTimer o threading.Timer | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1233
msgid ""
"| Tally occurrence of text in a document | collections.Counter | Be sure to "
"have a list of words from a text file before running a tally on it. |"
msgstr ""
"| Ocurrencia del recuento de texto en un documento | collections.Counter | "
"Asegúrate de tener una lista de palabras de un archivo de texto antes de "
"ejecutar una cuenta en él. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1234
msgid ""
"| Create a dynamic array | list object | Python's list object ([]) is a "
"dynamic array. |"
msgstr ""
"| Crear una matriz dinámica | Objeto list | El objeto de lista de Python "
"([]) es una matriz dinámica. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1235
msgid ""
"| Work with associative arrays | dict object | Python's dictionary ({}) "
"object is another name for associative array, sometimes called a map. |"
msgstr ""
"| Trabajar con matrices asociativas | Objeto dict | El objeto diccionario de "
"Python ({}) es otro nombre para la matriz asociativa, a veces llamada mapa. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1236
msgid ""
"| Open, parse, and save config files | config module or configobj module | |"
msgstr ""
"| Abrir, analizar y guardar archivos de configuración | módulo config o "
"módulo configobj | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1237
msgid ""
"| I wish to make my code run faster and error-free | DO NOT DO IT UNLESS YOU "
"REALLY NEED TO! | To paraphrase a quote from a famous programmer, \"don't "
"optimize unless you want to go through headaches\". |"
msgstr ""
"| Quiero que mi código se ejecute más rápido y sin errores | ¡No lo hagas a "
"menos que sea necesario! | Citando a un conocido programador, \"No optimices "
"si no quieres tener dolores de cabeza\". |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1238
msgid ""
"| I want to release version 1.0 of my code with everything included | NEVER "
"DO THAT UNLESS YOU KNOW WHY,  know WHAT YOU ARE DOING, OR SPECIFIED BY A "
"CONTRACT YOU SIGNED! | |"
msgstr ""
"| Quiero liberar la versión 1.0 de mi código con todo incluido | ¡Nunca lo "
"hagas a menos que sepas por qué, sepas qué estás haciendo o lo especifique "
"un contrato que hayas firmado! | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1239
msgid ""
"| I wish to bring a feature from another screen reader to NVDA | Justify why "
"and plan accordingly | |"
msgstr ""
"| Me gustaría traer una función de otro lector de pantalla a NVDA | "
"Justifica por qué y planéalo adecuadamente | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1240
msgid ""
"| I want to contribute features of my add-on to NVDA screen reader | Send in "
"a pull request and prepare to answer questions from reviewers | Sometimes, a "
"feature or two from an add-on do land in NVDA screen reader but after going "
"through pull request review process. For more information, see NV Access's "
"contributing guidelines. |"
msgstr ""
"| Quiero integrar funciones de mi complemento en el lector de pantalla NVDA "
"| Envía una solicitud de cambios y prepárate para responder a las preguntas "
"de los revisores | A veces, una o dos características de un complemento "
"aterrizan en el lector de pantalla NVDA, pero después de pasar por un "
"proceso de revisión en una solicitud de cambios. Para más información, mira "
"las pautas de contribución de NV Access. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1241
msgid "### Appendix E: Python 2 versus 3"
msgstr "### Apéndice E: Python 2 frente a 3"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1242
msgid ""
"The following describes notable changes between Python 2 and 3 and tips for "
"making your add-on Python 2 and 3 compatible."
msgstr ""
"La siguiente tabla describe cambios notables entre Python 2 y 3 y da "
"consejos para hacer que tu complemento sea compatible con ambas versiones."

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1243
msgid "| Concept or task | Python 2| Python 3 | Compatibility tips |"
msgstr ""
"| Concepto o tarea | Python 2 | Python 3 | Consejos de compatibilidad |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1244
msgid "| ------- | --------- | -------- | -------- |"
msgstr "| ------- | --------- | -------- | -------- |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1245
msgid ""
"| Print text | print text | print(text) | The latter also works on Python 2. "
"|"
msgstr ""
"| Imprimir texto | print texto | print(texto) | Esta última también funciona "
"en Python 2. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1246
msgid ""
"| Default text format | ANSI | Unicode | Unicode is preferred. To do so, "
"prefix text with a \"u\". |"
msgstr ""
"| Formato predeterminado del texto | ANSI | Unicode | Se prefiere Unicode. "
"Para usarlo, prefija el texto con una \"u\". |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1247
msgid ""
"| Range | xrange | range | If you are not concerned with performance, use "
"range. |"
msgstr ""
"| Rango | xrange | range | Si no te importa el rendimiento, usa range. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1248
msgid "| Reduce/accumulate | reduce | functools.reduce | |"
msgstr "| Reducir/Acumular | reduce | functools.reduce | |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1249
msgid ""
"| Map and filter returns | list | iterator | If you want maximum "
"compatibility, wrap a call to map or filter inside a list function call. |"
msgstr ""
"| Map y Filter devuelven | lista | iterador | Si quieres compatibilidad "
"máxima, envuelve la llamada a map o filter en una llamada a la función list. "
"|"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1250
msgid ""
"| Exception aliasing | exception, e | exception as e | The latter works on "
"Python 2. |"
msgstr ""
"| Alias de excepciones | exception, e | exception as e | La última también "
"funciona en Python 2. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1251
msgid ""
"| Relative import | import relativeModule | from . import relativeModule | "
"The latter also works on Python 2. |"
msgstr ""
"| Importación relativa | import module | from . import module | La última "
"también funciona en Python 2. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1252
msgid ""
"| Registry access | _winreg | winreg | For maximum compatibility, use "
"winreg, and on Python 2, import _winreg as winreg. |"
msgstr ""
"| Acceso al registro | _winreg | winreg | Para dar máxima compatibilidad usa "
"winreg, y en Python 2 import _winreg as winreg. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1253
msgid ""
"| Dictionary item/key/value iteration | dict.iteritems/iterkeys/itervalues | "
"dict.items/keys/values | In case of dict.keys, one can just iterate through "
"the dictionary itself. |"
msgstr ""
"| Iteración por elementos/claves/valores en un diccionario | dict.iteritems|"
"iterkeys|itervalues | dict.items/keys/values | En el caso de dict.keys, se "
"puede iterar por el propio diccionario. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1254
msgid ""
"| Strictly integer division | / | // | The former now performs regular "
"division on Python 3. |"
msgstr ""
"| División estrictamente entera | / | // | El primero ahora hace una "
"división normal en Python 3. |"

#: ..\python_docs\NVDA-Add-on-Development-Guide.py:1255
msgid ""
"| Class definition | class someclass: content | class someclass(object): "
"content | The latter also works on Python 2. |"
msgstr ""
"| Definición de clases | class algunaclase: contenido | class "
"algunaclase(object): contenido | El último también funciona en Python 2. |"

#~ msgid "\tfrom controlTypes import ROLE_WINDOW"
#~ msgstr "\tfrom controlTypes import ROLE_WINDOW"
