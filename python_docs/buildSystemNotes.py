# -*- coding: utf-8 -*-
documentation = [
_(u"""# Build System Notes"""),
_(u"""A Python virtual environment is used transparently by the NVDA build system,"""),
_(u"""and all Python dependencies are installed into this environment using `pip`."""),
"",_(u"""NVDA's build system commands will handle all aspects of the virtual environment."""),
_(u"""Developers should not create or activate the virtual environment manually, unless"""),
_(u"""working on the build system itself."""),
"",_(u"""For the documentation on how to _use_ the build system (E.G. building,"""),
_(u"""running NVDA or tests) see the main repository readme file."""),
"",_(u"""## How the build system works"""),
"",_(u"""The virtual environment system used is `venv`."""),
_(u"""Dependencies are installed with `pip` via the `requirements.txt` file."""),
_(u"""Version numbers for dependencies should be used to lock in a version."""),
"",_(u"""The virtual environment is recreated if it is outdated, either due to:"""),
_(u"""- Python version."""),
_(u"""- `pip` requirements."""),
"",_(u"""The user is consulted before modifying / removing a virtual environment that can't be identified"""),
_(u"""as having been created by NVDA's build system."""),
"",_(u"""### Entry points to the build system"""),
"",_(u"""These are the only files expected to be executed directly by a user/developer:"""),
_(u"""- `scons.bat`"""),
_(u"""- `runnvda.bat`"""),
_(u"""- `rununittests.bat`"""),
_(u"""- `runsystemtests.bat`"""),
_(u"""- `runlint.bat`"""),
"",_(u"""**Note:** The `runnvda.bat` script intentionally uses `pyw.exe` to run NVDA as"""),
_(u"""this is the more common and expected way to run NVDA."""),
_(u"""Run NVDA with `py.exe` in order to have standard output/error output to the console."""),
_(u"""This is particularly useful if there is an error in NVDA before logging is initialised."""),
_(u"""To do this, modify the `runnvda.bat` file."""),
"",_(u"""**Note:** Executing `source/nvda.pyw` outside of a virtual environment will produce an error message"""),
_(u"""and early termination."""),
"",_(u"""### Main implementation files:"""),
_(u"""The following files contain the main implementation of the virtual environment setup."""),
"",_(u"""#### `venvUtils/ensureAndActivate.bat`"""),
_(u"""   - Activates the virtual environment."""),
_(u"""   - If necessary, creates and configures it first. """),
_(u"""   - The virtual environment is left active. """),
_(u"""#### `venvUtils/venvCmd.bat`"""),
_(u"""  - Uses `ensureAndActivate.bat` to run a command within the context"""),
_(u"""   of the virtual environment. """),
_(u"""  - The virtual environment is deactivated after the command"""),
_(u"""   completes."""),
_(u"""  - All entry point scripts depend on this."""),
_(u"""#### `venvUtils/ensureVenv.py`"""),
_(u"""- Does the actual work to create and configure the virtual"""),
_(u"""   environment."""),
"",_(u"""## Motivation for using virtual environments"""),
"",_(u"""Ensures the build environment is clean, and there are no conflicts with other installed packages."""),
"",_(u"""NVDA and its build system have many Python dependencies."""),
_(u"""Using `pip` and a virtual environment means:"""),
_(u"""- Updating is easier than git submodules."""),
_(u"""  E.G. wxPython no longer has to be pre-built and stored in our bin repo."""),
_(u"""- Developers need to sync/update their submodules less often."""),
_(u"""- More consistency for dependencies."""),
_(u"""- IDE's can be configured more easily."""),
_(u"""- No conflict between NVDA dependencies and Python packages already installed globally on the"""),
_(u"""  developer's system."""),
_(u"""- Don't interfere with the developer's system. Installing packages globally may break things"""),
_(u"""  outside of NVDA."""),
]