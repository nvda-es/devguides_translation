# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-09-28 08:31+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\python_docs\readme-tests-system.py:3
msgid "## NVDA system tests"
msgstr ""

#: ..\python_docs\readme-tests-system.py:4
msgid "### Dependencies"
msgstr ""

#: ..\python_docs\readme-tests-system.py:5
msgid ""
"This build system uses the Robot test framework to execute the system tests."
msgstr ""

#: ..\python_docs\readme-tests-system.py:6
msgid ""
"Dependencies such as Robot are automatically installed for you when NVDA's "
"build system Python virtual environment is set up, when running any of the "
"high-level commands such as runsystemtests.bat, thus a developer should "
"usually not have to worry about dependencies."
msgstr ""

#: ..\python_docs\readme-tests-system.py:7
msgid " "
msgstr ""

#: ..\python_docs\readme-tests-system.py:8
msgid "### Running the tests"
msgstr ""

#: ..\python_docs\readme-tests-system.py:9
msgid "You can run the tests with `runsystemtests.bat`."
msgstr ""

#: ..\python_docs\readme-tests-system.py:10
msgid ""
"Running this script with no arguments will run all system tests found in "
"tests\\system\\robot, against the current source copy of NVDA."
msgstr ""

#: ..\python_docs\readme-tests-system.py:11
msgid "Any extra arguments provided to this script are forwarded on to Robot."
msgstr ""

#: ..\python_docs\readme-tests-system.py:12
msgid "To run a single test, add the `--test` argument (wildcards accepted)."
msgstr ""

#: ..\python_docs\readme-tests-system.py:13
#: ..\python_docs\readme-tests-system.py:15
#: ..\python_docs\readme-tests-system.py:17
#: ..\python_docs\readme-tests-system.py:19
#: ..\python_docs\readme-tests-system.py:34
msgid "```"
msgstr ""

#: ..\python_docs\readme-tests-system.py:14
msgid "runsystemtests --test \"starts\" ..."
msgstr ""

#: ..\python_docs\readme-tests-system.py:16
msgid "To run all tests with a particular tag use `-i`:"
msgstr ""

#: ..\python_docs\readme-tests-system.py:18
msgid "runsystemtests -i \"chrome\" ..."
msgstr ""

#: ..\python_docs\readme-tests-system.py:20
msgid ""
"Other options exit for specifying tests to run (e.g. by suite, tag, etc)."
msgstr ""

#: ..\python_docs\readme-tests-system.py:21
msgid "Consult `runsystemtests --help`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:22
msgid "### Getting the results"
msgstr ""

#: ..\python_docs\readme-tests-system.py:23
msgid ""
"The process is displayed in the command prompt, for more information "
"consider the [Robot report and NVDA logs](#logs)"
msgstr ""

#: ..\python_docs\readme-tests-system.py:24
msgid "`report.html`, `log.html`, and `output.xml` files."
msgstr ""

#: ..\python_docs\readme-tests-system.py:25
msgid "The logs from NVDA are saved to the `nvdaTestRunLogs` folder"
msgstr ""

#: ..\python_docs\readme-tests-system.py:26
msgid "### Excluding tests"
msgstr ""

#: ..\python_docs\readme-tests-system.py:27
msgid "Tests can be excluded by adding the tag `excluded_from_build` EG:"
msgstr ""

#: ..\python_docs\readme-tests-system.py:28
msgid "```robot"
msgstr ""

#: ..\python_docs\readme-tests-system.py:29
msgid "checkbox labelled by inner element"
msgstr ""

#: ..\python_docs\readme-tests-system.py:30
msgid ""
"\t[Documentation]\tA checkbox labelled by an inner element should not read "
"the label element twice."
msgstr ""

#: ..\python_docs\readme-tests-system.py:31
msgid "\t# Excluded due to intermittent failure."
msgstr ""

#: ..\python_docs\readme-tests-system.py:32
msgid "\t[Tags]\texcluded_from_build"
msgstr ""

#: ..\python_docs\readme-tests-system.py:33
msgid "\tcheckbox_labelled_by_inner_element"
msgstr ""

#: ..\python_docs\readme-tests-system.py:35
msgid ""
"When the tests are run, the option `--exclude excluded_from_build` is given "
"to Robot internally."
msgstr ""

#: ..\python_docs\readme-tests-system.py:36
msgid "See [description of test args](#test-args)"
msgstr ""

#: ..\python_docs\readme-tests-system.py:37
msgid "### Test args"
msgstr ""

#: ..\python_docs\readme-tests-system.py:38
msgid "Common arguments are kept in the `tests\\system\\robotArgs.robot` file."
msgstr ""

#: ..\python_docs\readme-tests-system.py:39
msgid ""
"The `whichNVDA` argument allows the tests to be run against an installed copy"
msgstr ""

#: ..\python_docs\readme-tests-system.py:40
msgid ""
"of NVDA (first ensure it is compatible with the tests). Note valid values "
"are:"
msgstr ""

#: ..\python_docs\readme-tests-system.py:41
msgid ""
"* \"installed\" - when running against the installed version of NVDA, you "
"are likely to get errors in the log unless"
msgstr ""

#: ..\python_docs\readme-tests-system.py:42
msgid "the tests are run from an administrator command prompt."
msgstr ""

#: ..\python_docs\readme-tests-system.py:43
msgid "* \"source\""
msgstr ""

#: ..\python_docs\readme-tests-system.py:44
msgid ""
"The `installDir` argument performs a smoke test on the installation process "
"given a path to the installer exe. For example `--variable installDir:\"."
"\\path\\to\\nvda_installer.exe\"`."
msgstr ""

#: ..\python_docs\readme-tests-system.py:45
msgid ""
"This should be used with `--variable whichNVDA:installed --include "
"installer`."
msgstr ""

#: ..\python_docs\readme-tests-system.py:46
msgid "### Overview"
msgstr ""

#: ..\python_docs\readme-tests-system.py:47
msgid "Robot Framework loads and parses the test files and their libraries."
msgstr ""

#: ..\python_docs\readme-tests-system.py:48
msgid ""
"In our case, generally in the 'setup', NVDA is started as a new process."
msgstr ""

#: ..\python_docs\readme-tests-system.py:49
msgid ""
"It uses a sand box profile, and communication with the test code occurs via "
"a global plugin and synth driver."
msgstr ""

#: ..\python_docs\readme-tests-system.py:50
msgid ""
" The system test should, as much as possible, interact like a user would."
msgstr ""

#: ..\python_docs\readme-tests-system.py:51
msgid ""
" For example, wait for the speech to confirm that an expected dialog is open "
"before taking the next action to interact."
msgstr ""

#: ..\python_docs\readme-tests-system.py:52
msgid ""
"Test declarations go in robot files, these should just specify the name and "
"metadata for the test."
msgstr ""

#: ..\python_docs\readme-tests-system.py:53
msgid ""
"Several issues with the robot language mean it's easier to write the test "
"logic in an accompanying python file."
msgstr ""

#: ..\python_docs\readme-tests-system.py:54
msgid ""
"The `libraries` directory contains files providing \"robot keyword\" "
"libraries."
msgstr ""

#: ..\python_docs\readme-tests-system.py:55
msgid ""
"Most notably, the NvdaLib library contains methods for starting NVDA and "
"speech can be retrieved via the `NVDASpyLib` returned by the module function "
"`getSpyLib()` which is a remote library."
msgstr ""

#: ..\python_docs\readme-tests-system.py:56
msgid ""
"The `nvdaSettingsFiles` directory contains various NVDA config files that "
"are used to construct the NVDA profile in the `%TEMP%` directory."
msgstr ""

#: ..\python_docs\readme-tests-system.py:57
msgid "### How the test setup works"
msgstr ""

#: ..\python_docs\readme-tests-system.py:58
msgid ""
"This section will not go into the details of robot framework, or robot "
"remote server,"
msgstr ""

#: ..\python_docs\readme-tests-system.py:59
msgid "these have their own documentation."
msgstr ""

#: ..\python_docs\readme-tests-system.py:60
msgid "An overview of the files:"
msgstr ""

#: ..\python_docs\readme-tests-system.py:61
msgid ""
"- The `SystemTestSpy` package is responsible for setting up the global "
"plugin and synth driver."
msgstr ""

#: ..\python_docs\readme-tests-system.py:62
msgid ""
"- `libraries/NvdaLib` abstracts the setup and running / exiting of NVDA."
msgstr ""

#: ..\python_docs\readme-tests-system.py:63
msgid ""
"- `speechSpyGlobalPlugin` module creates a RobotFramework Remote Server "
"which gets connected to via the `NvdaLib` library. To make running remote "
"functions easier, methods are created on the remote spy instance which wrap "
"calls to `run_keyword`."
msgstr ""

#: ..\python_docs\readme-tests-system.py:64
msgid "An NVDA sandbox profile is setup in the `%TEMP%` directory like so:"
msgstr ""

#: ..\python_docs\readme-tests-system.py:65
msgid "- `nvdaProfile/`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:66
msgid "  - `nvda.ini` copied from `nvdaSettingsFiles`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:67
msgid "  - `scratchpad/`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:68
msgid "    - `globalPlugins/speechSpyGlobalPlugin/`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:69
msgid "      - `__init__.py` copied from `speechSpyGlobalPlugin.py`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:70
msgid "      - `blockUntilConditionMet.py`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:71
msgid "      - `libs/`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:72
msgid "        - `xmlrpc` from Python install"
msgstr ""

#: ..\python_docs\readme-tests-system.py:73
msgid "        - `robotRemoteServer.py` from Python install"
msgstr ""

#: ..\python_docs\readme-tests-system.py:74
msgid "        - Any other dependencies required."
msgstr ""

#: ..\python_docs\readme-tests-system.py:75
msgid "    - `synthDrivers/`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:76
msgid "      - `speechSpySynthDriver.py`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:77
msgid "For each test, the NVDA configuration file is overwritten."
msgstr ""

#: ..\python_docs\readme-tests-system.py:78
msgid ""
"NVDA is started with the `-c` option to specify this profile directory to be "
"used for config."
msgstr ""

#: ..\python_docs\readme-tests-system.py:79
msgid "### Logs"
msgstr ""

#: ..\python_docs\readme-tests-system.py:80
msgid ""
"Both Robot Framework and NVDA logs are captured in the `testOutput` "
"directory in the repo root."
msgstr ""

#: ..\python_docs\readme-tests-system.py:81
msgid ""
"NVDA logs (NVDA log, stdOut, and stdErr for each test) are under the "
"`nvdaTestRunLogs` directory. "
msgstr ""

#: ..\python_docs\readme-tests-system.py:82
msgid "The log files are named by suite and test name."
msgstr ""

#: ..\python_docs\readme-tests-system.py:83
msgid "### Comparing changes to NVDA Settings"
msgstr ""

#: ..\python_docs\readme-tests-system.py:84
msgid ""
"`.\\runsettingsdiff.bat` is a tool used to compare the settings dialog by "
"reading text and generating screenshots for comparison.  The default "
"behaviour is to run using the source code and output to `.\\tests\\system"
"\\settingsCache\\source`. "
msgstr ""

#: ..\python_docs\readme-tests-system.py:85
msgid "#### Usage"
msgstr ""

#: ..\python_docs\readme-tests-system.py:86
msgid ""
"To check for unreleased changes to the settings dialogs, one can use this "
"tool to compare against two copies of NVDA. "
msgstr ""

#: ..\python_docs\readme-tests-system.py:87
msgid "The following arguments should be used with the script."
msgstr ""

#: ..\python_docs\readme-tests-system.py:88
msgid "Default arguments used are stored  in `.\\tests\\system\\guiDiff.robot`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:89
msgid ""
"- `--variable whichNVDA:[installed|source]` to decide where to run NVDA from"
msgstr ""

#: ..\python_docs\readme-tests-system.py:90
msgid ""
"- `--variable cacheFolder:[filePath]` screenshots and text files of each "
"settings panel are generated in `$cacheFolder\\$currentVersion`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:91
msgid ""
"- `--variable currentVersion:[nvdaVersion]` where `[nvdaVersion]` is used to "
"name the generated screenshot and cache folder"
msgstr ""

#: ..\python_docs\readme-tests-system.py:92
msgid ""
"- `--variable compareVersion:[nvdaVersion]` using a `$nvdaVersion` that this "
"script has already been run against, run the system tests and fail if there "
"are differences between the read text. This generates a multiline diff. "
msgstr ""

#: ..\python_docs\readme-tests-system.py:93
msgid ""
"#### Example usage to compare settings between NVDA 2020.4 and the current "
"source"
msgstr ""

#: ..\python_docs\readme-tests-system.py:94
msgid "1. Install NVDA 2020.4"
msgstr ""

#: ..\python_docs\readme-tests-system.py:95
msgid ""
"1. Run `.\\runsettingsdiff.bat -v whichNVDA:installed -v "
"currentVersion:2020.4`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:96
msgid ""
"1. Run `.\\runsettingsdiff.bat -v whichNVDA:source -v currentVersion:source -"
"v compareVersion:2020.4`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:97
msgid "   - The test will fail and display a diff of any read changes"
msgstr ""

#: ..\python_docs\readme-tests-system.py:98
msgid "1. Use a diff tool to compare folders:"
msgstr ""

#: ..\python_docs\readme-tests-system.py:99
msgid ""
"   - `diff ./tests/system/settingsCache/2020.4 ./tests/system/settingsCache/"
"source`"
msgstr ""

#: ..\python_docs\readme-tests-system.py:100
msgid ""
"   - [ImageMagick Compare](https://imagemagick.org/script/compare.php) can "
"be used to compare images"
msgstr ""
