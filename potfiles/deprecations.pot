# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-22 09:10+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\python_docs\deprecations.py:3
msgid ""
"The NVDA API must maintain compatibility with add-ons throughout yearly "
"development cycles."
msgstr ""

#: ..\python_docs\deprecations.py:4
msgid ""
"The first release of a year, i.e. `20XX.1`, is when the NVDA API can "
"introduce breaking changes."
msgstr ""

#: ..\python_docs\deprecations.py:5
msgid ""
"In order to improve the NVDA API, changes that will break future "
"compatibility can be implemented, as long they retain backwards "
"compatibility until the `20XX.1` release."
msgstr ""

#: ..\python_docs\deprecations.py:6
msgid ""
"This can be done by using a version check to automate deprecation. For "
"example, if you wish to replace usages of `foo` with `bar`. When we begin "
"work on `NEXT_YEAR`, `foo` will no longer be part of the NVDA API and all "
"internal usages must be removed prior. "
msgstr ""

#: ..\python_docs\deprecations.py:7 ..\python_docs\deprecations.py:13
msgid "```python"
msgstr ""

#: ..\python_docs\deprecations.py:8
msgid "from buildVersion import version_year"
msgstr ""

#: ..\python_docs\deprecations.py:9
msgid "if version_year < NEXT_YEAR:"
msgstr ""

#: ..\python_docs\deprecations.py:10
msgid "\tfoo = bar"
msgstr ""

#: ..\python_docs\deprecations.py:11 ..\python_docs\deprecations.py:16
msgid "```"
msgstr ""

#: ..\python_docs\deprecations.py:12
msgid ""
"To ensure a module retains the same symbol names being importable, check "
"across versions what is imported using the NVDA python console."
msgstr ""

#: ..\python_docs\deprecations.py:14
msgid "import controlTypes"
msgstr ""

#: ..\python_docs\deprecations.py:15
msgid "dir(controlTypes)"
msgstr ""

#: ..\python_docs\deprecations.py:17
msgid ""
"Changes different to moving or renaming symbols need to be considered "
"carefully with a different approach. "
msgstr ""

#: ..\python_docs\deprecations.py:18
msgid ""
"Any API breaking changes such as deprecations marked for removal should be "
"commented with the year of intended removal, and notes on how to implement "
"the API change as an add-on developer and NVDA developer."
msgstr ""
