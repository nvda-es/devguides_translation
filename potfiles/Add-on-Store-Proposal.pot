# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-23 14:47+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\python_docs\Add-on-Store-Proposal.py:3
msgid "# Add on Store Proposal"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:4
msgid ""
"The intention of this proposal is to improve the end-to-end process and "
"supporting infrastructure for hosting Addons."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:5
msgid ""
"This is the current plan from NV Access, it is a simplification of a [more "
"complicated and highly automated plan](https://github.com/nvaccess/addon-"
"store-submission/blob/c7d6f4fd9187fd0112de66b00caa62d774430d09/README.md). "
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:6
msgid ""
"Inspiration has been taken from [Windows Package Manager Community repo]"
"(https://github.com/microsoft/winget-pkgs)"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:7
msgid ""
"A highly automated process would be ideal, and we can keep the ideas in mind "
"to work in that direction."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:8
msgid ""
"The main goal of this is to enable an \"NVDA addon store\" accessible from "
"within NVDA itself."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:9
msgid ""
"In this proposal the word \"store\" is used to refer to the system used to "
"store metadata about add-on releases and APIs to access this data."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:10
msgid "Aims:"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:11
msgid ""
"- Enable any necessary, API, process, or infrastructure to support users to "
"browse, search, install and update Addons for NVDA."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:12
msgid "- A secure and robust provision of addon-metadata."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:13
msgid "- There is no intention of supporting paid addons at this stage."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:14
msgid ""
"- The process is intended to be as transparent as possible to make it simple "
"(for developers) to understand the current state of the store or the state "
"of a submission of a new / updated addon pending review."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:15
msgid ""
"The process should enable authors and reviewers to learn about and improve "
"the addon-review process."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:16
msgid "### About security "
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:17
msgid ""
"Ensure that an add-on itself is safe to run, is a challenge that won't be "
"addressed by this proposal."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:18
msgid ""
"Instead, this system can ensure that all updates to the metadata for add-on "
"versions are reviewed, and allows clients of the system (website, NVDA) to "
"verify that the addon package still matches what was reviewed."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:19
msgid "### Past discussions"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:20
msgid ""
"- About review process [conversation on the addons mailing list](https://"
"nvda-addons.groups.io/g/nvda-addons/topic/69393202#10878) has been about "
"reviewing Addons."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:21
msgid ""
"- While NV Access has some opinions on the review process, this proposal "
"will first concern itself with the mechanics of the system rather than the "
"considerations for a reviewer when looking at an addon."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:22
msgid ""
"For now, this step will just be referred to as 'review of addon performed'."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:23
msgid "Later a \"addon review check list\" will be created."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:24
msgid "### Non-exclusivity"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:25
msgid ""
"This proposal does not intend to restrict Addon authors from developing, "
"publishing, and distributing Addons outside of this store."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:26
msgid "NVDA will still allow local installation from a `*.nvda-addon` file."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:27
msgid "## Too Long; Didn't Read for Addon authors"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:28
msgid ""
"With this proposal if an addon author wishes to submit their addon to be "
"visible in this addon store they will need to:"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:29
msgid ""
"- Add a file to this repo (via a pull request) containing metadata about "
"published addons, including a download URL and hash of the addon package."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:30
msgid ""
"- To facilitate reviews, store their addon in an open (not private) "
"repository."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:31
msgid ""
"- Get an \"add-on reviewer\" to review your addon and metadata submission, "
"when this is approved it will be merged making it available."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:32
msgid "## Too Long; Didn't Read for Addon reviewers"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:33
msgid "As an Addon reviewer you will:"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:34
msgid "- Look at pending PR's on the `addon-store-submission` repository."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:35
msgid "- Follow the review process (yet to be documented)."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:36
msgid ""
"- Either 'approve' the PR, or 'request changes' while providing feedback."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:37
msgid "## Considerations"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:38
msgid "- Submissions and reviews should be easy to find and get the status of."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:39
msgid ""
"- Make it possible to automate many steps in the process, saving reviewers "
"time."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:40
msgid ""
"- Once submitted an addon version should be immutable. No changing the addon "
"on an external server, it must be updated in the store via the submission "
"process."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:41
msgid ""
"- Allow addon authors to easily revoke a version if it is buggy / no longer "
"supported. It should no longer be presented in the store, halting "
"installation by new users."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:42
msgid ""
"- Enable support in the store for multiple versions of an Addon, based on "
"NVDA version."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:43
msgid ""
"  - EG addon version 1.2.5 for NVDA 2019.3 and addon version 1.3.2 for NVDA "
"2020.1"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:44
msgid "- Enable support in the store for 'pre-release' Addons, for instance:"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:45
msgid "  - Addons being developed against alpha / beta NVDA."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:46
msgid "  - Addons that want early feedback from end users."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:47
msgid "  - End users can choose \"show me pre-release addons\""
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:48
msgid "## Overview"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:49
msgid "- Use GitHub reviews for store submissions."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:50
msgid ""
"- Use GitHub for storage of meta-data for addons available from the store."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:51
msgid ""
"- Use GitHub actions (or other integrations) to automate construction of the "
"data store, and as many of the review checks as possible."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:52
msgid "  This will all be open source and extensible by the community."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:53
msgid "### Why GitHub reviews?"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:54
msgid ""
"- GitHub is where much of the NVDA development ecosystem is already based."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:55
msgid ""
"- Handles all the of the CRUD ([create, read, update, delete](https://en."
"wikipedia.org/wiki/CRUD)) for users, authentication is handled, and we can "
"determine how a user relates to an addon repository and what their "
"permissions are for that repository. Are they actually an owner / maintainer?"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:56
msgid ""
"- GitHub has a review system that allows for proposing changes and "
"discussing these changes. We can leverage this for a store submission and "
"review process."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:57
msgid "- GitHub PR's provided an atomic view of a store submission."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:58
msgid ""
"- Interested parties can 'watch' PR's they care about without being "
"subjected to the noise from PR's they don't care about."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:59
msgid "- The result (open / merged / closed) of the PR is clear."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:60
msgid ""
"- GitHub allows us to manage permissions for accepting reviews more easily."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:61
msgid "## Infrastructure"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:62
msgid "- `addon-store-submission` GitHub Repository"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:63
msgid "  - For Addon authors / reviewers."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:64
msgid "  - Where new Addon versions are submitted"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:65
msgid "  - Where reviews of Addon submissions happen"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:66
msgid "  - For storage of meta-data about addons \"in the store\""
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:67
msgid ""
"  - This repository acts as a back-end database, but is more transparent."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:68
msgid ""
"  - Since our needs are simple, preconfigured \"views\" of the data will "
"suffice."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:69
msgid ""
"- NV Access server - To provide the endpoint for \"available Addons\" meta-"
"data"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:70
msgid ""
"  - While this is technically not necessary, it provides a good separation "
"from implementation."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:71
msgid ""
"    If we wished to change our storage mechanism, we would not be breaking "
"old versions of NVDA."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:72
msgid "## `addon-store-submission` GitHub Repository"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:73
msgid ""
"Essentially this repository holds metadata about all the accepted versions "
"of Addons which are included in the store."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:74
msgid ""
"Metadata about old versions of an addon remains until it is explicitly "
"removed or becomes invalid, allowing delivery to older versions of NVDA, or "
"as a fall back in case the newer version is revoked after a critical bug is "
"found."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:75
msgid ""
"Addons versions are submitted by submitting a pull request, adding a file "
"for that version of the addon."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:76
msgid "### Layout"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:77
msgid "Root directory of repository:"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:78
msgid " - `readme.md` - A guide for submission"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:79
msgid " - `addons/publisher1/addon1/majorVersion.minorVersion.patch.json`"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:80
msgid " - `addons/publisher1/addon2/majorVersion.minorVersion.patch.json`"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:81
msgid " - `addons/publisher2/addon3/majorVersion.minorVersion.patch.json`"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:82
msgid ""
"Note: `publisher.addonName` will become the addon ID, and must be unique and "
"match the addon ID from the addon manifest."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:83
msgid ""
"Example for the NV Access addon, 'NVDA - OCR': `addons/nvaccess/nvda-"
"ocr/1.6.0.json`"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:84
msgid "### Metadata format"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:85
msgid ""
"For a full description of the schema see:` _tools/addonVersion_schema.json`"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:86
msgid "- This includes an example of the file contents."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:87
msgid "### Submitting an Addon version"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:88
msgid "#### Pre-requisites:"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:89
msgid "- Familiarity with GitHub"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:90
msgid "- Familiarity with Git, including working with branches."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:91
msgid "Process to add a new NVDA-addon version:"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:92
msgid "1. Fork the `addon-store-submission` repository"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:93
msgid "1. On a new branch, copy the `_template_addon_release.json` file. "
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:94
msgid "   - Rename / move the file to `<publisher>/<addonName>/<version>.json`"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:95
msgid ""
"   - `<publisher>` is the name of the add-on developer, E.G. \"nvaccess\""
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:96
msgid "   - `<addonName>` is the name of the add-on, E.G. \"nv-speech-player\""
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:97
msgid ""
"   - `<version>` is the add-on version in the form: `Major.Minor.Patch` E.G. "
"\"2.4.1\""
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:98
msgid "1. Create a PR on `addon-store-submission` repository"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:99
msgid "1. Automated checks for common issues will complete."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:100
msgid "1. A review is performed (resulting in: request changes, approval)"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:101
msgid "   - Conducted by an NVDA add-on reviewer."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:102
msgid ""
"   - Manual review is done according to some published review check list (so "
"that everyone knows what to expect)"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:103
msgid "1. The PR is merged, the add-on becomes available in the store."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:104
msgid "### Checked during review"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:105
msgid "Many of these can be automated."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:106
msgid "- Each modified file conforms to the schema"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:107
msgid "- Download URL is valid"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:108
msgid "- File from URL matches Sha256"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:109
msgid "- Version number matches add-on manifest."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:110
msgid ""
"- The file ID (`<publisher>.<addonName>`) matches the manifest 'name' field"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:111
msgid ""
"- The version number from the file name is valid and matches the version in "
"the manifest."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:112
msgid "### Concerns"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:113
msgid ""
"- With this ID scheme many add-ons will need to change their ID. Will this "
"require previously saved user config to be moved to a new section of the "
"config file?"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:114
msgid "### Other notes"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:115
msgid ""
"- By using a git repository and and PR process, `git blame` and `git log` "
"can be used to get more context about addons listed in the store. For "
"instance:"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:116
msgid "  - When was the addon accepted"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:117
msgid "  - What did the review look like"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:118
msgid "  - How often does this addon have updates accepted"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:119
msgid "- GitHub allows assigning reviews to reviewers"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:120
msgid "## API data generation details"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:121
msgid ""
"The NV Access server will be configured to respond to a Webhook to pull from "
"this repository and run code to transform"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:122
msgid "the data."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:123
msgid ""
"This can regenerate the required views of the data for the exposed API's"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:124
msgid "### Overview"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:125
msgid ""
"For each version of NVDA, the meta-data of the most recent (the highest "
"version number) of each Addon is automatically"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:126
msgid "added, based on the data in 'addon-store-submission'."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:127
msgid ""
"Code for this will be stored in the `_tools` folder. This will enable "
"interested parties to generate the same view of"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:128
msgid "the data locally."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:129
msgid "### Data views"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:130
msgid "Required transformations of the data:"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:131
msgid "- `/NVDA API Version/addon-1-ID/release.json`"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:132
msgid "- `/NVDA API Version/addon-1-ID/pre-rel.json`"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:133
msgid "- `/NVDA API Version/addon-2-ID/release.json`"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:134
msgid "- `/NVDA API Version/all.json`"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:135
msgid "Notes:"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:136
msgid ""
"- 'NVDA API Version' will be something like '2019.3', there will be one "
"folder for each NVDA API Version."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:137
msgid ""
"- The `pre-rel.json` and `release.json` contain the information necessary "
"for a store entry."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:138
msgid ""
"- The contents of `all.data` is all (pre-release and release) data for this "
"NVDA API version together."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:139
msgid ""
"- The contents for each addon will include all the technical details "
"required for NVDA to download, verify file integrity, and install."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:140
msgid ""
"- The file will include translations (if available) for the displayable "
"metadata."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:141
msgid ""
"The simplicity of this is that the NV Access server can just forward these "
"files on directly when asked"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:142
msgid ""
"\"what are the latest Addons for NVDA API Version X\" or \"What is the "
"latest version of Addon-ID for NVDA API Version X\"."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:143
msgid ""
"Using the NV Access server as the endpoint for this is important in case the "
"implementation has to change or be migrated"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:144
msgid "away from GitHub for some reason."
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:145
msgid "## Suffix"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:146
msgid "### Terminology: Addon version vs Addon release"
msgstr ""

#: ..\python_docs\Add-on-Store-Proposal.py:147
msgid ""
"Since this proposal supports pre-release addons, I have tried to avoid using "
"the term \"addon release\", instead favouring \"addon version\"."
msgstr ""
